

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 31 15:52:38 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F26K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	intcode,global,reloc=2,class=CODE,delta=1
     6                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57  0000                     
    58                           ; Version 2.20
    59                           ; Generated 05/05/2020 GMT
    60                           ; 
    61                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F26K40 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     
    93                           	psect	intcode
    94  000008  EF04 F020          	goto	16392	;# 
    95                           
    96                           	psect	intcodelo
    97  000018  EF0C F020          	goto	16408	;# 
    98  0000                     
    99 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   100  0000                     
   101 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   102  0000                     
   103 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   104  0000                     
   105                           	psect	idataBANK0
   106  0011EC                     __pidataBANK0:
   107                           	callstack 0
   108                           
   109                           ;initializer for _Header
   110  0011EC  00                 	db	0
   111  0011ED  0000               	dw	0
   112  0011EF  0000               	dw	0
   113  0011F1  00                 	db	0
   114  0011F2  00                 	db	0
   115  0011F3  BC                 	db	low _BOOT_GetHeader
   116  0011F4  09                 	db	high _BOOT_GetHeader
   117  0011F5  00                 	db	0
   118  0011F6  00                 	db	0
   119  0011F7  00                 	db	0
   120  0011F8  00                 	db	0
   121  0011F9  00                 	db	0
   122  0011FA  00                 	db	0
   123  0011FB  00                 	db	0
   124  0011FC  00                 	db	0
   125  0011FD  00                 	db	0
   126  0011FE  00                 	db	0
   127  0011FF  00                 	db	0
   128  001200  00                 	db	0
   129  001201  00                 	db	0
   130  001202  00                 	db	0
   131  001203  00                 	db	0
   132  001204  00                 	db	0
   133  001205  00                 	db	0
   134  001206  00                 	db	0
   135  001207  00                 	db	0
   136  001208  00                 	db	0
   137  001209  00                 	db	0
   138  00120A  00                 	db	0
   139  00120B  00                 	db	0
   140  00120C  00                 	db	0
   141  00120D  00                 	db	0
   142  00120E  00                 	db	0
   143  00120F  00                 	db	0
   144  001210  00                 	db	0
   145  001211  00                 	db	0
   146  001212  00                 	db	0
   147  001213  00                 	db	0
   148  001214  00                 	db	0
   149  001215  00                 	db	0
   150  001216  00                 	db	0
   151  001217  00                 	db	0
   152  001218  00                 	db	0
   153  001219  00                 	db	0
   154  00121A  00                 	db	0
   155  00121B  00                 	db	0
   156  00121C  00                 	db	0
   157  00121D  00                 	db	0
   158  00121E  00                 	db	0
   159  00121F  00                 	db	0
   160  001220  00                 	db	0
   161  001221  00                 	db	0
   162  001222  00                 	db	0
   163  001223  00                 	db	0
   164  001224  00                 	db	0
   165  001225  00                 	db	0
   166  001226  00                 	db	0
   167  001227  00                 	db	0
   168  001228  00                 	db	0
   169  001229  00                 	db	0
   170  00122A  00                 	db	0
   171  00122B  00                 	db	0
   172  00122C  00                 	db	0
   173  00122D  00                 	db	0
   174  00122E  00                 	db	0
   175  00122F  00                 	db	0
   176  001230  00                 	db	0
   177  001231  00                 	db	0
   178  001232  00                 	db	0
   179  001233  00                 	db	0
   180  001234  00                 	db	0
   181  001235  00                 	db	0
   182  001236  00                 	db	0
   183  001237  00                 	db	0
   184                           
   185                           	psect	nvBANK0
   186  0000FD                     __pnvBANK0:
   187                           	callstack 0
   188  0000FD                     _EUSART1_FramingErrorHandler:
   189                           	callstack 0
   190  0000FD                     	ds	2
   191                           
   192                           	psect	nvBANK1
   193  00018A                     __pnvBANK1:
   194                           	callstack 0
   195  00018A                     _EUSART1_ErrorHandler:
   196                           	callstack 0
   197  00018A                     	ds	2
   198  00018C                     _EUSART1_OverrunErrorHandler:
   199                           	callstack 0
   200  00018C                     	ds	2
   201  0000                     _PIR7bits	set	3793
   202  0000                     _PIR3bits	set	3789
   203  0000                     _RC6PPS	set	3837
   204  0000                     _RX1PPS	set	3765
   205  0000                     _PMD5	set	3814
   206  0000                     _PMD4	set	3813
   207  0000                     _PMD3	set	3812
   208  0000                     _PMD2	set	3811
   209  0000                     _PMD1	set	3810
   210  0000                     _PMD0	set	3809
   211  0000                     _OSCTUNE	set	3805
   212  0000                     _OSCFRQ	set	3806
   213  0000                     _OSCEN	set	3804
   214  0000                     _OSCCON3	set	3802
   215  0000                     _OSCCON1	set	3800
   216  0000                     _INLVLE	set	3882
   217  0000                     _INLVLC	set	3869
   218  0000                     _INLVLB	set	3861
   219  0000                     _INLVLA	set	3853
   220  0000                     _SLRCONC	set	3870
   221  0000                     _SLRCONB	set	3862
   222  0000                     _SLRCONA	set	3854
   223  0000                     _ODCONC	set	3871
   224  0000                     _ODCONB	set	3863
   225  0000                     _ODCONA	set	3855
   226  0000                     _WPUC	set	3872
   227  0000                     _WPUA	set	3856
   228  0000                     _WPUB	set	3864
   229  0000                     _WPUE	set	3885
   230  0000                     _ANSELA	set	3857
   231  0000                     _ANSELB	set	3865
   232  0000                     _ANSELC	set	3873
   233  0000                     _PORTAbits	set	3981
   234  0000                     _NVMDAT	set	3968
   235  0000                     _NVMADRL	set	3966
   236  0000                     _NVMADRH	set	3967
   237  0000                     _NVMCON2	set	3970
   238  0000                     _INTCONbits	set	4082
   239  0000                     _TABLAT	set	4085
   240  0000                     _TBLPTRL	set	4086
   241  0000                     _TBLPTRH	set	4087
   242  0000                     _TBLPTRU	set	4088
   243  0000                     _NVMCON1bits	set	3969
   244  0000                     _TX1REG	set	3994
   245  0000                     _RC1REG	set	3993
   246  0000                     _RC1STAbits	set	3997
   247  0000                     _TX1STAbits	set	3998
   248  0000                     _SP1BRGH	set	3996
   249  0000                     _SP1BRGL	set	3995
   250  0000                     _TX1STA	set	3998
   251  0000                     _RC1STA	set	3997
   252  0000                     _BAUD1CON	set	3999
   253  0000                     _TRISC	set	3978
   254  0000                     _TRISB	set	3977
   255  0000                     _TRISA	set	3976
   256  0000                     _LATC	set	3973
   257  0000                     _LATB	set	3972
   258  0000                     _LATA	set	3971
   259                           
   260                           	psect	mediumconst
   261  003E74                     __pmediumconst:
   262                           	callstack 0
   263  003E74  00                 	db	0
   264  003E75                     STR_19:
   265  003E75  73                 	db	115	;'s'
   266  003E76  75                 	db	117	;'u'
   267  003E77  63                 	db	99	;'c'
   268  003E78  63                 	db	99	;'c'
   269  003E79  65                 	db	101	;'e'
   270  003E7A  73                 	db	115	;'s'
   271  003E7B  73                 	db	115	;'s'
   272  003E7C  66                 	db	102	;'f'
   273  003E7D  75                 	db	117	;'u'
   274  003E7E  6C                 	db	108	;'l'
   275  003E7F  6C                 	db	108	;'l'
   276  003E80  79                 	db	121	;'y'
   277  003E81  20                 	db	32
   278  003E82  65                 	db	101	;'e'
   279  003E83  72                 	db	114	;'r'
   280  003E84  61                 	db	97	;'a'
   281  003E85  73                 	db	115	;'s'
   282  003E86  65                 	db	101	;'e'
   283  003E87  64                 	db	100	;'d'
   284  003E88  20                 	db	32
   285  003E89  66                 	db	102	;'f'
   286  003E8A  6C                 	db	108	;'l'
   287  003E8B  61                 	db	97	;'a'
   288  003E8C  73                 	db	115	;'s'
   289  003E8D  68                 	db	104	;'h'
   290  003E8E  65                 	db	101	;'e'
   291  003E8F  64                 	db	100	;'d'
   292  003E90  20                 	db	32
   293  003E91  20                 	db	32
   294  003E92  0D                 	db	13
   295  003E93  0A                 	db	10
   296  003E94  00                 	db	0
   297  003E95                     STR_2:
   298  003E95  49                 	db	73	;'I'
   299  003E96  4E                 	db	78	;'N'
   300  003E97  20                 	db	32
   301  003E98  61                 	db	97	;'a'
   302  003E99  20                 	db	32
   303  003E9A  73                 	db	115	;'s'
   304  003E9B  65                 	db	101	;'e'
   305  003E9C  74                 	db	116	;'t'
   306  003E9D  75                 	db	117	;'u'
   307  003E9E  70                 	db	112	;'p'
   308  003E9F  20                 	db	32
   309  003EA0  62                 	db	98	;'b'
   310  003EA1  6F                 	db	111	;'o'
   311  003EA2  6F                 	db	111	;'o'
   312  003EA3  74                 	db	116	;'t'
   313  003EA4  6C                 	db	108	;'l'
   314  003EA5  6F                 	db	111	;'o'
   315  003EA6  61                 	db	97	;'a'
   316  003EA7  64                 	db	100	;'d'
   317  003EA8  65                 	db	101	;'e'
   318  003EA9  72                 	db	114	;'r'
   319  003EAA  20                 	db	32
   320  003EAB  6D                 	db	109	;'m'
   321  003EAC  6F                 	db	111	;'o'
   322  003EAD  64                 	db	100	;'d'
   323  003EAE  65                 	db	101	;'e'
   324  003EAF  20                 	db	32
   325  003EB0  20                 	db	32
   326  003EB1  0D                 	db	13
   327  003EB2  0A                 	db	10
   328  003EB3  00                 	db	0
   329  003EB4                     STR_17:
   330  003EB4  76                 	db	118	;'v'
   331  003EB5  65                 	db	101	;'e'
   332  003EB6  72                 	db	114	;'r'
   333  003EB7  73                 	db	115	;'s'
   334  003EB8  69                 	db	105	;'i'
   335  003EB9  6F                 	db	111	;'o'
   336  003EBA  6E                 	db	110	;'n'
   337  003EBB  20                 	db	32
   338  003EBC  72                 	db	114	;'r'
   339  003EBD  65                 	db	101	;'e'
   340  003EBE  61                 	db	97	;'a'
   341  003EBF  64                 	db	100	;'d'
   342  003EC0  20                 	db	32
   343  003EC1  73                 	db	115	;'s'
   344  003EC2  75                 	db	117	;'u'
   345  003EC3  63                 	db	99	;'c'
   346  003EC4  63                 	db	99	;'c'
   347  003EC5  65                 	db	101	;'e'
   348  003EC6  73                 	db	115	;'s'
   349  003EC7  73                 	db	115	;'s'
   350  003EC8  66                 	db	102	;'f'
   351  003EC9  75                 	db	117	;'u'
   352  003ECA  6C                 	db	108	;'l'
   353  003ECB  6C                 	db	108	;'l'
   354  003ECC  79                 	db	121	;'y'
   355  003ECD  20                 	db	32
   356  003ECE  0D                 	db	13
   357  003ECF  0A                 	db	10
   358  003ED0  00                 	db	0
   359  003ED1                     STR_15:
   360  003ED1  66                 	db	102	;'f'
   361  003ED2  61                 	db	97	;'a'
   362  003ED3  69                 	db	105	;'i'
   363  003ED4  6C                 	db	108	;'l'
   364  003ED5  65                 	db	101	;'e'
   365  003ED6  64                 	db	100	;'d'
   366  003ED7  20                 	db	32
   367  003ED8  74                 	db	116	;'t'
   368  003ED9  6F                 	db	111	;'o'
   369  003EDA  20                 	db	32
   370  003EDB  72                 	db	114	;'r'
   371  003EDC  65                 	db	101	;'e'
   372  003EDD  61                 	db	97	;'a'
   373  003EDE  64                 	db	100	;'d'
   374  003EDF  20                 	db	32
   375  003EE0  76                 	db	118	;'v'
   376  003EE1  65                 	db	101	;'e'
   377  003EE2  72                 	db	114	;'r'
   378  003EE3  73                 	db	115	;'s'
   379  003EE4  69                 	db	105	;'i'
   380  003EE5  6F                 	db	111	;'o'
   381  003EE6  6E                 	db	110	;'n'
   382  003EE7  20                 	db	32
   383  003EE8  0D                 	db	13
   384  003EE9  0A                 	db	10
   385  003EEA  00                 	db	0
   386  003EEB                     STR_18:
   387  003EEB  66                 	db	102	;'f'
   388  003EEC  61                 	db	97	;'a'
   389  003EED  69                 	db	105	;'i'
   390  003EEE  6C                 	db	108	;'l'
   391  003EEF  65                 	db	101	;'e'
   392  003EF0  64                 	db	100	;'d'
   393  003EF1  20                 	db	32
   394  003EF2  74                 	db	116	;'t'
   395  003EF3  6F                 	db	111	;'o'
   396  003EF4  20                 	db	32
   397  003EF5  65                 	db	101	;'e'
   398  003EF6  72                 	db	114	;'r'
   399  003EF7  61                 	db	97	;'a'
   400  003EF8  73                 	db	115	;'s'
   401  003EF9  65                 	db	101	;'e'
   402  003EFA  20                 	db	32
   403  003EFB  66                 	db	102	;'f'
   404  003EFC  6C                 	db	108	;'l'
   405  003EFD  61                 	db	97	;'a'
   406  003EFE  73                 	db	115	;'s'
   407  003EFF  68                 	db	104	;'h'
   408  003F00  20                 	db	32
   409  003F01  0D                 	db	13
   410  003F02  0A                 	db	10
   411  003F03  00                 	db	0
   412  003F04                     STR_3:
   413  003F04  61                 	db	97	;'a'
   414  003F05  70                 	db	112	;'p'
   415  003F06  70                 	db	112	;'p'
   416  003F07  6C                 	db	108	;'l'
   417  003F08  69                 	db	105	;'i'
   418  003F09  63                 	db	99	;'c'
   419  003F0A  61                 	db	97	;'a'
   420  003F0B  74                 	db	116	;'t'
   421  003F0C  69                 	db	105	;'i'
   422  003F0D  6F                 	db	111	;'o'
   423  003F0E  6E                 	db	110	;'n'
   424  003F0F  20                 	db	32
   425  003F10  72                 	db	114	;'r'
   426  003F11  75                 	db	117	;'u'
   427  003F12  6E                 	db	110	;'n'
   428  003F13  6E                 	db	110	;'n'
   429  003F14  69                 	db	105	;'i'
   430  003F15  6E                 	db	110	;'n'
   431  003F16  67                 	db	103	;'g'
   432  003F17  2E                 	db	46
   433  003F18  2E                 	db	46
   434  003F19  2E                 	db	46
   435  003F1A  0D                 	db	13
   436  003F1B  0A                 	db	10
   437  003F1C  00                 	db	0
   438  003F1D                     STR_8:
   439  003F1D  63                 	db	99	;'c'
   440  003F1E  61                 	db	97	;'a'
   441  003F1F  6C                 	db	108	;'l'
   442  003F20  63                 	db	99	;'c'
   443  003F21  75                 	db	117	;'u'
   444  003F22  6C                 	db	108	;'l'
   445  003F23  61                 	db	97	;'a'
   446  003F24  74                 	db	116	;'t'
   447  003F25  65                 	db	101	;'e'
   448  003F26  20                 	db	32
   449  003F27  63                 	db	99	;'c'
   450  003F28  72                 	db	114	;'r'
   451  003F29  63                 	db	99	;'c'
   452  003F2A  20                 	db	32
   453  003F2B  3D                 	db	61	;'='
   454  003F2C  20                 	db	32
   455  003F2D  30                 	db	48	;'0'
   456  003F2E  78                 	db	120	;'x'
   457  003F2F  25                 	db	37
   458  003F30  58                 	db	88	;'X'
   459  003F31  20                 	db	32
   460  003F32  0D                 	db	13
   461  003F33  0A                 	db	10
   462  003F34  00                 	db	0
   463  003F35                     STR_1:
   464  003F35  49                 	db	73	;'I'
   465  003F36  4E                 	db	78	;'N'
   466  003F37  20                 	db	32
   467  003F38  61                 	db	97	;'a'
   468  003F39  20                 	db	32
   469  003F3A  62                 	db	98	;'b'
   470  003F3B  6F                 	db	111	;'o'
   471  003F3C  6F                 	db	111	;'o'
   472  003F3D  74                 	db	116	;'t'
   473  003F3E  6C                 	db	108	;'l'
   474  003F3F  6F                 	db	111	;'o'
   475  003F40  61                 	db	97	;'a'
   476  003F41  64                 	db	100	;'d'
   477  003F42  65                 	db	101	;'e'
   478  003F43  72                 	db	114	;'r'
   479  003F44  20                 	db	32
   480  003F45  6D                 	db	109	;'m'
   481  003F46  6F                 	db	111	;'o'
   482  003F47  64                 	db	100	;'d'
   483  003F48  65                 	db	101	;'e'
   484  003F49  20                 	db	32
   485  003F4A  0D                 	db	13
   486  003F4B  0A                 	db	10
   487  003F4C  00                 	db	0
   488  003F4D                     STR_13:
   489  003F4D  77                 	db	119	;'w'
   490  003F4E  72                 	db	114	;'r'
   491  003F4F  69                 	db	105	;'i'
   492  003F50  74                 	db	116	;'t'
   493  003F51  65                 	db	101	;'e'
   494  003F52  20                 	db	32
   495  003F53  73                 	db	115	;'s'
   496  003F54  75                 	db	117	;'u'
   497  003F55  63                 	db	99	;'c'
   498  003F56  63                 	db	99	;'c'
   499  003F57  65                 	db	101	;'e'
   500  003F58  73                 	db	115	;'s'
   501  003F59  73                 	db	115	;'s'
   502  003F5A  66                 	db	102	;'f'
   503  003F5B  75                 	db	117	;'u'
   504  003F5C  6C                 	db	108	;'l'
   505  003F5D  6C                 	db	108	;'l'
   506  003F5E  79                 	db	121	;'y'
   507  003F5F  20                 	db	32
   508  003F60  0D                 	db	13
   509  003F61  0A                 	db	10
   510  003F62  00                 	db	0
   511  003F63                     STR_11:
   512  003F63  65                 	db	101	;'e'
   513  003F64  6E                 	db	110	;'n'
   514  003F65  64                 	db	100	;'d'
   515  003F66  20                 	db	32
   516  003F67  6F                 	db	111	;'o'
   517  003F68  66                 	db	102	;'f'
   518  003F69  20                 	db	32
   519  003F6A  66                 	db	102	;'f'
   520  003F6B  69                 	db	105	;'i'
   521  003F6C  6C                 	db	108	;'l'
   522  003F6D  65                 	db	101	;'e'
   523  003F6E  20                 	db	32
   524  003F6F  65                 	db	101	;'e'
   525  003F70  72                 	db	114	;'r'
   526  003F71  72                 	db	114	;'r'
   527  003F72  6F                 	db	111	;'o'
   528  003F73  72                 	db	114	;'r'
   529  003F74  20                 	db	32
   530  003F75  0D                 	db	13
   531  003F76  0A                 	db	10
   532  003F77  00                 	db	0
   533  003F78                     STR_9:
   534  003F78  63                 	db	99	;'c'
   535  003F79  72                 	db	114	;'r'
   536  003F7A  63                 	db	99	;'c'
   537  003F7B  20                 	db	32
   538  003F7C  6E                 	db	110	;'n'
   539  003F7D  6F                 	db	111	;'o'
   540  003F7E  74                 	db	116	;'t'
   541  003F7F  20                 	db	32
   542  003F80  76                 	db	118	;'v'
   543  003F81  65                 	db	101	;'e'
   544  003F82  72                 	db	114	;'r'
   545  003F83  69                 	db	105	;'i'
   546  003F84  66                 	db	102	;'f'
   547  003F85  69                 	db	105	;'i'
   548  003F86  65                 	db	101	;'e'
   549  003F87  64                 	db	100	;'d'
   550  003F88  20                 	db	32
   551  003F89  0D                 	db	13
   552  003F8A  0A                 	db	10
   553  003F8B  00                 	db	0
   554  003F8C                     STR_4:
   555  003F8C  52                 	db	82	;'R'
   556  003F8D  65                 	db	101	;'e'
   557  003F8E  61                 	db	97	;'a'
   558  003F8F  64                 	db	100	;'d'
   559  003F90  69                 	db	105	;'i'
   560  003F91  6E                 	db	110	;'n'
   561  003F92  67                 	db	103	;'g'
   562  003F93  20                 	db	32
   563  003F94  66                 	db	102	;'f'
   564  003F95  6C                 	db	108	;'l'
   565  003F96  61                 	db	97	;'a'
   566  003F97  73                 	db	115	;'s'
   567  003F98  68                 	db	104	;'h'
   568  003F99  2E                 	db	46
   569  003F9A  2E                 	db	46
   570  003F9B  2E                 	db	46
   571  003F9C  2E                 	db	46
   572  003F9D  00                 	db	0
   573  003F9E                     STR_5:
   574  003F9E  72                 	db	114	;'r'
   575  003F9F  65                 	db	101	;'e'
   576  003FA0  61                 	db	97	;'a'
   577  003FA1  64                 	db	100	;'d'
   578  003FA2  20                 	db	32
   579  003FA3  63                 	db	99	;'c'
   580  003FA4  6F                 	db	111	;'o'
   581  003FA5  6D                 	db	109	;'m'
   582  003FA6  70                 	db	112	;'p'
   583  003FA7  6C                 	db	108	;'l'
   584  003FA8  65                 	db	101	;'e'
   585  003FA9  74                 	db	116	;'t'
   586  003FAA  65                 	db	101	;'e'
   587  003FAB  20                 	db	32
   588  003FAC  0D                 	db	13
   589  003FAD  0A                 	db	10
   590  003FAE  00                 	db	0
   591  003FAF                     STR_6:
   592  003FAF  61                 	db	97	;'a'
   593  003FB0  64                 	db	100	;'d'
   594  003FB1  64                 	db	100	;'d'
   595  003FB2  72                 	db	114	;'r'
   596  003FB3  65                 	db	101	;'e'
   597  003FB4  73                 	db	115	;'s'
   598  003FB5  73                 	db	115	;'s'
   599  003FB6  20                 	db	32
   600  003FB7  65                 	db	101	;'e'
   601  003FB8  72                 	db	114	;'r'
   602  003FB9  72                 	db	114	;'r'
   603  003FBA  6F                 	db	111	;'o'
   604  003FBB  72                 	db	114	;'r'
   605  003FBC  20                 	db	32
   606  003FBD  0D                 	db	13
   607  003FBE  0A                 	db	10
   608  003FBF  00                 	db	0
   609  003FC0                     STR_10:
   610  003FC0  63                 	db	99	;'c'
   611  003FC1  72                 	db	114	;'r'
   612  003FC2  63                 	db	99	;'c'
   613  003FC3  20                 	db	32
   614  003FC4  76                 	db	118	;'v'
   615  003FC5  65                 	db	101	;'e'
   616  003FC6  72                 	db	114	;'r'
   617  003FC7  69                 	db	105	;'i'
   618  003FC8  66                 	db	102	;'f'
   619  003FC9  69                 	db	105	;'i'
   620  003FCA  65                 	db	101	;'e'
   621  003FCB  64                 	db	100	;'d'
   622  003FCC  20                 	db	32
   623  003FCD  0D                 	db	13
   624  003FCE  0A                 	db	10
   625  003FCF  00                 	db	0
   626  003FD0                     STR_14:
   627  003FD0  77                 	db	119	;'w'
   628  003FD1  72                 	db	114	;'r'
   629  003FD2  69                 	db	105	;'i'
   630  003FD3  74                 	db	116	;'t'
   631  003FD4  65                 	db	101	;'e'
   632  003FD5  20                 	db	32
   633  003FD6  66                 	db	102	;'f'
   634  003FD7  61                 	db	97	;'a'
   635  003FD8  69                 	db	105	;'i'
   636  003FD9  6C                 	db	108	;'l'
   637  003FDA  65                 	db	101	;'e'
   638  003FDB  64                 	db	100	;'d'
   639  003FDC  20                 	db	32
   640  003FDD  0D                 	db	13
   641  003FDE  0A                 	db	10
   642  003FDF  00                 	db	0
   643  003FE0                     STR_7:
   644  003FE0  6D                 	db	109	;'m'
   645  003FE1  61                 	db	97	;'a'
   646  003FE2  72                 	db	114	;'r'
   647  003FE3  6B                 	db	107	;'k'
   648  003FE4  65                 	db	101	;'e'
   649  003FE5  72                 	db	114	;'r'
   650  003FE6  20                 	db	32
   651  003FE7  65                 	db	101	;'e'
   652  003FE8  72                 	db	114	;'r'
   653  003FE9  72                 	db	114	;'r'
   654  003FEA  6F                 	db	111	;'o'
   655  003FEB  72                 	db	114	;'r'
   656  003FEC  20                 	db	32
   657  003FED  0D                 	db	13
   658  003FEE  0A                 	db	10
   659  003FEF  00                 	db	0
   660  003FF0                     STR_12:
   661  003FF0  77                 	db	119	;'w'
   662  003FF1  72                 	db	114	;'r'
   663  003FF2  69                 	db	105	;'i'
   664  003FF3  74                 	db	116	;'t'
   665  003FF4  69                 	db	105	;'i'
   666  003FF5  6E                 	db	110	;'n'
   667  003FF6  67                 	db	103	;'g'
   668  003FF7  2E                 	db	46
   669  003FF8  2E                 	db	46
   670  003FF9  2E                 	db	46
   671  003FFA  2E                 	db	46
   672  003FFB  2E                 	db	46
   673  003FFC  2E                 	db	46
   674  003FFD  2E                 	db	46
   675  003FFE  00                 	db	0
   676  003FFF  00                 	db	0	; dummy byte at the end
   677  0000                     
   678                           ; #config settings
   679                           
   680                           	psect	cinit
   681  001282                     __pcinit:
   682                           	callstack 0
   683  001282                     start_initialization:
   684                           	callstack 0
   685  001282                     __initialization:
   686                           	callstack 0
   687                           
   688                           ; NVMREG Errata
   689  001282                     	if	3969
   690  001282  8E81               	bsf	129,7,c
   691  001284  9C81               	bcf	129,6,c
   692  001286                     	endif
   693                           
   694                           ; Initialize objects allocated to BANK0 (76 bytes)
   695                           ; load TBLPTR registers with __pidataBANK0
   696  001286  0EEC               	movlw	low __pidataBANK0
   697  001288  6EF6               	movwf	tblptrl,c
   698  00128A  0E11               	movlw	high __pidataBANK0
   699  00128C  6EF7               	movwf	tblptrh,c
   700  00128E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   701  001290  6EF8               	movwf	tblptru,c
   702  001292  EE00  F060         	lfsr	0,__pdataBANK0
   703  001296  EE10 F04C          	lfsr	1,76
   704  00129A                     copy_data0:
   705  00129A  0009               	tblrd		*+
   706  00129C  CFF5 FFEE          	movff	tablat,postinc0
   707  0012A0  50E5               	movf	postdec1,w,c
   708  0012A2  50E1               	movf	fsr1l,w,c
   709  0012A4  E1FA               	bnz	copy_data0
   710                           
   711                           ; Clear objects allocated to BANK1 (138 bytes)
   712  0012A6  EE01  F000         	lfsr	0,__pbssBANK1
   713  0012AA  0E8A               	movlw	138
   714  0012AC                     clear_0:
   715  0012AC  6AEE               	clrf	postinc0,c
   716  0012AE  06E8               	decf	wreg,f,c
   717  0012B0  E1FD               	bnz	clear_0
   718                           
   719                           ; Clear objects allocated to BANK0 (47 bytes)
   720  0012B2  EE00  F0AC         	lfsr	0,__pbssBANK0
   721  0012B6  0E2F               	movlw	47
   722  0012B8                     clear_1:
   723  0012B8  6AEE               	clrf	postinc0,c
   724  0012BA  06E8               	decf	wreg,f,c
   725  0012BC  E1FD               	bnz	clear_1
   726  0012BE                     end_of_initialization:
   727                           	callstack 0
   728  0012BE                     __end_of__initialization:
   729                           	callstack 0
   730  0012BE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   731  0012C0  6EF8               	movwf	tblptru,c
   732  0012C2  0100               	movlb	0
   733  0012C4  EFA0  F005         	goto	_main	;jump to C main() function
   734                           
   735                           	psect	bssBANK0
   736  0000AC                     __pbssBANK0:
   737                           	callstack 0
   738  0000AC                     _index:
   739                           	callstack 0
   740  0000AC                     	ds	4
   741  0000B0                     _nout:
   742                           	callstack 0
   743  0000B0                     	ds	2
   744  0000B2                     _width:
   745                           	callstack 0
   746  0000B2                     	ds	2
   747  0000B4                     _prec:
   748                           	callstack 0
   749  0000B4                     	ds	2
   750  0000B6                     _flags:
   751                           	callstack 0
   752  0000B6                     	ds	2
   753  0000B8                     _tempBuffer:
   754                           	callstack 0
   755  0000B8                     	ds	1
   756  0000B9                     _exit_boot:
   757                           	callstack 0
   758  0000B9                     	ds	1
   759  0000BA                     _eusart1RxLastError:
   760                           	callstack 0
   761  0000BA                     	ds	1
   762  0000BB                     _dbuf:
   763                           	callstack 0
   764  0000BB                     	ds	32
   765                           
   766                           	psect	dataBANK0
   767  000060                     __pdataBANK0:
   768                           	callstack 0
   769  000060                     _Header:
   770                           	callstack 0
   771  000060                     	ds	76
   772                           
   773                           	psect	bssBANK1
   774  000100                     __pbssBANK1:
   775                           	callstack 0
   776  000100                     _tempDataBuffer:
   777                           	callstack 0
   778  000100                     	ds	64
   779  000140                     _currentBlock:
   780                           	callstack 0
   781  000140                     	ds	74
   782                           
   783                           	psect	cstackBANK0
   784  0000DB                     __pcstackBANK0:
   785                           	callstack 0
   786  0000DB                     ?_printf:
   787                           	callstack 0
   788  0000DB                     printf@fmt:
   789                           	callstack 0
   790                           
   791                           ; 2 bytes @ 0x0
   792  0000DB                     	ds	6
   793  0000E1                     printf@ap:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x6
   797  0000E1                     	ds	2
   798  0000E3                     ??_BOOT_Write:
   799  0000E3                     ??_BOOT_Read:
   800  0000E3                     BOOT_EraseUserFlash@address:
   801                           	callstack 0
   802                           
   803                           ; 4 bytes @ 0x8
   804  0000E3                     	ds	4
   805  0000E7                     BOOT_Read@i:
   806                           	callstack 0
   807  0000E7                     BOOT_Write@max_address:
   808                           	callstack 0
   809                           
   810                           ; 4 bytes @ 0xC
   811  0000E7                     	ds	2
   812  0000E9                     BOOT_Read@max_address:
   813                           	callstack 0
   814                           
   815                           ; 3 bytes @ 0xE
   816  0000E9                     	ds	2
   817  0000EB                     BOOT_Write@min_address:
   818                           	callstack 0
   819                           
   820                           ; 4 bytes @ 0x10
   821  0000EB                     	ds	1
   822  0000EC                     BOOT_Read@min_address:
   823                           	callstack 0
   824                           
   825                           ; 3 bytes @ 0x11
   826  0000EC                     	ds	3
   827  0000EF                     BOOT_Read@max_length:
   828                           	callstack 0
   829  0000EF                     BOOT_Write@max_length:
   830                           	callstack 0
   831                           
   832                           ; 4 bytes @ 0x14
   833  0000EF                     	ds	8
   834  0000F7                     BOOT_Write@i:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x1C
   838  0000F7                     	ds	2
   839  0000F9                     ??_BOOT_Load:
   840                           
   841                           ; 1 bytes @ 0x1E
   842  0000F9                     	ds	2
   843  0000FB                     ??_main:
   844                           
   845                           ; 1 bytes @ 0x20
   846  0000FB                     	ds	2
   847                           
   848                           	psect	cstackCOMRAM
   849  000001                     __pcstackCOMRAM:
   850                           	callstack 0
   851  000001                     ??_BOOT_GetHeader:
   852  000001                     ?_FLASH_crc16:
   853                           	callstack 0
   854  000001                     ?_strlen:
   855                           	callstack 0
   856  000001                     ?_isupper:
   857                           	callstack 0
   858  000001                     ?_isalpha:
   859                           	callstack 0
   860  000001                     ?_islower:
   861                           	callstack 0
   862  000001                     EUSART1_Write@txData:
   863                           	callstack 0
   864  000001                     EUSART1_SetFramingErrorHandler@interruptHandler:
   865                           	callstack 0
   866  000001                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   867                           	callstack 0
   868  000001                     EUSART1_SetErrorHandler@interruptHandler:
   869                           	callstack 0
   870  000001                     DATAEE_WriteByte@bAdd:
   871                           	callstack 0
   872  000001                     DATAEE_ReadByte@bAdd:
   873                           	callstack 0
   874  000001                     FLASH_crc16@data_p:
   875                           	callstack 0
   876  000001                     isalpha@c:
   877                           	callstack 0
   878  000001                     isupper@c:
   879                           	callstack 0
   880  000001                     strlen@s:
   881                           	callstack 0
   882  000001                     islower@c:
   883                           	callstack 0
   884  000001                     FLASH_EraseBlock@baseAddr:
   885                           	callstack 0
   886                           
   887                           ; 4 bytes @ 0x0
   888  000001                     	ds	1
   889  000002                     putch@txData:
   890                           	callstack 0
   891                           
   892                           ; 1 bytes @ 0x1
   893  000002                     	ds	1
   894  000003                     ??_isupper:
   895  000003                     ??_isalpha:
   896  000003                     ??_islower:
   897  000003                     DATAEE_WriteByte@bData:
   898                           	callstack 0
   899  000003                     FLASH_crc16@length:
   900                           	callstack 0
   901  000003                     fputc@c:
   902                           	callstack 0
   903  000003                     strlen@a:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0x2
   907  000003                     	ds	1
   908  000004                     ??_FLASH_crc16:
   909  000004                     DATAEE_WriteByte@GIEBitValue:
   910                           	callstack 0
   911                           
   912                           ; 1 bytes @ 0x3
   913  000004                     	ds	1
   914  000005                     FLASH_EraseBlock@GIEBitValue:
   915                           	callstack 0
   916  000005                     fputc@fp:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x4
   920  000005                     	ds	1
   921  000006                     FLASH_WriteBlock@writeAddr:
   922                           	callstack 0
   923                           
   924                           ; 4 bytes @ 0x5
   925  000006                     	ds	1
   926  000007                     ??_fputc:
   927  000007                     ?_toupper:
   928                           	callstack 0
   929  000007                     BOOT_GetHeader@i:
   930                           	callstack 0
   931  000007                     toupper@c:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0x6
   935  000007                     	ds	2
   936  000009                     ??_toupper:
   937                           
   938                           ; 1 bytes @ 0x8
   939  000009                     	ds	1
   940  00000A                     FLASH_WriteBlock@flashWrBufPtr:
   941                           	callstack 0
   942  00000A                     FLASH_crc16@crc:
   943                           	callstack 0
   944                           
   945                           ; 2 bytes @ 0x9
   946  00000A                     	ds	2
   947  00000C                     FLASH_crc16@x:
   948                           	callstack 0
   949  00000C                     fputs@s:
   950                           	callstack 0
   951  00000C                     FLASH_WriteBlock@blockStartAddr:
   952                           	callstack 0
   953                           
   954                           ; 4 bytes @ 0xB
   955  00000C                     	ds	1
   956  00000D                     _toupper$1315:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0xC
   960  00000D                     	ds	1
   961  00000E                     fputs@fp:
   962                           	callstack 0
   963                           
   964                           ; 2 bytes @ 0xD
   965  00000E                     	ds	2
   966  000010                     FLASH_WriteBlock@GIEBitValue:
   967                           	callstack 0
   968  000010                     fputs@c:
   969                           	callstack 0
   970                           
   971                           ; 1 bytes @ 0xF
   972  000010                     	ds	1
   973  000011                     FLASH_WriteBlock@i:
   974                           	callstack 0
   975  000011                     fputs@i:
   976                           	callstack 0
   977                           
   978                           ; 2 bytes @ 0x10
   979  000011                     	ds	2
   980  000013                     ?_pad:
   981                           	callstack 0
   982  000013                     pad@fp:
   983                           	callstack 0
   984                           
   985                           ; 2 bytes @ 0x12
   986  000013                     	ds	2
   987  000015                     pad@buf:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x14
   991  000015                     	ds	2
   992  000017                     pad@p:
   993                           	callstack 0
   994                           
   995                           ; 2 bytes @ 0x16
   996  000017                     	ds	2
   997  000019                     ??_pad:
   998                           
   999                           ; 1 bytes @ 0x18
  1000  000019                     	ds	1
  1001  00001A                     pad@i:
  1002                           	callstack 0
  1003                           
  1004                           ; 2 bytes @ 0x19
  1005  00001A                     	ds	2
  1006  00001C                     pad@w:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x1B
  1010  00001C                     	ds	2
  1011  00001E                     ?_xtoa:
  1012                           	callstack 0
  1013  00001E                     xtoa@fp:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x1D
  1017  00001E                     	ds	2
  1018  000020                     xtoa@d:
  1019                           	callstack 0
  1020                           
  1021                           ; 8 bytes @ 0x1F
  1022  000020                     	ds	8
  1023  000028                     xtoa@x:
  1024                           	callstack 0
  1025                           
  1026                           ; 1 bytes @ 0x27
  1027  000028                     	ds	1
  1028  000029                     ??_xtoa:
  1029                           
  1030                           ; 1 bytes @ 0x28
  1031  000029                     	ds	8
  1032  000031                     _xtoa$1238:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x30
  1036  000031                     	ds	2
  1037  000033                     _xtoa$1239:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x32
  1041  000033                     	ds	2
  1042  000035                     xtoa@p:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x34
  1046  000035                     	ds	2
  1047  000037                     xtoa@w:
  1048                           	callstack 0
  1049                           
  1050                           ; 2 bytes @ 0x36
  1051  000037                     	ds	2
  1052  000039                     xtoa@n:
  1053                           	callstack 0
  1054                           
  1055                           ; 8 bytes @ 0x38
  1056  000039                     	ds	8
  1057  000041                     xtoa@i:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x40
  1061  000041                     	ds	2
  1062  000043                     xtoa@c:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x42
  1066  000043                     	ds	2
  1067  000045                     ?_vfpfcnvrt:
  1068                           	callstack 0
  1069  000045                     vfpfcnvrt@fp:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x44
  1073  000045                     	ds	2
  1074  000047                     vfpfcnvrt@fmt:
  1075                           	callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x46
  1078  000047                     	ds	2
  1079  000049                     vfpfcnvrt@ap:
  1080                           	callstack 0
  1081                           
  1082                           ; 2 bytes @ 0x48
  1083  000049                     	ds	2
  1084  00004B                     ??_vfpfcnvrt:
  1085                           
  1086                           ; 1 bytes @ 0x4A
  1087  00004B                     	ds	4
  1088  00004F                     vfpfcnvrt@llu:
  1089                           	callstack 0
  1090                           
  1091                           ; 8 bytes @ 0x4E
  1092  00004F                     	ds	8
  1093  000057                     vfpfcnvrt@c:
  1094                           	callstack 0
  1095                           
  1096                           ; 1 bytes @ 0x56
  1097  000057                     	ds	1
  1098  000058                     ?_vfprintf:
  1099                           	callstack 0
  1100  000058                     vfprintf@fp:
  1101                           	callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x57
  1104  000058                     	ds	2
  1105  00005A                     vfprintf@fmt:
  1106                           	callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x59
  1109  00005A                     	ds	2
  1110  00005C                     vfprintf@ap:
  1111                           	callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x5B
  1114  00005C                     	ds	2
  1115  00005E                     vfprintf@cfmt:
  1116                           	callstack 0
  1117                           
  1118                           ; 2 bytes @ 0x5D
  1119  00005E                     	ds	2
  1120  000060                     
  1121                           ; 1 bytes @ 0x5F
  1122 ;;
  1123 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1124 ;;
  1125 ;; *************** function _main *****************
  1126 ;; Defined at:
  1127 ;;		line 60 in file "main.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;		None
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;		None
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  1    wreg      void 
  1134 ;; Registers used:
  1135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1143 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1144 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1145 ;;Total ram usage:        2 bytes
  1146 ;; Hardware stack levels required when called:   11
  1147 ;; This function calls:
  1148 ;;		_BOOT_Load
  1149 ;;		_DATAEE_ReadByte
  1150 ;;		_SYSTEM_Initialize
  1151 ;;		_printf
  1152 ;; This function is called by:
  1153 ;;		Startup code after reset
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           	psect	text0
  1158  000B40                     __ptext0:
  1159                           	callstack 0
  1160  000B40                     _main:
  1161                           	callstack 20
  1162  000B40                     
  1163                           ;main.c: 62:     SYSTEM_Initialize();
  1164  000B40  EC91  F00A         	call	_SYSTEM_Initialize	;wreg free
  1165  000B44                     
  1166                           ;main.c: 63:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1167  000B44  0E02               	movlw	2
  1168  000B46  0100               	movlb	0	; () banked
  1169  000B48  6FFC               	movwf	(??_main+1)& (0+255),b
  1170  000B4A  0E04               	movlw	4
  1171  000B4C  6FFB               	movwf	??_main& (0+255),b
  1172  000B4E  0EBA               	movlw	186
  1173  000B50                     u1917:
  1174  000B50  2EE8               	decfsz	wreg,f,c
  1175  000B52  D7FE               	bra	u1917
  1176  000B54  2FFB               	decfsz	??_main& (0+255),f,b
  1177  000B56  D7FC               	bra	u1917
  1178  000B58  2FFC               	decfsz	(??_main+1)& (0+255),f,b
  1179  000B5A  D7FA               	bra	u1917
  1180  000B5C  F000               	nop	
  1181  000B5E                     
  1182                           ;main.c: 82:     exit_boot = 1;
  1183  000B5E  0E01               	movlw	1
  1184  000B60  0100               	movlb	0	; () banked
  1185  000B62  6FB9               	movwf	_exit_boot& (0+255),b
  1186  000B64                     
  1187                           ; BSR set to: 0
  1188                           ;main.c: 83:     if (PORTAbits.RA0 == 1) {
  1189  000B64  A08D               	btfss	141,0,c	;volatile
  1190  000B66  EFB7  F005         	goto	u1781
  1191  000B6A  EFB9  F005         	goto	u1780
  1192  000B6E                     u1781:
  1193  000B6E  EFC2  F005         	goto	l2899
  1194  000B72                     u1780:
  1195  000B72                     
  1196                           ; BSR set to: 0
  1197                           ;main.c: 84:         printf("IN a bootloader mode \r\n");
  1198  000B72  0E35               	movlw	low STR_1
  1199  000B74  6FDB               	movwf	printf@fmt& (0+255),b
  1200  000B76  0E3F               	movlw	high STR_1
  1201  000B78  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  1202  000B7A  EC49  F00A         	call	_printf	;wreg free
  1203  000B7E                     
  1204                           ;main.c: 85:         exit_boot = 0;
  1205  000B7E  0E00               	movlw	0
  1206  000B80  0100               	movlb	0	; () banked
  1207  000B82  6FB9               	movwf	_exit_boot& (0+255),b
  1208  000B84                     l2899:
  1209                           
  1210                           ; BSR set to: 0
  1211                           ;main.c: 87:     if(exit_boot == 1 && DATAEE_ReadByte(0x10) != 0xAA) {
  1212  000B84  05B9               	decf	_exit_boot& (0+255),w,b
  1213  000B86  A4D8               	btfss	status,2,c
  1214  000B88  EFC8  F005         	goto	u1791
  1215  000B8C  EFCA  F005         	goto	u1790
  1216  000B90                     u1791:
  1217  000B90  EFE2  F005         	goto	l2907
  1218  000B94                     u1790:
  1219  000B94                     
  1220                           ; BSR set to: 0
  1221  000B94  0E00               	movlw	0
  1222  000B96  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
  1223  000B98  0E10               	movlw	16
  1224  000B9A  6E01               	movwf	DATAEE_ReadByte@bAdd^0,c
  1225  000B9C  EC6B  F00A         	call	_DATAEE_ReadByte	;wreg free
  1226  000BA0  0AAA               	xorlw	170
  1227  000BA2  B4D8               	btfsc	status,2,c
  1228  000BA4  EFD6  F005         	goto	u1801
  1229  000BA8  EFD8  F005         	goto	u1800
  1230  000BAC                     u1801:
  1231  000BAC  EFE2  F005         	goto	l2907
  1232  000BB0                     u1800:
  1233  000BB0                     
  1234                           ;main.c: 88:         printf("IN a setup bootloader mode  \r\n");
  1235  000BB0  0E95               	movlw	low STR_2
  1236  000BB2  0100               	movlb	0	; () banked
  1237  000BB4  6FDB               	movwf	printf@fmt& (0+255),b
  1238  000BB6  0E3E               	movlw	high STR_2
  1239  000BB8  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  1240  000BBA  EC49  F00A         	call	_printf	;wreg free
  1241  000BBE                     
  1242                           ;main.c: 89:         exit_boot = 0;
  1243  000BBE  0E00               	movlw	0
  1244  000BC0  0100               	movlb	0	; () banked
  1245  000BC2  6FB9               	movwf	_exit_boot& (0+255),b
  1246  000BC4                     l2907:
  1247                           
  1248                           ;main.c: 91:     if (!exit_boot) {
  1249  000BC4  0100               	movlb	0	; () banked
  1250  000BC6  51B9               	movf	_exit_boot& (0+255),w,b
  1251  000BC8  A4D8               	btfss	status,2,c
  1252  000BCA  EFE9  F005         	goto	u1811
  1253  000BCE  EFEB  F005         	goto	u1810
  1254  000BD2                     u1811:
  1255  000BD2  EFF7  F005         	goto	l2913
  1256  000BD6                     u1810:
  1257  000BD6                     
  1258                           ; BSR set to: 0
  1259                           ;main.c: 93:         SYSTEM_Initialize();
  1260  000BD6  EC91  F00A         	call	_SYSTEM_Initialize	;wreg free
  1261  000BDA                     l2911:
  1262  000BDA  EC11  F006         	call	_BOOT_Load	;wreg free
  1263  000BDE  0900               	iorlw	0
  1264  000BE0  A4D8               	btfss	status,2,c
  1265  000BE2  EFF5  F005         	goto	u1821
  1266  000BE6  EFF7  F005         	goto	u1820
  1267  000BEA                     u1821:
  1268  000BEA  EFED  F005         	goto	l2911
  1269  000BEE                     u1820:
  1270  000BEE                     l2913:
  1271                           
  1272                           ;main.c: 98:     printf("application running...\r\n");
  1273  000BEE  0E04               	movlw	low STR_3
  1274  000BF0  0100               	movlb	0	; () banked
  1275  000BF2  6FDB               	movwf	printf@fmt& (0+255),b
  1276  000BF4  0E3F               	movlw	high STR_3
  1277  000BF6  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  1278  000BF8  EC49  F00A         	call	_printf	;wreg free
  1279  000BFC                     
  1280                           ;main.c: 99:     _delay((unsigned long)((3000)*(8000000/4000.0)));
  1281  000BFC  0E1F               	movlw	31
  1282  000BFE  0100               	movlb	0	; () banked
  1283  000C00  6FFC               	movwf	(??_main+1)& (0+255),b
  1284  000C02  0E71               	movlw	113
  1285  000C04  6FFB               	movwf	??_main& (0+255),b
  1286  000C06  0E1E               	movlw	30
  1287  000C08                     u1927:
  1288  000C08  2EE8               	decfsz	wreg,f,c
  1289  000C0A  D7FE               	bra	u1927
  1290  000C0C  2FFB               	decfsz	??_main& (0+255),f,b
  1291  000C0E  D7FC               	bra	u1927
  1292  000C10  2FFC               	decfsz	(??_main+1)& (0+255),f,b
  1293  000C12  D7FA               	bra	u1927
  1294  000C14  F000               	nop	
  1295  000C16  EF00 F020          	goto	16384	;# 
  1296  000C1A                     l288:
  1297  000C1A  EF0D  F006         	goto	l288
  1298  000C1E  EF0E  F000         	goto	start
  1299  000C22                     __end_of_main:
  1300                           	callstack 0
  1301                           
  1302 ;; *************** function _SYSTEM_Initialize *****************
  1303 ;; Defined at:
  1304 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;		None
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;		None
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  1    wreg      void 
  1311 ;; Registers used:
  1312 ;;		wreg, status,2, status,0, cstack
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1322 ;;Total ram usage:        0 bytes
  1323 ;; Hardware stack levels used:    1
  1324 ;; Hardware stack levels required when called:    2
  1325 ;; This function calls:
  1326 ;;		_EUSART1_Initialize
  1327 ;;		_OSCILLATOR_Initialize
  1328 ;;		_PIN_MANAGER_Initialize
  1329 ;;		_PMD_Initialize
  1330 ;; This function is called by:
  1331 ;;		_main
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           	psect	text1
  1336  001522                     __ptext1:
  1337                           	callstack 0
  1338  001522                     _SYSTEM_Initialize:
  1339                           	callstack 28
  1340  001522                     
  1341                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  1342  001522  EC5D  F00A         	call	_PMD_Initialize	;wreg free
  1343                           
  1344                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1345  001526  ECC9  F008         	call	_PIN_MANAGER_Initialize	;wreg free
  1346                           
  1347                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1348  00152A  EC79  F00A         	call	_OSCILLATOR_Initialize	;wreg free
  1349  00152E                     
  1350                           ;mcc_generated_files/mcc.c: 55:     EUSART1_Initialize();
  1351  00152E  EC86  F009         	call	_EUSART1_Initialize	;wreg free
  1352  001532  0012               	return		;funcret
  1353  001534                     __end_of_SYSTEM_Initialize:
  1354                           	callstack 0
  1355                           
  1356 ;; *************** function _PMD_Initialize *****************
  1357 ;; Defined at:
  1358 ;;		line 72 in file "mcc_generated_files/mcc.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;		None
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		wreg, status,2
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1376 ;;Total ram usage:        0 bytes
  1377 ;; Hardware stack levels used:    1
  1378 ;; This function calls:
  1379 ;;		Nothing
  1380 ;; This function is called by:
  1381 ;;		_SYSTEM_Initialize
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           	psect	text2
  1386  0014BA                     __ptext2:
  1387                           	callstack 0
  1388  0014BA                     _PMD_Initialize:
  1389                           	callstack 29
  1390  0014BA                     
  1391                           ;mcc_generated_files/mcc.c: 75:     PMD0 = 0x00;
  1392  0014BA  0E00               	movlw	0
  1393  0014BC  010E               	movlb	14	; () banked
  1394  0014BE  6FE1               	movwf	225,b	;volatile
  1395                           
  1396                           ;mcc_generated_files/mcc.c: 77:     PMD1 = 0x00;
  1397  0014C0  0E00               	movlw	0
  1398  0014C2  6FE2               	movwf	226,b	;volatile
  1399                           
  1400                           ;mcc_generated_files/mcc.c: 79:     PMD2 = 0x00;
  1401  0014C4  0E00               	movlw	0
  1402  0014C6  6FE3               	movwf	227,b	;volatile
  1403                           
  1404                           ;mcc_generated_files/mcc.c: 81:     PMD3 = 0x00;
  1405  0014C8  0E00               	movlw	0
  1406  0014CA  6FE4               	movwf	228,b	;volatile
  1407                           
  1408                           ;mcc_generated_files/mcc.c: 83:     PMD4 = 0x00;
  1409  0014CC  0E00               	movlw	0
  1410  0014CE  6FE5               	movwf	229,b	;volatile
  1411                           
  1412                           ;mcc_generated_files/mcc.c: 85:     PMD5 = 0x00;
  1413  0014D0  0E00               	movlw	0
  1414  0014D2  6FE6               	movwf	230,b	;volatile
  1415  0014D4                     
  1416                           ; BSR set to: 14
  1417  0014D4  0012               	return		;funcret
  1418  0014D6                     __end_of_PMD_Initialize:
  1419                           	callstack 0
  1420                           
  1421 ;; *************** function _PIN_MANAGER_Initialize *****************
  1422 ;; Defined at:
  1423 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1424 ;; Parameters:    Size  Location     Type
  1425 ;;		None
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;		None
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      void 
  1430 ;; Registers used:
  1431 ;;		wreg, status,2
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1441 ;;Total ram usage:        0 bytes
  1442 ;; Hardware stack levels used:    1
  1443 ;; This function calls:
  1444 ;;		Nothing
  1445 ;; This function is called by:
  1446 ;;		_SYSTEM_Initialize
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           	psect	text3
  1451  001192                     __ptext3:
  1452                           	callstack 0
  1453  001192                     _PIN_MANAGER_Initialize:
  1454                           	callstack 29
  1455  001192                     
  1456                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1457  001192  0E00               	movlw	0
  1458  001194  6E83               	movwf	131,c	;volatile
  1459                           
  1460                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1461  001196  0E00               	movlw	0
  1462  001198  6E84               	movwf	132,c	;volatile
  1463                           
  1464                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  1465  00119A  0E00               	movlw	0
  1466  00119C  6E85               	movwf	133,c	;volatile
  1467                           
  1468                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x7F;
  1469  00119E  0E7F               	movlw	127
  1470  0011A0  6E88               	movwf	136,c	;volatile
  1471  0011A2                     
  1472                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  1473  0011A2  6889               	setf	137,c	;volatile
  1474                           
  1475                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  1476  0011A4  0EBF               	movlw	191
  1477  0011A6  6E8A               	movwf	138,c	;volatile
  1478                           
  1479                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x7F;
  1480  0011A8  0E7F               	movlw	127
  1481  0011AA  010F               	movlb	15	; () banked
  1482  0011AC  6F21               	movwf	33,b	;volatile
  1483  0011AE                     
  1484                           ; BSR set to: 15
  1485                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xFF;
  1486  0011AE  6919               	setf	25,b	;volatile
  1487                           
  1488                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xFE;
  1489  0011B0  0EFE               	movlw	254
  1490  0011B2  6F11               	movwf	17,b	;volatile
  1491                           
  1492                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
  1493  0011B4  0E00               	movlw	0
  1494  0011B6  6F2D               	movwf	45,b	;volatile
  1495                           
  1496                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
  1497  0011B8  0E00               	movlw	0
  1498  0011BA  6F18               	movwf	24,b	;volatile
  1499                           
  1500                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
  1501  0011BC  0E00               	movlw	0
  1502  0011BE  6F10               	movwf	16,b	;volatile
  1503                           
  1504                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
  1505  0011C0  0E00               	movlw	0
  1506  0011C2  6F20               	movwf	32,b	;volatile
  1507                           
  1508                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  1509  0011C4  0E00               	movlw	0
  1510  0011C6  6F0F               	movwf	15,b	;volatile
  1511                           
  1512                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  1513  0011C8  0E00               	movlw	0
  1514  0011CA  6F17               	movwf	23,b	;volatile
  1515                           
  1516                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  1517  0011CC  0E00               	movlw	0
  1518  0011CE  6F1F               	movwf	31,b	;volatile
  1519  0011D0                     
  1520                           ; BSR set to: 15
  1521                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
  1522  0011D0  690E               	setf	14,b	;volatile
  1523  0011D2                     
  1524                           ; BSR set to: 15
  1525                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
  1526  0011D2  6916               	setf	22,b	;volatile
  1527  0011D4                     
  1528                           ; BSR set to: 15
  1529                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  1530  0011D4  691E               	setf	30,b	;volatile
  1531  0011D6                     
  1532                           ; BSR set to: 15
  1533                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
  1534  0011D6  690D               	setf	13,b	;volatile
  1535  0011D8                     
  1536                           ; BSR set to: 15
  1537                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
  1538  0011D8  6915               	setf	21,b	;volatile
  1539  0011DA                     
  1540                           ; BSR set to: 15
  1541                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  1542  0011DA  691D               	setf	29,b	;volatile
  1543                           
  1544                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x08;
  1545  0011DC  0E08               	movlw	8
  1546  0011DE  6F2A               	movwf	42,b	;volatile
  1547                           
  1548                           ;mcc_generated_files/pin_manager.c: 115:     RX1PPS = 0x17;
  1549  0011E0  0E17               	movlw	23
  1550  0011E2  010E               	movlb	14	; () banked
  1551  0011E4  6FB5               	movwf	181,b	;volatile
  1552                           
  1553                           ;mcc_generated_files/pin_manager.c: 116:     RC6PPS = 0x09;
  1554  0011E6  0E09               	movlw	9
  1555  0011E8  6FFD               	movwf	253,b	;volatile
  1556  0011EA                     
  1557                           ; BSR set to: 14
  1558  0011EA  0012               	return		;funcret
  1559  0011EC                     __end_of_PIN_MANAGER_Initialize:
  1560                           	callstack 0
  1561                           
  1562 ;; *************** function _OSCILLATOR_Initialize *****************
  1563 ;; Defined at:
  1564 ;;		line 58 in file "mcc_generated_files/mcc.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;		None
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;		None
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  1    wreg      void 
  1571 ;; Registers used:
  1572 ;;		wreg, status,2
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1582 ;;Total ram usage:        0 bytes
  1583 ;; Hardware stack levels used:    1
  1584 ;; This function calls:
  1585 ;;		Nothing
  1586 ;; This function is called by:
  1587 ;;		_SYSTEM_Initialize
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           	psect	text4
  1592  0014F2                     __ptext4:
  1593                           	callstack 0
  1594  0014F2                     _OSCILLATOR_Initialize:
  1595                           	callstack 29
  1596  0014F2                     
  1597                           ;mcc_generated_files/mcc.c: 61:     OSCCON1 = 0x62;
  1598  0014F2  0E62               	movlw	98
  1599  0014F4  010E               	movlb	14	; () banked
  1600  0014F6  6FD8               	movwf	216,b	;volatile
  1601                           
  1602                           ;mcc_generated_files/mcc.c: 63:     OSCCON3 = 0x00;
  1603  0014F8  0E00               	movlw	0
  1604  0014FA  6FDA               	movwf	218,b	;volatile
  1605                           
  1606                           ;mcc_generated_files/mcc.c: 65:     OSCEN = 0x00;
  1607  0014FC  0E00               	movlw	0
  1608  0014FE  6FDC               	movwf	220,b	;volatile
  1609                           
  1610                           ;mcc_generated_files/mcc.c: 67:     OSCFRQ = 0x06;
  1611  001500  0E06               	movlw	6
  1612  001502  6FDE               	movwf	222,b	;volatile
  1613                           
  1614                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
  1615  001504  0E00               	movlw	0
  1616  001506  6FDD               	movwf	221,b	;volatile
  1617  001508                     
  1618                           ; BSR set to: 14
  1619  001508  0012               	return		;funcret
  1620  00150A                     __end_of_OSCILLATOR_Initialize:
  1621                           	callstack 0
  1622                           
  1623 ;; *************** function _EUSART1_Initialize *****************
  1624 ;; Defined at:
  1625 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;		None
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;		None
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  1    wreg      void 
  1632 ;; Registers used:
  1633 ;;		wreg, status,2, status,0, cstack
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1643 ;;Total ram usage:        0 bytes
  1644 ;; Hardware stack levels used:    1
  1645 ;; Hardware stack levels required when called:    1
  1646 ;; This function calls:
  1647 ;;		_EUSART1_SetErrorHandler
  1648 ;;		_EUSART1_SetFramingErrorHandler
  1649 ;;		_EUSART1_SetOverrunErrorHandler
  1650 ;; This function is called by:
  1651 ;;		_SYSTEM_Initialize
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           	psect	text5
  1656  00130C                     __ptext5:
  1657                           	callstack 0
  1658  00130C                     _EUSART1_Initialize:
  1659                           	callstack 28
  1660  00130C                     
  1661                           ;mcc_generated_files/eusart1.c: 71:     BAUD1CON = 0x08;
  1662  00130C  0E08               	movlw	8
  1663  00130E  6E9F               	movwf	159,c	;volatile
  1664                           
  1665                           ;mcc_generated_files/eusart1.c: 74:     RC1STA = 0x90;
  1666  001310  0E90               	movlw	144
  1667  001312  6E9D               	movwf	157,c	;volatile
  1668                           
  1669                           ;mcc_generated_files/eusart1.c: 77:     TX1STA = 0x24;
  1670  001314  0E24               	movlw	36
  1671  001316  6E9E               	movwf	158,c	;volatile
  1672                           
  1673                           ;mcc_generated_files/eusart1.c: 80:     SP1BRGL = 0xCF;
  1674  001318  0ECF               	movlw	207
  1675  00131A  6E9B               	movwf	155,c	;volatile
  1676                           
  1677                           ;mcc_generated_files/eusart1.c: 83:     SP1BRGH = 0x00;
  1678  00131C  0E00               	movlw	0
  1679  00131E  6E9C               	movwf	156,c	;volatile
  1680  001320                     
  1681                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  1682  001320  0E00               	movlw	0
  1683  001322  6E01               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  1684  001324  0E00               	movlw	0
  1685  001326  6E02               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  1686  001328  EC9F  F00A         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  1687  00132C                     
  1688                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  1689  00132C  0E00               	movlw	0
  1690  00132E  6E01               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  1691  001330  0E00               	movlw	0
  1692  001332  6E02               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  1693  001334  EC9A  F00A         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  1694  001338                     
  1695                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  1696  001338  0E00               	movlw	0
  1697  00133A  6E01               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  1698  00133C  0E00               	movlw	0
  1699  00133E  6E02               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  1700  001340  ECA4  F00A         	call	_EUSART1_SetErrorHandler	;wreg free
  1701  001344                     
  1702                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  1703  001344  0E00               	movlw	0
  1704  001346  0100               	movlb	0	; () banked
  1705  001348  6FBA               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  1706  00134A                     
  1707                           ; BSR set to: 0
  1708  00134A  0012               	return		;funcret
  1709  00134C                     __end_of_EUSART1_Initialize:
  1710                           	callstack 0
  1711                           
  1712 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  1713 ;; Defined at:
  1714 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1717 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;		None
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      void 
  1722 ;; Registers used:
  1723 ;;		wreg, status,2, status,0
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1729 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1732 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1733 ;;Total ram usage:        2 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; This function calls:
  1736 ;;		Nothing
  1737 ;; This function is called by:
  1738 ;;		_EUSART1_Initialize
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           	psect	text6
  1743  001534                     __ptext6:
  1744                           	callstack 0
  1745  001534                     _EUSART1_SetOverrunErrorHandler:
  1746                           	callstack 28
  1747  001534                     
  1748                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  1749  001534  C001  F18C         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  1750  001538  C002  F18D         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  1751  00153C  0012               	return		;funcret
  1752  00153E                     __end_of_EUSART1_SetOverrunErrorHandler:
  1753                           	callstack 0
  1754                           
  1755 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  1756 ;; Defined at:
  1757 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1760 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;		None
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  1    wreg      void 
  1765 ;; Registers used:
  1766 ;;		wreg, status,2, status,0
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1772 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1775 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1776 ;;Total ram usage:        2 bytes
  1777 ;; Hardware stack levels used:    1
  1778 ;; This function calls:
  1779 ;;		Nothing
  1780 ;; This function is called by:
  1781 ;;		_EUSART1_Initialize
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           	psect	text7
  1786  00153E                     __ptext7:
  1787                           	callstack 0
  1788  00153E                     _EUSART1_SetFramingErrorHandler:
  1789                           	callstack 28
  1790  00153E                     
  1791                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  1792  00153E  C001  F0FD         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  1793  001542  C002  F0FE         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  1794  001546  0012               	return		;funcret
  1795  001548                     __end_of_EUSART1_SetFramingErrorHandler:
  1796                           	callstack 0
  1797                           
  1798 ;; *************** function _EUSART1_SetErrorHandler *****************
  1799 ;; Defined at:
  1800 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1803 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;		None
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg, status,2, status,0
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1815 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1818 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1819 ;;Total ram usage:        2 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; This function calls:
  1822 ;;		Nothing
  1823 ;; This function is called by:
  1824 ;;		_EUSART1_Initialize
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           	psect	text8
  1829  001548                     __ptext8:
  1830                           	callstack 0
  1831  001548                     _EUSART1_SetErrorHandler:
  1832                           	callstack 28
  1833  001548                     
  1834                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  1835  001548  C001  F18A         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  1836  00154C  C002  F18B         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  1837  001550  0012               	return		;funcret
  1838  001552                     __end_of_EUSART1_SetErrorHandler:
  1839                           	callstack 0
  1840                           
  1841 ;; *************** function _DATAEE_ReadByte *****************
  1842 ;; Defined at:
  1843 ;;		line 188 in file "mcc_generated_files/memory.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;  bAdd            2    0[COMRAM] unsigned short 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;		None
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      unsigned char 
  1850 ;; Registers used:
  1851 ;;		wreg, status,2, status,0
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1860 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1861 ;;Total ram usage:        2 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; This function calls:
  1864 ;;		Nothing
  1865 ;; This function is called by:
  1866 ;;		_main
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           	psect	text9
  1871  0014D6                     __ptext9:
  1872                           	callstack 0
  1873  0014D6                     _DATAEE_ReadByte:
  1874                           	callstack 30
  1875  0014D6                     
  1876                           ;mcc_generated_files/memory.c: 188: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 189: {;mcc_generated_files/memory.c: 190:     NVMADRH = ((bAdd >> 8) & 
      +                          0x03);
  1877  0014D6  5002               	movf	(DATAEE_ReadByte@bAdd+1)^0,w,c
  1878  0014D8  0B03               	andlw	3
  1879  0014DA  6E7F               	movwf	127,c	;volatile
  1880  0014DC                     
  1881                           ;mcc_generated_files/memory.c: 191:     NVMADRL = (bAdd & 0xFF);
  1882  0014DC  C001  FF7E         	movff	DATAEE_ReadByte@bAdd,3966	;volatile
  1883  0014E0                     
  1884                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.NVMREG = 0;
  1885  0014E0  0E3F               	movlw	-193
  1886  0014E2  1681               	andwf	129,f,c	;volsfr
  1887  0014E4                     
  1888                           ;mcc_generated_files/memory.c: 193:     NVMCON1bits.RD = 1;
  1889  0014E4  8081               	bsf	129,0,c	;volsfr
  1890  0014E6                     
  1891                           ;mcc_generated_files/memory.c: 194:     __nop();
  1892  0014E6  F000               	nop	
  1893  0014E8                     
  1894                           ;mcc_generated_files/memory.c: 195:     __nop();
  1895  0014E8  F000               	nop	
  1896  0014EA                     
  1897                           ;mcc_generated_files/memory.c: 196:     NVMCON1bits.NVMREG0 = 0;
  1898  0014EA  9C81               	bcf	129,6,c	;volsfr
  1899  0014EC                     
  1900                           ;mcc_generated_files/memory.c: 197:     NVMCON1bits.NVMREG1 = 1;
  1901  0014EC  8E81               	bsf	129,7,c	;volsfr
  1902  0014EE                     
  1903                           ;mcc_generated_files/memory.c: 198:     return (NVMDAT);
  1904  0014EE  5080               	movf	128,w,c	;volatile
  1905  0014F0  0012               	return		;funcret
  1906  0014F2                     __end_of_DATAEE_ReadByte:
  1907                           	callstack 0
  1908                           
  1909 ;; *************** function _BOOT_Load *****************
  1910 ;; Defined at:
  1911 ;;		line 20 in file "bootloader.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;		None
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;		None
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      unsigned char 
  1918 ;; Registers used:
  1919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1927 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1928 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1929 ;;Total ram usage:        2 bytes
  1930 ;; Hardware stack levels used:    1
  1931 ;; Hardware stack levels required when called:   10
  1932 ;; This function calls:
  1933 ;;		_BOOT_EraseUserFlash
  1934 ;;		_BOOT_GetHeader
  1935 ;;		_BOOT_Read
  1936 ;;		_BOOT_ReadVersion
  1937 ;;		_BOOT_Write
  1938 ;;		_DATAEE_WriteByte
  1939 ;;		_EUSART1_Read
  1940 ;;		_EUSART1_Write
  1941 ;; This function is called by:
  1942 ;;		_main
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text10
  1947  000C22                     __ptext10:
  1948                           	callstack 0
  1949  000C22                     _BOOT_Load:
  1950                           	callstack 20
  1951  000C22                     l2835:
  1952  000C22  EC33  F00A         	call	_EUSART1_Read	;wreg free
  1953  000C26  0A0F               	xorlw	15
  1954  000C28  A4D8               	btfss	status,2,c
  1955  000C2A  EF19  F006         	goto	u1751
  1956  000C2E  EF1B  F006         	goto	u1750
  1957  000C32                     u1751:
  1958  000C32  EF11  F006         	goto	l2835
  1959  000C36                     u1750:
  1960  000C36                     
  1961                           ;bootloader.c: 27:     Header.get();
  1962  000C36  EE20  F067         	lfsr	2,_Header+7
  1963  000C3A  D802               	call	u1768
  1964  000C3C  EF2A  F006         	goto	u1769
  1965  000C40                     u1768:
  1966  000C40  0005               	push	
  1967  000C42  6EFA               	movwf	pclath,c
  1968  000C44  50DE               	movf	postinc2,w,c
  1969  000C46  6EFD               	movwf	tosl,c
  1970  000C48  50DE               	movf	postinc2,w,c
  1971  000C4A  6EFE               	movwf	tosh,c
  1972  000C4C  50F8               	movf	tblptru,w,c
  1973  000C4E  6EFF               	movwf	tosu,c
  1974  000C50  50FA               	movf	pclath,w,c
  1975  000C52  0012               	return		;indir
  1976  000C54                     u1769:
  1977                           
  1978                           ;bootloader.c: 29:     switch(Header.command)
  1979  000C54  EF4C  F006         	goto	l2857
  1980  000C58                     l2839:
  1981                           
  1982                           ; BSR set to: 0
  1983                           ;bootloader.c: 32:             BOOT_ReadVersion();
  1984  000C58  EC36  F008         	call	_BOOT_ReadVersion	;wreg free
  1985                           
  1986                           ;bootloader.c: 33:             break;
  1987  000C5C  EF7E  F006         	goto	l2859
  1988  000C60                     l2841:
  1989                           
  1990                           ; BSR set to: 0
  1991                           ;bootloader.c: 35:             BOOT_EraseUserFlash();
  1992  000C60  EC4B  F007         	call	_BOOT_EraseUserFlash	;wreg free
  1993                           
  1994                           ;bootloader.c: 36:             break;
  1995  000C64  EF7E  F006         	goto	l2859
  1996  000C68                     l2843:
  1997                           
  1998                           ; BSR set to: 0
  1999                           ;bootloader.c: 39:             BOOT_Write();
  2000  000C68  EC10  F000         	call	_BOOT_Write	;wreg free
  2001                           
  2002                           ;bootloader.c: 40:             break;
  2003  000C6C  EF7E  F006         	goto	l2859
  2004  000C70                     l2845:
  2005                           
  2006                           ; BSR set to: 0
  2007                           ;bootloader.c: 44:             BOOT_Read();
  2008  000C70  EC07  F003         	call	_BOOT_Read	;wreg free
  2009                           
  2010                           ;bootloader.c: 45:             break;
  2011  000C74  EF7E  F006         	goto	l2859
  2012  000C78                     l2847:
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;bootloader.c: 49:             DATAEE_WriteByte(0x10, 0xAA);
  2016  000C78  0E00               	movlw	0
  2017  000C7A  6E02               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
  2018  000C7C  0E10               	movlw	16
  2019  000C7E  6E01               	movwf	DATAEE_WriteByte@bAdd^0,c
  2020  000C80  0EAA               	movlw	170
  2021  000C82  6E03               	movwf	DATAEE_WriteByte@bData^0,c
  2022  000C84  EC1C  F009         	call	_DATAEE_WriteByte	;wreg free
  2023  000C88                     
  2024                           ;bootloader.c: 50:             return 0;
  2025  000C88  0E00               	movlw	0
  2026  000C8A  EF7F  F006         	goto	l346
  2027  000C8E                     l2853:
  2028                           
  2029                           ; BSR set to: 0
  2030                           ;bootloader.c: 52:             EUSART1_Write(0xFE);
  2031  000C8E  0EFE               	movlw	254
  2032  000C90  EC85  F00A         	call	_EUSART1_Write
  2033                           
  2034                           ;bootloader.c: 53:             break;
  2035  000C94  EF7E  F006         	goto	l2859
  2036  000C98                     l2857:
  2037  000C98  0100               	movlb	0	; () banked
  2038  000C9A  5160               	movf	_Header& (0+255),w,b
  2039  000C9C  6FF9               	movwf	??_BOOT_Load& (0+255),b
  2040  000C9E  6BFA               	clrf	(??_BOOT_Load+1)& (0+255),b
  2041                           
  2042                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2043                           ; Switch size 1, requested type "simple"
  2044                           ; Number of cases is 1, Range of values is 0 to 0
  2045                           ; switch strategies available:
  2046                           ; Name         Instructions Cycles
  2047                           ; simple_byte            4     3 (average)
  2048                           ;	Chosen strategy is simple_byte
  2049  000CA0  51FA               	movf	(??_BOOT_Load+1)& (0+255),w,b
  2050  000CA2  0A00               	xorlw	0	; case 0
  2051  000CA4  B4D8               	btfsc	status,2,c
  2052  000CA6  EF57  F006         	goto	l3075
  2053  000CAA  EF47  F006         	goto	l2853
  2054  000CAE                     l3075:
  2055                           
  2056                           ; BSR set to: 0
  2057                           ; Switch size 1, requested type "simple"
  2058                           ; Number of cases is 9, Range of values is 0 to 8
  2059                           ; switch strategies available:
  2060                           ; Name         Instructions Cycles
  2061                           ; simple_byte           28    15 (average)
  2062                           ;	Chosen strategy is simple_byte
  2063  000CAE  51F9               	movf	??_BOOT_Load& (0+255),w,b
  2064  000CB0  0A00               	xorlw	0	; case 0
  2065  000CB2  B4D8               	btfsc	status,2,c
  2066  000CB4  EF2C  F006         	goto	l2839
  2067  000CB8  0A01               	xorlw	1	; case 1
  2068  000CBA  B4D8               	btfsc	status,2,c
  2069  000CBC  EF38  F006         	goto	l2845
  2070  000CC0  0A03               	xorlw	3	; case 2
  2071  000CC2  B4D8               	btfsc	status,2,c
  2072  000CC4  EF34  F006         	goto	l2843
  2073  000CC8  0A01               	xorlw	1	; case 3
  2074  000CCA  B4D8               	btfsc	status,2,c
  2075  000CCC  EF30  F006         	goto	l2841
  2076  000CD0  0A07               	xorlw	7	; case 4
  2077  000CD2  B4D8               	btfsc	status,2,c
  2078  000CD4  EF38  F006         	goto	l2845
  2079  000CD8  0A01               	xorlw	1	; case 5
  2080  000CDA  B4D8               	btfsc	status,2,c
  2081  000CDC  EF34  F006         	goto	l2843
  2082  000CE0  0A03               	xorlw	3	; case 6
  2083  000CE2  B4D8               	btfsc	status,2,c
  2084  000CE4  EF38  F006         	goto	l2845
  2085  000CE8  0A01               	xorlw	1	; case 7
  2086  000CEA  B4D8               	btfsc	status,2,c
  2087  000CEC  EF7E  F006         	goto	l2859
  2088  000CF0  0A0F               	xorlw	15	; case 8
  2089  000CF2  B4D8               	btfsc	status,2,c
  2090  000CF4  EF3C  F006         	goto	l2847
  2091  000CF8  EF47  F006         	goto	l2853
  2092  000CFC                     l2859:
  2093                           
  2094                           ;bootloader.c: 55:     return 1;
  2095  000CFC  0E01               	movlw	1
  2096  000CFE                     l346:
  2097  000CFE  0012               	return		;funcret
  2098  000D00                     __end_of_BOOT_Load:
  2099                           	callstack 0
  2100                           
  2101 ;; *************** function _BOOT_Write *****************
  2102 ;; Defined at:
  2103 ;;		line 165 in file "bootloader.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;  i               2   28[BANK0 ] int 
  2108 ;;  min_length      4    0        unsigned long 
  2109 ;;  max_length      4   20[BANK0 ] unsigned long 
  2110 ;;  min_address     4   16[BANK0 ] unsigned long 
  2111 ;;  max_address     4   12[BANK0 ] unsigned long 
  2112 ;;  crc             2    0        unsigned short 
  2113 ;; Return value:  Size  Location     Type
  2114 ;;                  1    wreg      void 
  2115 ;; Registers used:
  2116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2123 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2124 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2125 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2126 ;;Total ram usage:       22 bytes
  2127 ;; Hardware stack levels used:    1
  2128 ;; Hardware stack levels required when called:    9
  2129 ;; This function calls:
  2130 ;;		_DATAEE_WriteByte
  2131 ;;		_EUSART1_Write
  2132 ;;		_FLASH_WriteBlock
  2133 ;;		_FLASH_crc16
  2134 ;;		_printf
  2135 ;; This function is called by:
  2136 ;;		_BOOT_Load
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           	psect	text11
  2141  000020                     __ptext11:
  2142                           	callstack 0
  2143  000020                     _BOOT_Write:
  2144                           	callstack 20
  2145  000020                     
  2146                           ;bootloader.c: 167:     uint32_t max_address, min_address;;bootloader.c: 168:     uint32
      +                          _t max_length, min_length;;bootloader.c: 169:     uint16_t crc;;bootloader.c: 171:     s
      +                          witch(Header.command)
  2147  000020  EF46  F000         	goto	l2605
  2148  000024                     l2599:
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;bootloader.c: 174:             min_address = 0x4000;
  2152  000024  0E00               	movlw	0
  2153  000026  6FEB               	movwf	BOOT_Write@min_address& (0+255),b
  2154  000028  0E40               	movlw	64
  2155  00002A  6FEC               	movwf	(BOOT_Write@min_address+1)& (0+255),b
  2156  00002C  0E00               	movlw	0
  2157  00002E  6FED               	movwf	(BOOT_Write@min_address+2)& (0+255),b
  2158  000030  0E00               	movlw	0
  2159  000032  6FEE               	movwf	(BOOT_Write@min_address+3)& (0+255),b
  2160                           
  2161                           ;bootloader.c: 175:             max_address = 0xFFFF;
  2162  000034  0EFF               	movlw	255
  2163  000036  6FE7               	movwf	BOOT_Write@max_address& (0+255),b
  2164  000038  0EFF               	movlw	255
  2165  00003A  6FE8               	movwf	(BOOT_Write@max_address+1)& (0+255),b
  2166  00003C  0E00               	movlw	0
  2167  00003E  6FE9               	movwf	(BOOT_Write@max_address+2)& (0+255),b
  2168  000040  0E00               	movlw	0
  2169  000042  6FEA               	movwf	(BOOT_Write@max_address+3)& (0+255),b
  2170                           
  2171                           ;bootloader.c: 177:             max_length = 0x40;
  2172  000044  0E40               	movlw	64
  2173  000046  6FEF               	movwf	BOOT_Write@max_length& (0+255),b
  2174  000048  0E00               	movlw	0
  2175  00004A  6FF0               	movwf	(BOOT_Write@max_length+1)& (0+255),b
  2176  00004C  0E00               	movlw	0
  2177  00004E  6FF1               	movwf	(BOOT_Write@max_length+2)& (0+255),b
  2178  000050  0E00               	movlw	0
  2179  000052  6FF2               	movwf	(BOOT_Write@max_length+3)& (0+255),b
  2180                           
  2181                           ;bootloader.c: 178:             break;
  2182  000054  EF5C  F000         	goto	l2607
  2183  000058                     l2601:
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;bootloader.c: 180:             min_address = 0x000;
  2187  000058  0E00               	movlw	0
  2188  00005A  6FEB               	movwf	BOOT_Write@min_address& (0+255),b
  2189  00005C  0E00               	movlw	0
  2190  00005E  6FEC               	movwf	(BOOT_Write@min_address+1)& (0+255),b
  2191  000060  0E00               	movlw	0
  2192  000062  6FED               	movwf	(BOOT_Write@min_address+2)& (0+255),b
  2193  000064  0E00               	movlw	0
  2194  000066  6FEE               	movwf	(BOOT_Write@min_address+3)& (0+255),b
  2195                           
  2196                           ;bootloader.c: 181:             max_address = 0x400;
  2197  000068  0E00               	movlw	0
  2198  00006A  6FE7               	movwf	BOOT_Write@max_address& (0+255),b
  2199  00006C  0E04               	movlw	4
  2200  00006E  6FE8               	movwf	(BOOT_Write@max_address+1)& (0+255),b
  2201  000070  0E00               	movlw	0
  2202  000072  6FE9               	movwf	(BOOT_Write@max_address+2)& (0+255),b
  2203  000074  0E00               	movlw	0
  2204  000076  6FEA               	movwf	(BOOT_Write@max_address+3)& (0+255),b
  2205                           
  2206                           ;bootloader.c: 183:             max_length = 0x40;
  2207  000078  0E40               	movlw	64
  2208  00007A  6FEF               	movwf	BOOT_Write@max_length& (0+255),b
  2209  00007C  0E00               	movlw	0
  2210  00007E  6FF0               	movwf	(BOOT_Write@max_length+1)& (0+255),b
  2211  000080  0E00               	movlw	0
  2212  000082  6FF1               	movwf	(BOOT_Write@max_length+2)& (0+255),b
  2213  000084  0E00               	movlw	0
  2214  000086  6FF2               	movwf	(BOOT_Write@max_length+3)& (0+255),b
  2215                           
  2216                           ;bootloader.c: 184:             break;
  2217  000088  EF5C  F000         	goto	l2607
  2218  00008C                     l2605:
  2219  00008C  0100               	movlb	0	; () banked
  2220  00008E  5160               	movf	_Header& (0+255),w,b
  2221  000090  6FE3               	movwf	??_BOOT_Write& (0+255),b
  2222  000092  6BE4               	clrf	(??_BOOT_Write+1)& (0+255),b
  2223                           
  2224                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2225                           ; Switch size 1, requested type "simple"
  2226                           ; Number of cases is 1, Range of values is 0 to 0
  2227                           ; switch strategies available:
  2228                           ; Name         Instructions Cycles
  2229                           ; simple_byte            4     3 (average)
  2230                           ;	Chosen strategy is simple_byte
  2231  000094  51E4               	movf	(??_BOOT_Write+1)& (0+255),w,b
  2232  000096  0A00               	xorlw	0	; case 0
  2233  000098  B4D8               	btfsc	status,2,c
  2234  00009A  EF51  F000         	goto	l3077
  2235  00009E  EF9A  F001         	goto	l392
  2236  0000A2                     l3077:
  2237                           
  2238                           ; BSR set to: 0
  2239                           ; Switch size 1, requested type "simple"
  2240                           ; Number of cases is 2, Range of values is 2 to 5
  2241                           ; switch strategies available:
  2242                           ; Name         Instructions Cycles
  2243                           ; simple_byte            7     4 (average)
  2244                           ;	Chosen strategy is simple_byte
  2245  0000A2  51E3               	movf	??_BOOT_Write& (0+255),w,b
  2246  0000A4  0A02               	xorlw	2	; case 2
  2247  0000A6  B4D8               	btfsc	status,2,c
  2248  0000A8  EF12  F000         	goto	l2599
  2249  0000AC  0A07               	xorlw	7	; case 5
  2250  0000AE  B4D8               	btfsc	status,2,c
  2251  0000B0  EF2C  F000         	goto	l2601
  2252  0000B4  EF9A  F001         	goto	l392
  2253  0000B8                     l2607:
  2254                           
  2255                           ; BSR set to: 0
  2256                           ;bootloader.c: 188:     if(Header.address < min_address || Header.address > max_address)
  2257  0000B8  51EB               	movf	BOOT_Write@min_address& (0+255),w,b
  2258  0000BA  5D61               	subwf	(_Header+1)& (0+255),w,b
  2259  0000BC  51EC               	movf	(BOOT_Write@min_address+1)& (0+255),w,b
  2260  0000BE  5962               	subwfb	(_Header+2)& (0+255),w,b
  2261  0000C0  51ED               	movf	(BOOT_Write@min_address+2)& (0+255),w,b
  2262  0000C2  5963               	subwfb	(_Header+3)& (0+255),w,b
  2263  0000C4  51EE               	movf	(BOOT_Write@min_address+3)& (0+255),w,b
  2264  0000C6  5964               	subwfb	(_Header+4)& (0+255),w,b
  2265  0000C8  A0D8               	btfss	status,0,c
  2266  0000CA  EF69  F000         	goto	u1541
  2267  0000CE  EF6B  F000         	goto	u1540
  2268  0000D2                     u1541:
  2269  0000D2  EF7A  F000         	goto	l2611
  2270  0000D6                     u1540:
  2271  0000D6                     
  2272                           ; BSR set to: 0
  2273  0000D6  5161               	movf	(_Header+1)& (0+255),w,b
  2274  0000D8  5DE7               	subwf	BOOT_Write@max_address& (0+255),w,b
  2275  0000DA  5162               	movf	(_Header+2)& (0+255),w,b
  2276  0000DC  59E8               	subwfb	(BOOT_Write@max_address+1)& (0+255),w,b
  2277  0000DE  5163               	movf	(_Header+3)& (0+255),w,b
  2278  0000E0  59E9               	subwfb	(BOOT_Write@max_address+2)& (0+255),w,b
  2279  0000E2  5164               	movf	(_Header+4)& (0+255),w,b
  2280  0000E4  59EA               	subwfb	(BOOT_Write@max_address+3)& (0+255),w,b
  2281  0000E6  B0D8               	btfsc	status,0,c
  2282  0000E8  EF78  F000         	goto	u1551
  2283  0000EC  EF7A  F000         	goto	u1550
  2284  0000F0                     u1551:
  2285  0000F0  EF86  F000         	goto	l2617
  2286  0000F4                     u1550:
  2287  0000F4                     l2611:
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;bootloader.c: 189:     {;bootloader.c: 191:         EUSART1_Write(0xFC);
  2291  0000F4  0EFC               	movlw	252
  2292  0000F6  EC85  F00A         	call	_EUSART1_Write
  2293  0000FA                     
  2294                           ;bootloader.c: 192:         printf("address error \r\n");
  2295  0000FA  0EAF               	movlw	low STR_6
  2296  0000FC  0100               	movlb	0	; () banked
  2297  0000FE  6FDB               	movwf	printf@fmt& (0+255),b
  2298  000100  0E3F               	movlw	high STR_6
  2299  000102  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  2300  000104  EC49  F00A         	call	_printf	;wreg free
  2301  000108  EF9A  F001         	goto	l392
  2302  00010C                     l2617:
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;bootloader.c: 196:     if(Header.marker != 0x00)
  2306  00010C  5165               	movf	(_Header+5)& (0+255),w,b
  2307  00010E  B4D8               	btfsc	status,2,c
  2308  000110  EF8C  F000         	goto	u1561
  2309  000114  EF8E  F000         	goto	u1560
  2310  000118                     u1561:
  2311  000118  EF9A  F000         	goto	l2625
  2312  00011C                     u1560:
  2313  00011C                     
  2314                           ; BSR set to: 0
  2315                           ;bootloader.c: 197:     {;bootloader.c: 199:         EUSART1_Write(0xFD);
  2316  00011C  0EFD               	movlw	253
  2317  00011E  EC85  F00A         	call	_EUSART1_Write
  2318  000122                     
  2319                           ;bootloader.c: 200:         printf("marker error \r\n");
  2320  000122  0EE0               	movlw	low STR_7
  2321  000124  0100               	movlb	0	; () banked
  2322  000126  6FDB               	movwf	printf@fmt& (0+255),b
  2323  000128  0E3F               	movlw	high STR_7
  2324  00012A  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  2325  00012C  EC49  F00A         	call	_printf	;wreg free
  2326  000130  EF9A  F001         	goto	l392
  2327  000134                     l2625:
  2328  000134                     
  2329                           ; BSR set to: 0
  2330  000134  0E40               	movlw	64
  2331  000136  6566               	cpfsgt	(_Header+6)& (0+255),b
  2332  000138  EFA0  F000         	goto	u1571
  2333  00013C  EFA2  F000         	goto	u1570
  2334  000140                     u1571:
  2335  000140  EFA7  F000         	goto	l2633
  2336  000144                     u1570:
  2337  000144                     
  2338                           ; BSR set to: 0
  2339                           ;bootloader.c: 205:     {;bootloader.c: 207:         EUSART1_Write(0xFB);
  2340  000144  0EFB               	movlw	251
  2341  000146  EC85  F00A         	call	_EUSART1_Write
  2342  00014A  EF9A  F001         	goto	l392
  2343  00014E                     l2633:
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;bootloader.c: 211:     if (Header.length != 0) {
  2347  00014E  5166               	movf	(_Header+6)& (0+255),w,b
  2348  000150  B4D8               	btfsc	status,2,c
  2349  000152  EFAD  F000         	goto	u1581
  2350  000156  EFAF  F000         	goto	u1580
  2351  00015A                     u1581:
  2352  00015A  EFF3  F000         	goto	l2653
  2353  00015E                     u1580:
  2354  00015E                     
  2355                           ; BSR set to: 0
  2356                           ;bootloader.c: 213:         if (Header.crc != FLASH_crc16(Header.dataBuffer, Header.leng
      +                          th)) {
  2357  00015E  0E69               	movlw	low (_Header+9)
  2358  000160  6E01               	movwf	FLASH_crc16@data_p^0,c
  2359  000162  0E00               	movlw	high (_Header+9)
  2360  000164  6E02               	movwf	(FLASH_crc16@data_p+1)^0,c
  2361  000166  C066  F003         	movff	_Header+6,FLASH_crc16@length
  2362  00016A  ECF2  F007         	call	_FLASH_crc16	;wreg free
  2363  00016E  0100               	movlb	0	; () banked
  2364  000170  51A9               	movf	(_Header+73)& (0+255),w,b
  2365  000172  1801               	xorwf	?_FLASH_crc16^0,w,c
  2366  000174  E109               	bnz	u1590
  2367  000176  51AA               	movf	(_Header+74)& (0+255),w,b
  2368  000178  1802               	xorwf	(?_FLASH_crc16+1)^0,w,c
  2369  00017A  B4D8               	btfsc	status,2,c
  2370  00017C  EFC2  F000         	goto	u1591
  2371  000180  EFC4  F000         	goto	u1590
  2372  000184                     u1591:
  2373  000184  EFE8  F000         	goto	l2649
  2374  000188                     u1590:
  2375  000188                     
  2376                           ; BSR set to: 0
  2377                           ;bootloader.c: 214:             EUSART1_Write(0xF8);
  2378  000188  0EF8               	movlw	248
  2379  00018A  EC85  F00A         	call	_EUSART1_Write
  2380  00018E                     
  2381                           ;bootloader.c: 215:             printf("calculate crc = 0x%X \r\n",FLASH_crc16(Header.da
      +                          taBuffer, Header.length));
  2382  00018E  0E1D               	movlw	low STR_8
  2383  000190  0100               	movlb	0	; () banked
  2384  000192  6FDB               	movwf	printf@fmt& (0+255),b
  2385  000194  0E3F               	movlw	high STR_8
  2386  000196  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  2387  000198  0E69               	movlw	low (_Header+9)
  2388  00019A  6E01               	movwf	FLASH_crc16@data_p^0,c
  2389  00019C  0E00               	movlw	high (_Header+9)
  2390  00019E  6E02               	movwf	(FLASH_crc16@data_p+1)^0,c
  2391  0001A0  C066  F003         	movff	_Header+6,FLASH_crc16@length
  2392  0001A4  ECF2  F007         	call	_FLASH_crc16	;wreg free
  2393  0001A8  C001  F0DD         	movff	?_FLASH_crc16,?_printf+2
  2394  0001AC  C002  F0DE         	movff	?_FLASH_crc16+1,?_printf+3
  2395  0001B0  EC49  F00A         	call	_printf	;wreg free
  2396  0001B4                     
  2397                           ;bootloader.c: 216:             printf("crc not verified \r\n");
  2398  0001B4  0E78               	movlw	low STR_9
  2399  0001B6  0100               	movlb	0	; () banked
  2400  0001B8  6FDB               	movwf	printf@fmt& (0+255),b
  2401  0001BA  0E3F               	movlw	high STR_9
  2402  0001BC  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  2403  0001BE  EC49  F00A         	call	_printf	;wreg free
  2404  0001C2                     
  2405                           ;bootloader.c: 217:             Header.crc = 0;
  2406  0001C2  0E00               	movlw	0
  2407  0001C4  0100               	movlb	0	; () banked
  2408  0001C6  6FAA               	movwf	(_Header+74)& (0+255),b
  2409  0001C8  0E00               	movlw	0
  2410  0001CA  6FA9               	movwf	(_Header+73)& (0+255),b
  2411  0001CC  EF9A  F001         	goto	l392
  2412  0001D0                     l2649:
  2413                           
  2414                           ; BSR set to: 0
  2415                           ;bootloader.c: 220:             printf("crc verified \r\n");
  2416  0001D0  0EC0               	movlw	low STR_10
  2417  0001D2  6FDB               	movwf	printf@fmt& (0+255),b
  2418  0001D4  0E3F               	movlw	high STR_10
  2419  0001D6  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  2420  0001D8  EC49  F00A         	call	_printf	;wreg free
  2421  0001DC                     
  2422                           ;bootloader.c: 221:             Header.crc = 0;
  2423  0001DC  0E00               	movlw	0
  2424  0001DE  0100               	movlb	0	; () banked
  2425  0001E0  6FAA               	movwf	(_Header+74)& (0+255),b
  2426  0001E2  0E00               	movlw	0
  2427  0001E4  6FA9               	movwf	(_Header+73)& (0+255),b
  2428  0001E6                     l2653:
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;bootloader.c: 226:     if(Header.endOfPacket != 0x04)
  2432  0001E6  0E04               	movlw	4
  2433  0001E8  19AB               	xorwf	(_Header+75)& (0+255),w,b
  2434  0001EA  B4D8               	btfsc	status,2,c
  2435  0001EC  EFFA  F000         	goto	u1601
  2436  0001F0  EFFC  F000         	goto	u1600
  2437  0001F4                     u1601:
  2438  0001F4  EF08  F001         	goto	l2663
  2439  0001F8                     u1600:
  2440  0001F8                     
  2441                           ; BSR set to: 0
  2442                           ;bootloader.c: 227:     {;bootloader.c: 229:         EUSART1_Write(0xFA);
  2443  0001F8  0EFA               	movlw	250
  2444  0001FA  EC85  F00A         	call	_EUSART1_Write
  2445  0001FE                     
  2446                           ;bootloader.c: 230:         printf("end of file error \r\n");
  2447  0001FE  0E63               	movlw	low STR_11
  2448  000200  0100               	movlb	0	; () banked
  2449  000202  6FDB               	movwf	printf@fmt& (0+255),b
  2450  000204  0E3F               	movlw	high STR_11
  2451  000206  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  2452  000208  EC49  F00A         	call	_printf	;wreg free
  2453  00020C  EF9A  F001         	goto	l392
  2454  000210                     l2663:
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;bootloader.c: 233:         printf("writing.......");
  2458  000210  0EF0               	movlw	low STR_12
  2459  000212  6FDB               	movwf	printf@fmt& (0+255),b
  2460  000214  0E3F               	movlw	high STR_12
  2461  000216  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  2462  000218  EC49  F00A         	call	_printf	;wreg free
  2463  00021C  EF84  F001         	goto	l2689
  2464  000220                     l2665:
  2465                           
  2466                           ; BSR set to: 0
  2467                           ;bootloader.c: 241:             if (FLASH_WriteBlock(Header.address, (uint8_t *) Header.
      +                          dataBuffer) == 0) {
  2468  000220  C061  F006         	movff	_Header+1,FLASH_WriteBlock@writeAddr
  2469  000224  C062  F007         	movff	_Header+2,FLASH_WriteBlock@writeAddr+1
  2470  000228  C063  F008         	movff	_Header+3,FLASH_WriteBlock@writeAddr+2
  2471  00022C  C064  F009         	movff	_Header+4,FLASH_WriteBlock@writeAddr+3
  2472  000230  0E69               	movlw	low (_Header+9)
  2473  000232  6E0A               	movwf	FLASH_WriteBlock@flashWrBufPtr^0,c
  2474  000234  0E00               	movlw	high (_Header+9)
  2475  000236  6E0B               	movwf	(FLASH_WriteBlock@flashWrBufPtr+1)^0,c
  2476  000238  EC80  F006         	call	_FLASH_WriteBlock	;wreg free
  2477  00023C  0900               	iorlw	0
  2478  00023E  A4D8               	btfss	status,2,c
  2479  000240  EF24  F001         	goto	u1611
  2480  000244  EF26  F001         	goto	u1610
  2481  000248                     u1611:
  2482  000248  EF3B  F001         	goto	l2673
  2483  00024C                     u1610:
  2484  00024C                     
  2485                           ;bootloader.c: 242:                 printf("write successfully \r\n");
  2486  00024C  0E4D               	movlw	low STR_13
  2487  00024E  0100               	movlb	0	; () banked
  2488  000250  6FDB               	movwf	printf@fmt& (0+255),b
  2489  000252  0E3F               	movlw	high STR_13
  2490  000254  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  2491  000256  EC49  F00A         	call	_printf	;wreg free
  2492  00025A                     
  2493                           ;bootloader.c: 243:                 Header.address = 0;
  2494  00025A  0E00               	movlw	0
  2495  00025C  0100               	movlb	0	; () banked
  2496  00025E  6F61               	movwf	(_Header+1)& (0+255),b
  2497  000260  0E00               	movlw	0
  2498  000262  6F62               	movwf	(_Header+2)& (0+255),b
  2499  000264  0E00               	movlw	0
  2500  000266  6F63               	movwf	(_Header+3)& (0+255),b
  2501  000268  0E00               	movlw	0
  2502  00026A  6F64               	movwf	(_Header+4)& (0+255),b
  2503  00026C                     
  2504                           ; BSR set to: 0
  2505                           ;bootloader.c: 244:                 EUSART1_Write(0xEE);
  2506  00026C  0EEE               	movlw	238
  2507  00026E  EC85  F00A         	call	_EUSART1_Write
  2508                           
  2509                           ;bootloader.c: 245:             } else {
  2510  000272  EF9A  F001         	goto	l392
  2511  000276                     l2673:
  2512                           
  2513                           ;bootloader.c: 246:                 printf("write failed \r\n");
  2514  000276  0ED0               	movlw	low STR_14
  2515  000278  0100               	movlb	0	; () banked
  2516  00027A  6FDB               	movwf	printf@fmt& (0+255),b
  2517  00027C  0E3F               	movlw	high STR_14
  2518  00027E  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  2519  000280  EC49  F00A         	call	_printf	;wreg free
  2520  000284  EF9A  F001         	goto	l392
  2521  000288                     l2675:
  2522                           
  2523                           ; BSR set to: 0
  2524                           ;bootloader.c: 250:             for(int i = 0; i < Header.length; i++)
  2525  000288  0E00               	movlw	0
  2526  00028A  6FF8               	movwf	(BOOT_Write@i+1)& (0+255),b
  2527  00028C  0E00               	movlw	0
  2528  00028E  6FF7               	movwf	BOOT_Write@i& (0+255),b
  2529  000290  EF68  F001         	goto	l2681
  2530  000294                     l2677:
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;bootloader.c: 251:             {;bootloader.c: 252:                 DATAEE_WriteByte(He
      +                          ader.address++, Header.dataBuffer[i]);
  2534  000294  C061  F0E3         	movff	_Header+1,??_BOOT_Write
  2535  000298  C062  F0E4         	movff	_Header+2,??_BOOT_Write+1
  2536  00029C  C063  F0E5         	movff	_Header+3,??_BOOT_Write+2
  2537  0002A0  C064  F0E6         	movff	_Header+4,??_BOOT_Write+3
  2538  0002A4  2B61               	incf	(_Header+1)& (0+255),f,b
  2539  0002A6  0E00               	movlw	0
  2540  0002A8  2362               	addwfc	(_Header+2)& (0+255),f,b
  2541  0002AA  2363               	addwfc	(_Header+3)& (0+255),f,b
  2542  0002AC  2364               	addwfc	(_Header+4)& (0+255),f,b
  2543  0002AE  C0E3  F001         	movff	??_BOOT_Write,DATAEE_WriteByte@bAdd
  2544  0002B2  C0E4  F002         	movff	??_BOOT_Write+1,DATAEE_WriteByte@bAdd+1
  2545  0002B6  0E69               	movlw	low (_Header+9)
  2546  0002B8  25F7               	addwf	BOOT_Write@i& (0+255),w,b
  2547  0002BA  6ED9               	movwf	fsr2l,c
  2548  0002BC  0E00               	movlw	high (_Header+9)
  2549  0002BE  21F8               	addwfc	(BOOT_Write@i+1)& (0+255),w,b
  2550  0002C0  6EDA               	movwf	fsr2h,c
  2551  0002C2  50DF               	movf	indf2,w,c
  2552  0002C4  6E03               	movwf	DATAEE_WriteByte@bData^0,c
  2553  0002C6  EC1C  F009         	call	_DATAEE_WriteByte	;wreg free
  2554  0002CA                     
  2555                           ;bootloader.c: 253:             }
  2556  0002CA  0100               	movlb	0	; () banked
  2557  0002CC  4BF7               	infsnz	BOOT_Write@i& (0+255),f,b
  2558  0002CE  2BF8               	incf	(BOOT_Write@i+1)& (0+255),f,b
  2559  0002D0                     l2681:
  2560                           
  2561                           ; BSR set to: 0
  2562  0002D0  5166               	movf	(_Header+6)& (0+255),w,b
  2563  0002D2  6FE3               	movwf	??_BOOT_Write& (0+255),b
  2564  0002D4  6BE4               	clrf	(??_BOOT_Write+1)& (0+255),b
  2565  0002D6  51E3               	movf	??_BOOT_Write& (0+255),w,b
  2566  0002D8  5DF7               	subwf	BOOT_Write@i& (0+255),w,b
  2567  0002DA  51F8               	movf	(BOOT_Write@i+1)& (0+255),w,b
  2568  0002DC  0A80               	xorlw	128
  2569  0002DE  6FE5               	movwf	(??_BOOT_Write+2)& (0+255),b
  2570  0002E0  51E4               	movf	(??_BOOT_Write+1)& (0+255),w,b
  2571  0002E2  0A80               	xorlw	128
  2572  0002E4  59E5               	subwfb	(??_BOOT_Write+2)& (0+255),w,b
  2573  0002E6  A0D8               	btfss	status,0,c
  2574  0002E8  EF78  F001         	goto	u1621
  2575  0002EC  EF7A  F001         	goto	u1620
  2576  0002F0                     u1621:
  2577  0002F0  EF4A  F001         	goto	l2677
  2578  0002F4                     u1620:
  2579  0002F4                     
  2580                           ; BSR set to: 0
  2581                           ;bootloader.c: 254:             EUSART1_Write(0xFF);
  2582  0002F4  0EFF               	movlw	255
  2583  0002F6  EC85  F00A         	call	_EUSART1_Write
  2584                           
  2585                           ;bootloader.c: 255:             break;
  2586  0002FA  EF9A  F001         	goto	l392
  2587  0002FE                     l2685:
  2588                           
  2589                           ; BSR set to: 0
  2590                           ;bootloader.c: 257:             EUSART1_Write(0xF9);
  2591  0002FE  0EF9               	movlw	249
  2592  000300  EC85  F00A         	call	_EUSART1_Write
  2593                           
  2594                           ;bootloader.c: 258:             break;
  2595  000304  EF9A  F001         	goto	l392
  2596  000308                     l2689:
  2597  000308  0100               	movlb	0	; () banked
  2598  00030A  5160               	movf	_Header& (0+255),w,b
  2599  00030C  6FE3               	movwf	??_BOOT_Write& (0+255),b
  2600  00030E  6BE4               	clrf	(??_BOOT_Write+1)& (0+255),b
  2601                           
  2602                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2603                           ; Switch size 1, requested type "simple"
  2604                           ; Number of cases is 1, Range of values is 0 to 0
  2605                           ; switch strategies available:
  2606                           ; Name         Instructions Cycles
  2607                           ; simple_byte            4     3 (average)
  2608                           ;	Chosen strategy is simple_byte
  2609  000310  51E4               	movf	(??_BOOT_Write+1)& (0+255),w,b
  2610  000312  0A00               	xorlw	0	; case 0
  2611  000314  B4D8               	btfsc	status,2,c
  2612  000316  EF8F  F001         	goto	l3079
  2613  00031A  EF7F  F001         	goto	l2685
  2614  00031E                     l3079:
  2615                           
  2616                           ; BSR set to: 0
  2617                           ; Switch size 1, requested type "simple"
  2618                           ; Number of cases is 2, Range of values is 2 to 5
  2619                           ; switch strategies available:
  2620                           ; Name         Instructions Cycles
  2621                           ; simple_byte            7     4 (average)
  2622                           ;	Chosen strategy is simple_byte
  2623  00031E  51E3               	movf	??_BOOT_Write& (0+255),w,b
  2624  000320  0A02               	xorlw	2	; case 2
  2625  000322  B4D8               	btfsc	status,2,c
  2626  000324  EF10  F001         	goto	l2665
  2627  000328  0A07               	xorlw	7	; case 5
  2628  00032A  B4D8               	btfsc	status,2,c
  2629  00032C  EF44  F001         	goto	l2675
  2630  000330  EF7F  F001         	goto	l2685
  2631  000334                     l392:
  2632  000334  0012               	return		;funcret
  2633  000336                     __end_of_BOOT_Write:
  2634                           	callstack 0
  2635                           
  2636 ;; *************** function _FLASH_crc16 *****************
  2637 ;; Defined at:
  2638 ;;		line 352 in file "bootloader.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;  data_p          2    0[COMRAM] PTR unsigned char 
  2641 ;;		 -> Header(76), 
  2642 ;;  length          1    2[COMRAM] unsigned char 
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;  crc             2    9[COMRAM] unsigned short 
  2645 ;;  x               1   11[COMRAM] unsigned char 
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  2    0[COMRAM] unsigned short 
  2648 ;; Registers used:
  2649 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2655 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2656 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2657 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2658 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2659 ;;Total ram usage:       12 bytes
  2660 ;; Hardware stack levels used:    1
  2661 ;; This function calls:
  2662 ;;		Nothing
  2663 ;; This function is called by:
  2664 ;;		_BOOT_Write
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text12
  2669  000FE4                     __ptext12:
  2670                           	callstack 0
  2671  000FE4                     _FLASH_crc16:
  2672                           	callstack 28
  2673  000FE4                     
  2674                           ;bootloader.c: 352: uint16_t FLASH_crc16(uint8_t* data_p, uint8_t length);bootloader.c: 
      +                          353: {;bootloader.c: 354:     uint8_t x;;bootloader.c: 356:     uint16_t crc = 0xFFFF;
  2675  000FE4  680A               	setf	FLASH_crc16@crc^0,c
  2676  000FE6  680B               	setf	(FLASH_crc16@crc+1)^0,c
  2677                           
  2678                           ;bootloader.c: 357:     while (length--)
  2679  000FE8  EF28  F008         	goto	l2523
  2680  000FEC                     l2515:
  2681                           
  2682                           ;bootloader.c: 358:     {;bootloader.c: 359:         x = crc >> 8 ^ *data_p++;
  2683  000FEC  C001  FFD9         	movff	FLASH_crc16@data_p,fsr2l
  2684  000FF0  C002  FFDA         	movff	FLASH_crc16@data_p+1,fsr2h
  2685  000FF4  50DF               	movf	indf2,w,c
  2686  000FF6  6E04               	movwf	??_FLASH_crc16^0,c
  2687  000FF8  500B               	movf	(FLASH_crc16@crc+1)^0,w,c
  2688  000FFA  1804               	xorwf	??_FLASH_crc16^0,w,c
  2689  000FFC  6E0C               	movwf	FLASH_crc16@x^0,c
  2690  000FFE  4A01               	infsnz	FLASH_crc16@data_p^0,f,c
  2691  001000  2A02               	incf	(FLASH_crc16@data_p+1)^0,f,c
  2692  001002                     
  2693                           ;bootloader.c: 360:         x ^= x>>4;
  2694  001002  380C               	swapf	FLASH_crc16@x^0,w,c
  2695  001004  0B0F               	andlw	15
  2696  001006  1A0C               	xorwf	FLASH_crc16@x^0,f,c
  2697  001008                     
  2698                           ;bootloader.c: 361:         crc = (crc << 8) ^ ((uint16_t)(x << 12)) ^ ((uint16_t)(x << 
      +                          5)) ^ ((uint16_t)x);
  2699  001008  500C               	movf	FLASH_crc16@x^0,w,c
  2700  00100A  6E04               	movwf	??_FLASH_crc16^0,c
  2701  00100C  6A05               	clrf	(??_FLASH_crc16+1)^0,c
  2702  00100E  0E05               	movlw	5
  2703  001010                     u1485:
  2704  001010  90D8               	bcf	status,0,c
  2705  001012  3604               	rlcf	??_FLASH_crc16^0,f,c
  2706  001014  3605               	rlcf	(??_FLASH_crc16+1)^0,f,c
  2707  001016  2EE8               	decfsz	wreg,f,c
  2708  001018  EF08  F008         	goto	u1485
  2709  00101C  500C               	movf	FLASH_crc16@x^0,w,c
  2710  00101E  6E06               	movwf	(??_FLASH_crc16+2)^0,c
  2711  001020  6A07               	clrf	(??_FLASH_crc16+3)^0,c
  2712  001022  0E0C               	movlw	12
  2713  001024                     u1495:
  2714  001024  90D8               	bcf	status,0,c
  2715  001026  3606               	rlcf	(??_FLASH_crc16+2)^0,f,c
  2716  001028  3607               	rlcf	(??_FLASH_crc16+3)^0,f,c
  2717  00102A  2EE8               	decfsz	wreg,f,c
  2718  00102C  EF12  F008         	goto	u1495
  2719  001030  500A               	movf	FLASH_crc16@crc^0,w,c
  2720  001032  6E09               	movwf	(??_FLASH_crc16+5)^0,c
  2721  001034  6A08               	clrf	(??_FLASH_crc16+4)^0,c
  2722  001036  5006               	movf	(??_FLASH_crc16+2)^0,w,c
  2723  001038  1A08               	xorwf	(??_FLASH_crc16+4)^0,f,c
  2724  00103A  5007               	movf	(??_FLASH_crc16+3)^0,w,c
  2725  00103C  1A09               	xorwf	(??_FLASH_crc16+5)^0,f,c
  2726  00103E  5004               	movf	??_FLASH_crc16^0,w,c
  2727  001040  1A08               	xorwf	(??_FLASH_crc16+4)^0,f,c
  2728  001042  5005               	movf	(??_FLASH_crc16+1)^0,w,c
  2729  001044  1A09               	xorwf	(??_FLASH_crc16+5)^0,f,c
  2730  001046  500C               	movf	FLASH_crc16@x^0,w,c
  2731  001048  1808               	xorwf	(??_FLASH_crc16+4)^0,w,c
  2732  00104A  6E0A               	movwf	FLASH_crc16@crc^0,c
  2733  00104C  5009               	movf	(??_FLASH_crc16+5)^0,w,c
  2734  00104E  6E0B               	movwf	(FLASH_crc16@crc+1)^0,c
  2735  001050                     l2523:
  2736                           
  2737                           ;bootloader.c: 357:     while (length--)
  2738  001050  0603               	decf	FLASH_crc16@length^0,f,c
  2739  001052  2803               	incf	FLASH_crc16@length^0,w,c
  2740  001054  A4D8               	btfss	status,2,c
  2741  001056  EF2F  F008         	goto	u1501
  2742  00105A  EF31  F008         	goto	u1500
  2743  00105E                     u1501:
  2744  00105E  EFF6  F007         	goto	l2515
  2745  001062                     u1500:
  2746  001062                     
  2747                           ;bootloader.c: 363:     return crc;
  2748  001062  C00A  F001         	movff	FLASH_crc16@crc,?_FLASH_crc16
  2749  001066  C00B  F002         	movff	FLASH_crc16@crc+1,?_FLASH_crc16+1
  2750  00106A  0012               	return		;funcret
  2751  00106C                     __end_of_FLASH_crc16:
  2752                           	callstack 0
  2753                           
  2754 ;; *************** function _FLASH_WriteBlock *****************
  2755 ;; Defined at:
  2756 ;;		line 95 in file "mcc_generated_files/memory.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  writeAddr       4    5[COMRAM] unsigned long 
  2759 ;;  flashWrBufPt    2    9[COMRAM] PTR unsigned char 
  2760 ;;		 -> currentBlock(74), Header(76), 
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;  blockStartAd    4   11[COMRAM] unsigned long 
  2763 ;;  i               1   16[COMRAM] unsigned char 
  2764 ;;  GIEBitValue     1   15[COMRAM] unsigned char 
  2765 ;; Return value:  Size  Location     Type
  2766 ;;                  1    wreg      char 
  2767 ;; Registers used:
  2768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2774 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2775 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2777 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2778 ;;Total ram usage:       12 bytes
  2779 ;; Hardware stack levels used:    1
  2780 ;; Hardware stack levels required when called:    1
  2781 ;; This function calls:
  2782 ;;		_FLASH_EraseBlock
  2783 ;; This function is called by:
  2784 ;;		_BOOT_Write
  2785 ;;		_FLASH_WriteByte
  2786 ;;		_FLASH_AddToBlock
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text13
  2791  000D00                     __ptext13:
  2792                           	callstack 0
  2793  000D00                     _FLASH_WriteBlock:
  2794                           	callstack 27
  2795  000D00                     
  2796                           ;mcc_generated_files/memory.c: 95: int8_t FLASH_WriteBlock(uint32_t writeAddr, uint8_t *
      +                          flashWrBufPtr);mcc_generated_files/memory.c: 96: {;mcc_generated_files/memory.c: 97:    
      +                           uint32_t blockStartAddr = (uint32_t )(writeAddr & ((0x10000 -1) ^ (64 -1)));
  2797  000D00  0EC0               	movlw	192
  2798  000D02  1406               	andwf	FLASH_WriteBlock@writeAddr^0,w,c
  2799  000D04  6E0C               	movwf	FLASH_WriteBlock@blockStartAddr^0,c
  2800  000D06  0EFF               	movlw	255
  2801  000D08  1407               	andwf	(FLASH_WriteBlock@writeAddr+1)^0,w,c
  2802  000D0A  6E0D               	movwf	(FLASH_WriteBlock@blockStartAddr+1)^0,c
  2803  000D0C  0E00               	movlw	0
  2804  000D0E  1408               	andwf	(FLASH_WriteBlock@writeAddr+2)^0,w,c
  2805  000D10  6E0E               	movwf	(FLASH_WriteBlock@blockStartAddr+2)^0,c
  2806  000D12  0E00               	movlw	0
  2807  000D14  1409               	andwf	(FLASH_WriteBlock@writeAddr+3)^0,w,c
  2808  000D16  6E0F               	movwf	(FLASH_WriteBlock@blockStartAddr+3)^0,c
  2809  000D18                     
  2810                           ;mcc_generated_files/memory.c: 98:  uint8_t GIEBitValue = INTCONbits.GIE;
  2811  000D18  0E00               	movlw	0
  2812  000D1A  BEF2               	btfsc	242,7,c	;volatile
  2813  000D1C  0E01               	movlw	1
  2814  000D1E  6E10               	movwf	FLASH_WriteBlock@GIEBitValue^0,c
  2815  000D20                     
  2816                           ;mcc_generated_files/memory.c: 99:     uint8_t i;;mcc_generated_files/memory.c: 102:    
      +                           if( writeAddr != blockStartAddr )
  2817  000D20  500C               	movf	FLASH_WriteBlock@blockStartAddr^0,w,c
  2818  000D22  1806               	xorwf	FLASH_WriteBlock@writeAddr^0,w,c
  2819  000D24  E10F               	bnz	u1420
  2820  000D26  500D               	movf	(FLASH_WriteBlock@blockStartAddr+1)^0,w,c
  2821  000D28  1807               	xorwf	(FLASH_WriteBlock@writeAddr+1)^0,w,c
  2822  000D2A  E10C               	bnz	u1420
  2823  000D2C  500E               	movf	(FLASH_WriteBlock@blockStartAddr+2)^0,w,c
  2824  000D2E  1808               	xorwf	(FLASH_WriteBlock@writeAddr+2)^0,w,c
  2825  000D30  E109               	bnz	u1420
  2826  000D32  500F               	movf	(FLASH_WriteBlock@blockStartAddr+3)^0,w,c
  2827  000D34  1809               	xorwf	(FLASH_WriteBlock@writeAddr+3)^0,w,c
  2828  000D36  B4D8               	btfsc	status,2,c
  2829  000D38  EFA0  F006         	goto	u1421
  2830  000D3C  EFA2  F006         	goto	u1420
  2831  000D40                     u1421:
  2832  000D40  EFA5  F006         	goto	l2445
  2833  000D44                     u1420:
  2834  000D44                     
  2835                           ;mcc_generated_files/memory.c: 103:     {;mcc_generated_files/memory.c: 104:         ret
      +                          urn -1;
  2836  000D44  0EFF               	movlw	255
  2837  000D46  EFE7  F006         	goto	l232
  2838  000D4A                     l2445:
  2839                           
  2840                           ;mcc_generated_files/memory.c: 108:     FLASH_EraseBlock(writeAddr);
  2841  000D4A  C006  F001         	movff	FLASH_WriteBlock@writeAddr,FLASH_EraseBlock@baseAddr
  2842  000D4E  C007  F002         	movff	FLASH_WriteBlock@writeAddr+1,FLASH_EraseBlock@baseAddr+1
  2843  000D52  C008  F003         	movff	FLASH_WriteBlock@writeAddr+2,FLASH_EraseBlock@baseAddr+2
  2844  000D56  C009  F004         	movff	FLASH_WriteBlock@writeAddr+3,FLASH_EraseBlock@baseAddr+3
  2845  000D5A  ECFC  F009         	call	_FLASH_EraseBlock	;wreg free
  2846  000D5E                     
  2847                           ;mcc_generated_files/memory.c: 111:     TBLPTRU = (uint8_t)((writeAddr & 0x00FF0000) >> 
      +                          16);
  2848  000D5E  C008  FFF8         	movff	FLASH_WriteBlock@writeAddr+2,tblptru	;volatile
  2849  000D62                     
  2850                           ;mcc_generated_files/memory.c: 112:     TBLPTRH = (uint8_t)((writeAddr & 0x0000FF00)>> 8
      +                          );
  2851  000D62  C007  FFF7         	movff	FLASH_WriteBlock@writeAddr+1,tblptrh	;volatile
  2852  000D66                     
  2853                           ;mcc_generated_files/memory.c: 113:     TBLPTRL = (uint8_t)(writeAddr & 0x000000FF);
  2854  000D66  C006  FFF6         	movff	FLASH_WriteBlock@writeAddr,tblptrl	;volatile
  2855  000D6A                     
  2856                           ;mcc_generated_files/memory.c: 116:     for (i=0; i<64; i++)
  2857  000D6A  0E00               	movlw	0
  2858  000D6C  6E11               	movwf	FLASH_WriteBlock@i^0,c
  2859  000D6E                     l2459:
  2860                           
  2861                           ;mcc_generated_files/memory.c: 117:     {;mcc_generated_files/memory.c: 118:         TAB
      +                          LAT = flashWrBufPtr[i];
  2862  000D6E  5011               	movf	FLASH_WriteBlock@i^0,w,c
  2863  000D70  240A               	addwf	FLASH_WriteBlock@flashWrBufPtr^0,w,c
  2864  000D72  6ED9               	movwf	fsr2l,c
  2865  000D74  0E00               	movlw	0
  2866  000D76  200B               	addwfc	(FLASH_WriteBlock@flashWrBufPtr+1)^0,w,c
  2867  000D78  6EDA               	movwf	fsr2h,c
  2868  000D7A  50DF               	movf	indf2,w,c
  2869  000D7C  6EF5               	movwf	245,c	;volatile
  2870  000D7E                     
  2871                           ;mcc_generated_files/memory.c: 120:         if (i == (64 -1))
  2872  000D7E  0E3F               	movlw	63
  2873  000D80  1811               	xorwf	FLASH_WriteBlock@i^0,w,c
  2874  000D82  A4D8               	btfss	status,2,c
  2875  000D84  EFC6  F006         	goto	u1431
  2876  000D88  EFC8  F006         	goto	u1430
  2877  000D8C                     u1431:
  2878  000D8C  EFCB  F006         	goto	l235
  2879  000D90                     u1430:
  2880  000D90  000C               	tblwt		*	;# 
  2881                           
  2882                           ;mcc_generated_files/memory.c: 123:         }
  2883  000D92  EFCC  F006         	goto	l2465
  2884  000D96                     l235:
  2885  000D96  000D               	tblwt		*+	;# 
  2886  000D98                     l2465:
  2887                           
  2888                           ;mcc_generated_files/memory.c: 128:     }
  2889  000D98  2A11               	incf	FLASH_WriteBlock@i^0,f,c
  2890  000D9A  0E3F               	movlw	63
  2891  000D9C  6411               	cpfsgt	FLASH_WriteBlock@i^0,c
  2892  000D9E  EFD3  F006         	goto	u1441
  2893  000DA2  EFD5  F006         	goto	u1440
  2894  000DA6                     u1441:
  2895  000DA6  EFB7  F006         	goto	l2459
  2896  000DAA                     u1440:
  2897  000DAA                     
  2898                           ;mcc_generated_files/memory.c: 130:     NVMCON1bits.NVMREG = 2;
  2899  000DAA  5081               	movf	129,w,c	;volsfr
  2900  000DAC  0B3F               	andlw	-193
  2901  000DAE  0980               	iorlw	128
  2902  000DB0  6E81               	movwf	129,c	;volsfr
  2903  000DB2                     
  2904                           ;mcc_generated_files/memory.c: 131:     NVMCON1bits.WREN = 1;
  2905  000DB2  8481               	bsf	129,2,c	;volsfr
  2906  000DB4                     
  2907                           ;mcc_generated_files/memory.c: 132:  INTCONbits.GIE = 0;
  2908  000DB4  9EF2               	bcf	242,7,c	;volatile
  2909                           
  2910                           ;mcc_generated_files/memory.c: 133:     NVMCON2 = 0x55;
  2911  000DB6  0E55               	movlw	85
  2912  000DB8  6E82               	movwf	130,c	;volsfr
  2913                           
  2914                           ;mcc_generated_files/memory.c: 134:     NVMCON2 = 0xAA;
  2915  000DBA  0EAA               	movlw	170
  2916  000DBC  6E82               	movwf	130,c	;volsfr
  2917  000DBE                     
  2918                           ;mcc_generated_files/memory.c: 135:     NVMCON1bits.WR = 1;
  2919  000DBE  8281               	bsf	129,1,c	;volsfr
  2920  000DC0                     
  2921                           ;mcc_generated_files/memory.c: 137:     NVMCON1bits.WREN = 0;
  2922  000DC0  9481               	bcf	129,2,c	;volsfr
  2923  000DC2                     
  2924                           ;mcc_generated_files/memory.c: 138:  INTCONbits.GIE = GIEBitValue;
  2925  000DC2  B010               	btfsc	FLASH_WriteBlock@GIEBitValue^0,0,c
  2926  000DC4  D002               	bra	u1455
  2927  000DC6  9EF2               	bcf	242,7,c	;volatile
  2928  000DC8  D001               	bra	u1456
  2929  000DCA                     u1455:
  2930  000DCA  8EF2               	bsf	242,7,c	;volatile
  2931  000DCC                     u1456:
  2932  000DCC                     
  2933                           ;mcc_generated_files/memory.c: 140:     return 0;
  2934  000DCC  0E00               	movlw	0
  2935  000DCE                     l232:
  2936  000DCE  0012               	return		;funcret
  2937  000DD0                     __end_of_FLASH_WriteBlock:
  2938                           	callstack 0
  2939                           
  2940 ;; *************** function _BOOT_ReadVersion *****************
  2941 ;; Defined at:
  2942 ;;		line 262 in file "bootloader.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;		None
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;		None
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  1    wreg      void 
  2949 ;; Registers used:
  2950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2960 ;;Total ram usage:        0 bytes
  2961 ;; Hardware stack levels used:    1
  2962 ;; Hardware stack levels required when called:    9
  2963 ;; This function calls:
  2964 ;;		_EUSART1_Write
  2965 ;;		_printf
  2966 ;; This function is called by:
  2967 ;;		_BOOT_Load
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           	psect	text14
  2972  00106C                     __ptext14:
  2973                           	callstack 0
  2974  00106C                     _BOOT_ReadVersion:
  2975                           	callstack 20
  2976  00106C                     
  2977                           ;bootloader.c: 265:     if(Header.endOfPacket != 0x04)
  2978  00106C  0E04               	movlw	4
  2979  00106E  0100               	movlb	0	; () banked
  2980  001070  19AB               	xorwf	(_Header+75)& (0+255),w,b
  2981  001072  B4D8               	btfsc	status,2,c
  2982  001074  EF3E  F008         	goto	u1511
  2983  001078  EF40  F008         	goto	u1510
  2984  00107C                     u1511:
  2985  00107C  EF48  F008         	goto	l2563
  2986  001080                     u1510:
  2987  001080                     
  2988                           ; BSR set to: 0
  2989                           ;bootloader.c: 266:     {;bootloader.c: 268:         printf("failed to read version \r\n
      +                          ");
  2990  001080  0ED1               	movlw	low STR_15
  2991  001082  6FDB               	movwf	printf@fmt& (0+255),b
  2992  001084  0E3E               	movlw	high STR_15
  2993  001086  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  2994  001088  EC49  F00A         	call	_printf	;wreg free
  2995  00108C  EF68  F008         	goto	l418
  2996  001090                     l2563:
  2997                           
  2998                           ; BSR set to: 0
  2999                           ;bootloader.c: 271:     EUSART1_Write(0x0F);
  3000  001090  0E0F               	movlw	15
  3001  001092  EC85  F00A         	call	_EUSART1_Write
  3002                           
  3003                           ;bootloader.c: 273:     EUSART1_Write(0x01);
  3004  001096  0E01               	movlw	1
  3005  001098  EC85  F00A         	call	_EUSART1_Write
  3006                           
  3007                           ;bootloader.c: 274:     EUSART1_Write(0x00);
  3008  00109C  0E00               	movlw	0
  3009  00109E  EC85  F00A         	call	_EUSART1_Write
  3010                           
  3011                           ;bootloader.c: 276:     EUSART1_Write(0x24);
  3012  0010A2  0E24               	movlw	36
  3013  0010A4  EC85  F00A         	call	_EUSART1_Write
  3014                           
  3015                           ;bootloader.c: 277:     EUSART1_Write(0x61);
  3016  0010A8  0E61               	movlw	97
  3017  0010AA  EC85  F00A         	call	_EUSART1_Write
  3018  0010AE                     
  3019                           ;bootloader.c: 278:     printf("\r\n");
  3020  0010AE  0E92               	movlw	low (STR_19+29)
  3021  0010B0  0100               	movlb	0	; () banked
  3022  0010B2  6FDB               	movwf	printf@fmt& (0+255),b
  3023  0010B4  0E3E               	movlw	high (STR_19+29)
  3024  0010B6  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  3025  0010B8  EC49  F00A         	call	_printf	;wreg free
  3026  0010BC                     
  3027                           ;bootloader.c: 279:     printf("version read successfully \r\n");
  3028  0010BC  0EB4               	movlw	low STR_17
  3029  0010BE  0100               	movlb	0	; () banked
  3030  0010C0  6FDB               	movwf	printf@fmt& (0+255),b
  3031  0010C2  0E3E               	movlw	high STR_17
  3032  0010C4  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  3033  0010C6  EC49  F00A         	call	_printf	;wreg free
  3034                           
  3035                           ;bootloader.c: 280:     EUSART1_Write(0xEE);
  3036  0010CA  0EEE               	movlw	238
  3037  0010CC  EC85  F00A         	call	_EUSART1_Write
  3038  0010D0                     l418:
  3039  0010D0  0012               	return		;funcret
  3040  0010D2                     __end_of_BOOT_ReadVersion:
  3041                           	callstack 0
  3042                           
  3043 ;; *************** function _BOOT_Read *****************
  3044 ;; Defined at:
  3045 ;;		line 81 in file "bootloader.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;		None
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;  i               2   12[BANK0 ] int 
  3050 ;;  min_address     3   17[BANK0 ] unsigned um
  3051 ;;  max_address     3   14[BANK0 ] unsigned um
  3052 ;;  min_length      1    0        unsigned char 
  3053 ;;  max_length      1   20[BANK0 ] unsigned char 
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  1    wreg      void 
  3056 ;; Registers used:
  3057 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3064 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3065 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3066 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3067 ;;Total ram usage:       14 bytes
  3068 ;; Hardware stack levels used:    1
  3069 ;; Hardware stack levels required when called:    9
  3070 ;; This function calls:
  3071 ;;		_EUSART1_Write
  3072 ;;		_printf
  3073 ;; This function is called by:
  3074 ;;		_BOOT_Load
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           	psect	text15
  3079  00060E                     __ptext15:
  3080                           	callstack 0
  3081  00060E                     _BOOT_Read:
  3082                           	callstack 20
  3083  00060E                     
  3084                           ;bootloader.c: 83:     uint24_t max_address, min_address;;bootloader.c: 84:     uint8_t 
      +                          max_length, min_length;;bootloader.c: 86:     switch(Header.command)
  3085  00060E  EF39  F003         	goto	l2709
  3086  000612                     l2701:
  3087                           
  3088                           ; BSR set to: 0
  3089                           ;bootloader.c: 89:             min_address = 0x4000;
  3090  000612  0E00               	movlw	0
  3091  000614  6FEC               	movwf	BOOT_Read@min_address& (0+255),b
  3092  000616  0E40               	movlw	64
  3093  000618  6FED               	movwf	(BOOT_Read@min_address+1)& (0+255),b
  3094  00061A  0E00               	movlw	0
  3095  00061C  6FEE               	movwf	(BOOT_Read@min_address+2)& (0+255),b
  3096                           
  3097                           ;bootloader.c: 90:             max_address = 0xFFFF;
  3098  00061E  0EFF               	movlw	255
  3099  000620  6FE9               	movwf	BOOT_Read@max_address& (0+255),b
  3100  000622  0EFF               	movlw	255
  3101  000624  6FEA               	movwf	(BOOT_Read@max_address+1)& (0+255),b
  3102  000626  0E00               	movlw	0
  3103  000628  6FEB               	movwf	(BOOT_Read@max_address+2)& (0+255),b
  3104                           
  3105                           ;bootloader.c: 92:             max_length = 0x40;
  3106  00062A  0E40               	movlw	64
  3107  00062C  6FEF               	movwf	BOOT_Read@max_length& (0+255),b
  3108                           
  3109                           ;bootloader.c: 93:             break;
  3110  00062E  EF53  F003         	goto	l2711
  3111  000632                     l2703:
  3112                           
  3113                           ; BSR set to: 0
  3114                           ;bootloader.c: 95:             min_address = 0x300000;
  3115  000632  0E00               	movlw	0
  3116  000634  6FEC               	movwf	BOOT_Read@min_address& (0+255),b
  3117  000636  0E00               	movlw	0
  3118  000638  6FED               	movwf	(BOOT_Read@min_address+1)& (0+255),b
  3119  00063A  0E30               	movlw	48
  3120  00063C  6FEE               	movwf	(BOOT_Read@min_address+2)& (0+255),b
  3121                           
  3122                           ;bootloader.c: 96:             max_address = 0x30000D;
  3123  00063E  0E0D               	movlw	13
  3124  000640  6FE9               	movwf	BOOT_Read@max_address& (0+255),b
  3125  000642  0E00               	movlw	0
  3126  000644  6FEA               	movwf	(BOOT_Read@max_address+1)& (0+255),b
  3127  000646  0E30               	movlw	48
  3128  000648  6FEB               	movwf	(BOOT_Read@max_address+2)& (0+255),b
  3129                           
  3130                           ;bootloader.c: 98:             max_length = 0x0E;
  3131  00064A  0E0E               	movlw	14
  3132  00064C  6FEF               	movwf	BOOT_Read@max_length& (0+255),b
  3133                           
  3134                           ;bootloader.c: 99:             break;
  3135  00064E  EF53  F003         	goto	l2711
  3136  000652                     l2705:
  3137                           
  3138                           ; BSR set to: 0
  3139                           ;bootloader.c: 101:             min_address = 0x000;
  3140  000652  0E00               	movlw	0
  3141  000654  6FEC               	movwf	BOOT_Read@min_address& (0+255),b
  3142  000656  0E00               	movlw	0
  3143  000658  6FED               	movwf	(BOOT_Read@min_address+1)& (0+255),b
  3144  00065A  0E00               	movlw	0
  3145  00065C  6FEE               	movwf	(BOOT_Read@min_address+2)& (0+255),b
  3146                           
  3147                           ;bootloader.c: 102:             max_address = 0x400;
  3148  00065E  0E00               	movlw	0
  3149  000660  6FE9               	movwf	BOOT_Read@max_address& (0+255),b
  3150  000662  0E04               	movlw	4
  3151  000664  6FEA               	movwf	(BOOT_Read@max_address+1)& (0+255),b
  3152  000666  0E00               	movlw	0
  3153  000668  6FEB               	movwf	(BOOT_Read@max_address+2)& (0+255),b
  3154                           
  3155                           ;bootloader.c: 104:             max_length = 0x40;
  3156  00066A  0E40               	movlw	64
  3157  00066C  6FEF               	movwf	BOOT_Read@max_length& (0+255),b
  3158                           
  3159                           ;bootloader.c: 105:             break;
  3160  00066E  EF53  F003         	goto	l2711
  3161  000672                     l2709:
  3162  000672  0100               	movlb	0	; () banked
  3163  000674  5160               	movf	_Header& (0+255),w,b
  3164  000676  6FE3               	movwf	??_BOOT_Read& (0+255),b
  3165  000678  6BE4               	clrf	(??_BOOT_Read+1)& (0+255),b
  3166                           
  3167                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3168                           ; Switch size 1, requested type "simple"
  3169                           ; Number of cases is 1, Range of values is 0 to 0
  3170                           ; switch strategies available:
  3171                           ; Name         Instructions Cycles
  3172                           ; simple_byte            4     3 (average)
  3173                           ;	Chosen strategy is simple_byte
  3174  00067A  51E4               	movf	(??_BOOT_Read+1)& (0+255),w,b
  3175  00067C  0A00               	xorlw	0	; case 0
  3176  00067E  B4D8               	btfsc	status,2,c
  3177  000680  EF44  F003         	goto	l3081
  3178  000684  EFF5  F003         	goto	l367
  3179  000688                     l3081:
  3180                           
  3181                           ; BSR set to: 0
  3182                           ; Switch size 1, requested type "simple"
  3183                           ; Number of cases is 3, Range of values is 1 to 6
  3184                           ; switch strategies available:
  3185                           ; Name         Instructions Cycles
  3186                           ; simple_byte           10     6 (average)
  3187                           ;	Chosen strategy is simple_byte
  3188  000688  51E3               	movf	??_BOOT_Read& (0+255),w,b
  3189  00068A  0A01               	xorlw	1	; case 1
  3190  00068C  B4D8               	btfsc	status,2,c
  3191  00068E  EF09  F003         	goto	l2701
  3192  000692  0A05               	xorlw	5	; case 4
  3193  000694  B4D8               	btfsc	status,2,c
  3194  000696  EF29  F003         	goto	l2705
  3195  00069A  0A02               	xorlw	2	; case 6
  3196  00069C  B4D8               	btfsc	status,2,c
  3197  00069E  EF19  F003         	goto	l2703
  3198  0006A2  EFF5  F003         	goto	l367
  3199  0006A6                     l2711:
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;bootloader.c: 110:     if(Header.address < min_address || Header.address > max_address)
  3203  0006A6  51EC               	movf	BOOT_Read@min_address& (0+255),w,b
  3204  0006A8  6FE3               	movwf	??_BOOT_Read& (0+255),b
  3205  0006AA  51ED               	movf	(BOOT_Read@min_address+1)& (0+255),w,b
  3206  0006AC  6FE4               	movwf	(??_BOOT_Read+1)& (0+255),b
  3207  0006AE  51EE               	movf	(BOOT_Read@min_address+2)& (0+255),w,b
  3208  0006B0  6FE5               	movwf	(??_BOOT_Read+2)& (0+255),b
  3209  0006B2  6BE6               	clrf	(??_BOOT_Read+3)& (0+255),b
  3210  0006B4  51E3               	movf	??_BOOT_Read& (0+255),w,b
  3211  0006B6  5D61               	subwf	(_Header+1)& (0+255),w,b
  3212  0006B8  51E4               	movf	(??_BOOT_Read+1)& (0+255),w,b
  3213  0006BA  5962               	subwfb	(_Header+2)& (0+255),w,b
  3214  0006BC  51E5               	movf	(??_BOOT_Read+2)& (0+255),w,b
  3215  0006BE  5963               	subwfb	(_Header+3)& (0+255),w,b
  3216  0006C0  51E6               	movf	(??_BOOT_Read+3)& (0+255),w,b
  3217  0006C2  5964               	subwfb	(_Header+4)& (0+255),w,b
  3218  0006C4  A0D8               	btfss	status,0,c
  3219  0006C6  EF67  F003         	goto	u1631
  3220  0006CA  EF69  F003         	goto	u1630
  3221  0006CE                     u1631:
  3222  0006CE  EF7F  F003         	goto	l2715
  3223  0006D2                     u1630:
  3224  0006D2                     
  3225                           ; BSR set to: 0
  3226  0006D2  51E9               	movf	BOOT_Read@max_address& (0+255),w,b
  3227  0006D4  6FE3               	movwf	??_BOOT_Read& (0+255),b
  3228  0006D6  51EA               	movf	(BOOT_Read@max_address+1)& (0+255),w,b
  3229  0006D8  6FE4               	movwf	(??_BOOT_Read+1)& (0+255),b
  3230  0006DA  51EB               	movf	(BOOT_Read@max_address+2)& (0+255),w,b
  3231  0006DC  6FE5               	movwf	(??_BOOT_Read+2)& (0+255),b
  3232  0006DE  6BE6               	clrf	(??_BOOT_Read+3)& (0+255),b
  3233  0006E0  5161               	movf	(_Header+1)& (0+255),w,b
  3234  0006E2  5DE3               	subwf	??_BOOT_Read& (0+255),w,b
  3235  0006E4  5162               	movf	(_Header+2)& (0+255),w,b
  3236  0006E6  59E4               	subwfb	(??_BOOT_Read+1)& (0+255),w,b
  3237  0006E8  5163               	movf	(_Header+3)& (0+255),w,b
  3238  0006EA  59E5               	subwfb	(??_BOOT_Read+2)& (0+255),w,b
  3239  0006EC  5164               	movf	(_Header+4)& (0+255),w,b
  3240  0006EE  59E6               	subwfb	(??_BOOT_Read+3)& (0+255),w,b
  3241  0006F0  B0D8               	btfsc	status,0,c
  3242  0006F2  EF7D  F003         	goto	u1641
  3243  0006F6  EF7F  F003         	goto	u1640
  3244  0006FA                     u1641:
  3245  0006FA  EF84  F003         	goto	l2719
  3246  0006FE                     u1640:
  3247  0006FE                     l2715:
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;bootloader.c: 111:     {;bootloader.c: 113:         EUSART1_Write(0xFC);
  3251  0006FE  0EFC               	movlw	252
  3252  000700  EC85  F00A         	call	_EUSART1_Write
  3253  000704  EFF5  F003         	goto	l367
  3254  000708                     l2719:
  3255                           
  3256                           ; BSR set to: 0
  3257                           ;bootloader.c: 118:     if(Header.marker != 0x00)
  3258  000708  5165               	movf	(_Header+5)& (0+255),w,b
  3259  00070A  B4D8               	btfsc	status,2,c
  3260  00070C  EF8A  F003         	goto	u1651
  3261  000710  EF8C  F003         	goto	u1650
  3262  000714                     u1651:
  3263  000714  EF91  F003         	goto	l2725
  3264  000718                     u1650:
  3265  000718                     
  3266                           ; BSR set to: 0
  3267                           ;bootloader.c: 119:     {;bootloader.c: 121:         EUSART1_Write(0xFD);
  3268  000718  0EFD               	movlw	253
  3269  00071A  EC85  F00A         	call	_EUSART1_Write
  3270  00071E  EFF5  F003         	goto	l367
  3271  000722                     l2725:
  3272  000722                     
  3273                           ; BSR set to: 0
  3274  000722  5166               	movf	(_Header+6)& (0+255),w,b
  3275  000724  5DEF               	subwf	BOOT_Read@max_length& (0+255),w,b
  3276  000726  B0D8               	btfsc	status,0,c
  3277  000728  EF98  F003         	goto	u1661
  3278  00072C  EF9A  F003         	goto	u1660
  3279  000730                     u1661:
  3280  000730  EF9F  F003         	goto	l2733
  3281  000734                     u1660:
  3282  000734                     
  3283                           ; BSR set to: 0
  3284                           ;bootloader.c: 127:     {;bootloader.c: 129:         EUSART1_Write(0xFB);
  3285  000734  0EFB               	movlw	251
  3286  000736  EC85  F00A         	call	_EUSART1_Write
  3287  00073A  EFF5  F003         	goto	l367
  3288  00073E                     l2733:
  3289                           
  3290                           ; BSR set to: 0
  3291                           ;bootloader.c: 134:     if(Header.endOfPacket != 0x04)
  3292  00073E  0E04               	movlw	4
  3293  000740  19AB               	xorwf	(_Header+75)& (0+255),w,b
  3294  000742  B4D8               	btfsc	status,2,c
  3295  000744  EFA6  F003         	goto	u1671
  3296  000748  EFA8  F003         	goto	u1670
  3297  00074C                     u1671:
  3298  00074C  EFAD  F003         	goto	l2739
  3299  000750                     u1670:
  3300  000750                     
  3301                           ; BSR set to: 0
  3302                           ;bootloader.c: 135:     {;bootloader.c: 137:         EUSART1_Write(0xFA);
  3303  000750  0EFA               	movlw	250
  3304  000752  EC85  F00A         	call	_EUSART1_Write
  3305  000756  EFF5  F003         	goto	l367
  3306  00075A                     l2739:
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;bootloader.c: 143:     printf("Reading flash....");
  3310  00075A  0E8C               	movlw	low STR_4
  3311  00075C  6FDB               	movwf	printf@fmt& (0+255),b
  3312  00075E  0E3F               	movlw	high STR_4
  3313  000760  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  3314  000762  EC49  F00A         	call	_printf	;wreg free
  3315  000766                     
  3316                           ;bootloader.c: 144:     for(int i = 0; i < Header.length; i++)
  3317  000766  0E00               	movlw	0
  3318  000768  0100               	movlb	0	; () banked
  3319  00076A  6FE8               	movwf	(BOOT_Read@i+1)& (0+255),b
  3320  00076C  0E00               	movlw	0
  3321  00076E  6FE7               	movwf	BOOT_Read@i& (0+255),b
  3322  000770  EFDA  F003         	goto	l2753
  3323  000774                     l2743:
  3324                           
  3325                           ; BSR set to: 0
  3326                           ;bootloader.c: 156:                 EUSART1_Write(0xF9);
  3327  000774  0EF9               	movlw	249
  3328  000776  EC85  F00A         	call	_EUSART1_Write
  3329  00077A  EFF5  F003         	goto	l367
  3330  00077E                     l2749:
  3331                           
  3332                           ; BSR set to: 0
  3333  00077E  5160               	movf	_Header& (0+255),w,b
  3334  000780  6FE3               	movwf	??_BOOT_Read& (0+255),b
  3335  000782  6BE4               	clrf	(??_BOOT_Read+1)& (0+255),b
  3336                           
  3337                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3338                           ; Switch size 1, requested type "simple"
  3339                           ; Number of cases is 1, Range of values is 0 to 0
  3340                           ; switch strategies available:
  3341                           ; Name         Instructions Cycles
  3342                           ; simple_byte            4     3 (average)
  3343                           ;	Chosen strategy is simple_byte
  3344  000784  51E4               	movf	(??_BOOT_Read+1)& (0+255),w,b
  3345  000786  0A00               	xorlw	0	; case 0
  3346  000788  B4D8               	btfsc	status,2,c
  3347  00078A  EFC9  F003         	goto	l3083
  3348  00078E  EFBA  F003         	goto	l2743
  3349  000792                     l3083:
  3350                           
  3351                           ; BSR set to: 0
  3352                           ; Switch size 1, requested type "simple"
  3353                           ; Number of cases is 3, Range of values is 1 to 6
  3354                           ; switch strategies available:
  3355                           ; Name         Instructions Cycles
  3356                           ; simple_byte           10     6 (average)
  3357                           ;	Chosen strategy is simple_byte
  3358  000792  51E3               	movf	??_BOOT_Read& (0+255),w,b
  3359  000794  0A01               	xorlw	1	; case 1
  3360  000796  B4D8               	btfsc	status,2,c
  3361  000798  EFD8  F003         	goto	l2751
  3362  00079C  0A05               	xorlw	5	; case 4
  3363  00079E  B4D8               	btfsc	status,2,c
  3364  0007A0  EFD8  F003         	goto	l2751
  3365  0007A4  0A02               	xorlw	2	; case 6
  3366  0007A6  B4D8               	btfsc	status,2,c
  3367  0007A8  EFD8  F003         	goto	l2751
  3368  0007AC  EFBA  F003         	goto	l2743
  3369  0007B0                     l2751:
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;bootloader.c: 160:     }
  3373  0007B0  4BE7               	infsnz	BOOT_Read@i& (0+255),f,b
  3374  0007B2  2BE8               	incf	(BOOT_Read@i+1)& (0+255),f,b
  3375  0007B4                     l2753:
  3376                           
  3377                           ; BSR set to: 0
  3378  0007B4  5166               	movf	(_Header+6)& (0+255),w,b
  3379  0007B6  6FE3               	movwf	??_BOOT_Read& (0+255),b
  3380  0007B8  6BE4               	clrf	(??_BOOT_Read+1)& (0+255),b
  3381  0007BA  51E3               	movf	??_BOOT_Read& (0+255),w,b
  3382  0007BC  5DE7               	subwf	BOOT_Read@i& (0+255),w,b
  3383  0007BE  51E8               	movf	(BOOT_Read@i+1)& (0+255),w,b
  3384  0007C0  0A80               	xorlw	128
  3385  0007C2  6FE5               	movwf	(??_BOOT_Read+2)& (0+255),b
  3386  0007C4  51E4               	movf	(??_BOOT_Read+1)& (0+255),w,b
  3387  0007C6  0A80               	xorlw	128
  3388  0007C8  59E5               	subwfb	(??_BOOT_Read+2)& (0+255),w,b
  3389  0007CA  A0D8               	btfss	status,0,c
  3390  0007CC  EFEA  F003         	goto	u1681
  3391  0007D0  EFEC  F003         	goto	u1680
  3392  0007D4                     u1681:
  3393  0007D4  EFBF  F003         	goto	l2749
  3394  0007D8                     u1680:
  3395  0007D8                     
  3396                           ; BSR set to: 0
  3397                           ;bootloader.c: 161:     printf("read complete \r\n");
  3398  0007D8  0E9E               	movlw	low STR_5
  3399  0007DA  6FDB               	movwf	printf@fmt& (0+255),b
  3400  0007DC  0E3F               	movlw	high STR_5
  3401  0007DE  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  3402  0007E0  EC49  F00A         	call	_printf	;wreg free
  3403  0007E4                     
  3404                           ;bootloader.c: 162:     EUSART1_Write(0xEE);
  3405  0007E4  0EEE               	movlw	238
  3406  0007E6  EC85  F00A         	call	_EUSART1_Write
  3407  0007EA                     l367:
  3408  0007EA  0012               	return		;funcret
  3409  0007EC                     __end_of_BOOT_Read:
  3410                           	callstack 0
  3411                           
  3412 ;; *************** function _BOOT_GetHeader *****************
  3413 ;; Defined at:
  3414 ;;		line 59 in file "bootloader.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;		None
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;  i               2    6[COMRAM] int 
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  1    wreg      void 
  3421 ;; Registers used:
  3422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3429 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3430 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3431 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3432 ;;Total ram usage:        8 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; Hardware stack levels required when called:    1
  3435 ;; This function calls:
  3436 ;;		_EUSART1_Read
  3437 ;; This function is called by:
  3438 ;;		_BOOT_Load
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           	psect	text16
  3443  0009BC                     __ptext16:
  3444                           	callstack 0
  3445  0009BC                     _BOOT_GetHeader:
  3446                           	callstack 28
  3447  0009BC                     
  3448                           ;bootloader.c: 61:     Header.address = 0;
  3449  0009BC  0E00               	movlw	0
  3450  0009BE  0100               	movlb	0	; () banked
  3451  0009C0  6F61               	movwf	(_Header+1)& (0+255),b
  3452  0009C2  0E00               	movlw	0
  3453  0009C4  6F62               	movwf	(_Header+2)& (0+255),b
  3454  0009C6  0E00               	movlw	0
  3455  0009C8  6F63               	movwf	(_Header+3)& (0+255),b
  3456  0009CA  0E00               	movlw	0
  3457  0009CC  6F64               	movwf	(_Header+4)& (0+255),b
  3458  0009CE                     
  3459                           ; BSR set to: 0
  3460                           ;bootloader.c: 62:     Header.command = EUSART1_Read();
  3461  0009CE  EC33  F00A         	call	_EUSART1_Read	;wreg free
  3462  0009D2  0100               	movlb	0	; () banked
  3463  0009D4  6F60               	movwf	_Header& (0+255),b
  3464  0009D6                     
  3465                           ; BSR set to: 0
  3466                           ;bootloader.c: 63:     for(int i = 0; i < 4; i++)
  3467  0009D6  0E00               	movlw	0
  3468  0009D8  6E08               	movwf	(BOOT_GetHeader@i+1)^0,c
  3469  0009DA  0E00               	movlw	0
  3470  0009DC  6E07               	movwf	BOOT_GetHeader@i^0,c
  3471  0009DE                     l2777:
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;bootloader.c: 64:     {;bootloader.c: 65:         Header.address |= ((uint32_t)EUSART1_
      +                          Read()<<(i*8));
  3475  0009DE  C007  F001         	movff	BOOT_GetHeader@i,??_BOOT_GetHeader
  3476  0009E2  90D8               	bcf	status,0,c
  3477  0009E4  3601               	rlcf	??_BOOT_GetHeader^0,f,c
  3478  0009E6  90D8               	bcf	status,0,c
  3479  0009E8  3601               	rlcf	??_BOOT_GetHeader^0,f,c
  3480  0009EA  90D8               	bcf	status,0,c
  3481  0009EC  3601               	rlcf	??_BOOT_GetHeader^0,f,c
  3482  0009EE  EC33  F00A         	call	_EUSART1_Read	;wreg free
  3483  0009F2  6E02               	movwf	(??_BOOT_GetHeader+1)^0,c
  3484  0009F4  C002  F003         	movff	??_BOOT_GetHeader+1,??_BOOT_GetHeader+2
  3485  0009F8  6A04               	clrf	(??_BOOT_GetHeader+3)^0,c
  3486  0009FA  6A05               	clrf	(??_BOOT_GetHeader+4)^0,c
  3487  0009FC  6A06               	clrf	(??_BOOT_GetHeader+5)^0,c
  3488  0009FE  2A01               	incf	??_BOOT_GetHeader^0,f,c
  3489  000A00  EF07  F005         	goto	u1690
  3490  000A04                     u1695:
  3491  000A04  90D8               	bcf	status,0,c
  3492  000A06  3603               	rlcf	(??_BOOT_GetHeader+2)^0,f,c
  3493  000A08  3604               	rlcf	(??_BOOT_GetHeader+3)^0,f,c
  3494  000A0A  3605               	rlcf	(??_BOOT_GetHeader+4)^0,f,c
  3495  000A0C  3606               	rlcf	(??_BOOT_GetHeader+5)^0,f,c
  3496  000A0E                     u1690:
  3497  000A0E  2E01               	decfsz	??_BOOT_GetHeader^0,f,c
  3498  000A10  EF02  F005         	goto	u1695
  3499  000A14  5003               	movf	(??_BOOT_GetHeader+2)^0,w,c
  3500  000A16  0100               	movlb	0	; () banked
  3501  000A18  1361               	iorwf	(_Header+1)& (0+255),f,b
  3502  000A1A  5004               	movf	(??_BOOT_GetHeader+3)^0,w,c
  3503  000A1C  1362               	iorwf	(_Header+2)& (0+255),f,b
  3504  000A1E  5005               	movf	(??_BOOT_GetHeader+4)^0,w,c
  3505  000A20  1363               	iorwf	(_Header+3)& (0+255),f,b
  3506  000A22  5006               	movf	(??_BOOT_GetHeader+5)^0,w,c
  3507  000A24  1364               	iorwf	(_Header+4)& (0+255),f,b
  3508  000A26                     
  3509                           ; BSR set to: 0
  3510                           ;bootloader.c: 66:     }
  3511  000A26  4A07               	infsnz	BOOT_GetHeader@i^0,f,c
  3512  000A28  2A08               	incf	(BOOT_GetHeader@i+1)^0,f,c
  3513  000A2A                     
  3514                           ; BSR set to: 0
  3515  000A2A  BE08               	btfsc	(BOOT_GetHeader@i+1)^0,7,c
  3516  000A2C  EF21  F005         	goto	u1701
  3517  000A30  5008               	movf	(BOOT_GetHeader@i+1)^0,w,c
  3518  000A32  E109               	bnz	u1700
  3519  000A34  0E04               	movlw	4
  3520  000A36  5C07               	subwf	BOOT_GetHeader@i^0,w,c
  3521  000A38  A0D8               	btfss	status,0,c
  3522  000A3A  EF21  F005         	goto	u1701
  3523  000A3E  EF23  F005         	goto	u1700
  3524  000A42                     u1701:
  3525  000A42  EFEF  F004         	goto	l2777
  3526  000A46                     u1700:
  3527  000A46                     
  3528                           ; BSR set to: 0
  3529                           ;bootloader.c: 67:     Header.marker = EUSART1_Read();
  3530  000A46  EC33  F00A         	call	_EUSART1_Read	;wreg free
  3531  000A4A  0100               	movlb	0	; () banked
  3532  000A4C  6F65               	movwf	(_Header+5)& (0+255),b
  3533                           
  3534                           ;bootloader.c: 68:     Header.length = EUSART1_Read();
  3535  000A4E  EC33  F00A         	call	_EUSART1_Read	;wreg free
  3536  000A52  0100               	movlb	0	; () banked
  3537  000A54  6F66               	movwf	(_Header+6)& (0+255),b
  3538  000A56                     
  3539                           ; BSR set to: 0
  3540                           ;bootloader.c: 69:     if (Header.command == 0x02) {
  3541  000A56  0E02               	movlw	2
  3542  000A58  1960               	xorwf	_Header& (0+255),w,b
  3543  000A5A  A4D8               	btfss	status,2,c
  3544  000A5C  EF32  F005         	goto	u1711
  3545  000A60  EF34  F005         	goto	u1710
  3546  000A64                     u1711:
  3547  000A64  EF9B  F005         	goto	l2807
  3548  000A68                     u1710:
  3549  000A68                     
  3550                           ; BSR set to: 0
  3551                           ;bootloader.c: 70:         for (index = 0; index < Header.length; index++) {
  3552  000A68  0E00               	movlw	0
  3553  000A6A  6FAC               	movwf	_index& (0+255),b
  3554  000A6C  0E00               	movlw	0
  3555  000A6E  6FAD               	movwf	(_index+1)& (0+255),b
  3556  000A70  0E00               	movlw	0
  3557  000A72  6FAE               	movwf	(_index+2)& (0+255),b
  3558  000A74  0E00               	movlw	0
  3559  000A76  6FAF               	movwf	(_index+3)& (0+255),b
  3560  000A78  EF4E  F005         	goto	l2793
  3561  000A7C                     l2789:
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;bootloader.c: 71:             Header.dataBuffer[index] = EUSART1_Read();
  3565  000A7C  0E69               	movlw	low (_Header+9)
  3566  000A7E  25AC               	addwf	_index& (0+255),w,b
  3567  000A80  6ED9               	movwf	fsr2l,c
  3568  000A82  0E00               	movlw	high (_Header+9)
  3569  000A84  21AD               	addwfc	(_index+1)& (0+255),w,b
  3570  000A86  6EDA               	movwf	fsr2h,c
  3571  000A88  EC33  F00A         	call	_EUSART1_Read	;wreg free
  3572  000A8C  6EDF               	movwf	indf2,c
  3573  000A8E                     
  3574                           ;bootloader.c: 72:         }
  3575  000A8E  0E01               	movlw	1
  3576  000A90  0100               	movlb	0	; () banked
  3577  000A92  27AC               	addwf	_index& (0+255),f,b
  3578  000A94  0E00               	movlw	0
  3579  000A96  23AD               	addwfc	(_index+1)& (0+255),f,b
  3580  000A98  23AE               	addwfc	(_index+2)& (0+255),f,b
  3581  000A9A  23AF               	addwfc	(_index+3)& (0+255),f,b
  3582  000A9C                     l2793:
  3583                           
  3584                           ; BSR set to: 0
  3585  000A9C  C066  F001         	movff	_Header+6,??_BOOT_GetHeader
  3586  000AA0  6A02               	clrf	(??_BOOT_GetHeader+1)^0,c
  3587  000AA2  6A03               	clrf	(??_BOOT_GetHeader+2)^0,c
  3588  000AA4  6A04               	clrf	(??_BOOT_GetHeader+3)^0,c
  3589  000AA6  5001               	movf	??_BOOT_GetHeader^0,w,c
  3590  000AA8  5DAC               	subwf	_index& (0+255),w,b
  3591  000AAA  5002               	movf	(??_BOOT_GetHeader+1)^0,w,c
  3592  000AAC  59AD               	subwfb	(_index+1)& (0+255),w,b
  3593  000AAE  5003               	movf	(??_BOOT_GetHeader+2)^0,w,c
  3594  000AB0  59AE               	subwfb	(_index+2)& (0+255),w,b
  3595  000AB2  5004               	movf	(??_BOOT_GetHeader+3)^0,w,c
  3596  000AB4  59AF               	subwfb	(_index+3)& (0+255),w,b
  3597  000AB6  A0D8               	btfss	status,0,c
  3598  000AB8  EF60  F005         	goto	u1721
  3599  000ABC  EF62  F005         	goto	u1720
  3600  000AC0                     u1721:
  3601  000AC0  EF3E  F005         	goto	l2789
  3602  000AC4                     u1720:
  3603  000AC4                     
  3604                           ; BSR set to: 0
  3605                           ;bootloader.c: 73:         for (index = 0; index < 2; index++) {
  3606  000AC4  0E00               	movlw	0
  3607  000AC6  6FAC               	movwf	_index& (0+255),b
  3608  000AC8  0E00               	movlw	0
  3609  000ACA  6FAD               	movwf	(_index+1)& (0+255),b
  3610  000ACC  0E00               	movlw	0
  3611  000ACE  6FAE               	movwf	(_index+2)& (0+255),b
  3612  000AD0  0E00               	movlw	0
  3613  000AD2  6FAF               	movwf	(_index+3)& (0+255),b
  3614  000AD4                     l2797:
  3615                           
  3616                           ; BSR set to: 0
  3617  000AD4  51AF               	movf	(_index+3)& (0+255),w,b
  3618  000AD6  11AE               	iorwf	(_index+2)& (0+255),w,b
  3619  000AD8  11AD               	iorwf	(_index+1)& (0+255),w,b
  3620  000ADA  E109               	bnz	u1730
  3621  000ADC  0E02               	movlw	2
  3622  000ADE  5DAC               	subwf	_index& (0+255),w,b
  3623  000AE0  A0D8               	btfss	status,0,c
  3624  000AE2  EF75  F005         	goto	u1731
  3625  000AE6  EF77  F005         	goto	u1730
  3626  000AEA                     u1731:
  3627  000AEA  EF79  F005         	goto	l2801
  3628  000AEE                     u1730:
  3629  000AEE  EF9B  F005         	goto	l2807
  3630  000AF2                     l2801:
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;bootloader.c: 74:             Header.crc |= ((uint16_t) EUSART1_Read() << (index * 8));
  3634  000AF2  C0AC  F001         	movff	_index,??_BOOT_GetHeader
  3635  000AF6  90D8               	bcf	status,0,c
  3636  000AF8  3601               	rlcf	??_BOOT_GetHeader^0,f,c
  3637  000AFA  90D8               	bcf	status,0,c
  3638  000AFC  3601               	rlcf	??_BOOT_GetHeader^0,f,c
  3639  000AFE  90D8               	bcf	status,0,c
  3640  000B00  3601               	rlcf	??_BOOT_GetHeader^0,f,c
  3641  000B02  EC33  F00A         	call	_EUSART1_Read	;wreg free
  3642  000B06  6E02               	movwf	(??_BOOT_GetHeader+1)^0,c
  3643  000B08  6A03               	clrf	(??_BOOT_GetHeader+2)^0,c
  3644  000B0A  2A01               	incf	??_BOOT_GetHeader^0,f,c
  3645  000B0C  EF8B  F005         	goto	u1744
  3646  000B10                     u1745:
  3647  000B10  90D8               	bcf	status,0,c
  3648  000B12  3602               	rlcf	(??_BOOT_GetHeader+1)^0,f,c
  3649  000B14  3603               	rlcf	(??_BOOT_GetHeader+2)^0,f,c
  3650  000B16                     u1744:
  3651  000B16  2E01               	decfsz	??_BOOT_GetHeader^0,f,c
  3652  000B18  EF88  F005         	goto	u1745
  3653  000B1C  5002               	movf	(??_BOOT_GetHeader+1)^0,w,c
  3654  000B1E  0100               	movlb	0	; () banked
  3655  000B20  13A9               	iorwf	(_Header+73)& (0+255),f,b
  3656  000B22  5003               	movf	(??_BOOT_GetHeader+2)^0,w,c
  3657  000B24  13AA               	iorwf	(_Header+74)& (0+255),f,b
  3658  000B26                     
  3659                           ; BSR set to: 0
  3660                           ;bootloader.c: 75:         }
  3661  000B26  0E01               	movlw	1
  3662  000B28  27AC               	addwf	_index& (0+255),f,b
  3663  000B2A  0E00               	movlw	0
  3664  000B2C  23AD               	addwfc	(_index+1)& (0+255),f,b
  3665  000B2E  23AE               	addwfc	(_index+2)& (0+255),f,b
  3666  000B30  23AF               	addwfc	(_index+3)& (0+255),f,b
  3667  000B32  EF6A  F005         	goto	l2797
  3668  000B36                     l2807:
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;bootloader.c: 77:     Header.endOfPacket = EUSART1_Read();
  3672  000B36  EC33  F00A         	call	_EUSART1_Read	;wreg free
  3673  000B3A  0100               	movlb	0	; () banked
  3674  000B3C  6FAB               	movwf	(_Header+75)& (0+255),b
  3675  000B3E                     
  3676                           ; BSR set to: 0
  3677  000B3E  0012               	return		;funcret
  3678  000B40                     __end_of_BOOT_GetHeader:
  3679                           	callstack 0
  3680                           
  3681 ;; *************** function _EUSART1_Read *****************
  3682 ;; Defined at:
  3683 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;		None
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;		None
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  1    wreg      unsigned char 
  3690 ;; Registers used:
  3691 ;;		wreg, status,2
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3701 ;;Total ram usage:        0 bytes
  3702 ;; Hardware stack levels used:    1
  3703 ;; This function calls:
  3704 ;;		Nothing
  3705 ;; This function is called by:
  3706 ;;		_BOOT_Load
  3707 ;;		_BOOT_GetHeader
  3708 ;;		_getch
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711                           
  3712                           	psect	text17
  3713  001466                     __ptext17:
  3714                           	callstack 0
  3715  001466                     _EUSART1_Read:
  3716                           	callstack 29
  3717  001466                     l155:
  3718                           
  3719                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR3bits.RC1IF)
  3720  001466  010E               	movlb	14	; () banked
  3721  001468  ABCD               	btfss	205,5,b	;volatile
  3722  00146A  EF39  F00A         	goto	u1401
  3723  00146E  EF3B  F00A         	goto	u1400
  3724  001472                     u1401:
  3725  001472  EF33  F00A         	goto	l155
  3726  001476                     u1400:
  3727  001476                     
  3728                           ; BSR set to: 14
  3729                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  3730  001476  0E00               	movlw	0
  3731  001478  0100               	movlb	0	; () banked
  3732  00147A  6FBA               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  3733  00147C                     
  3734                           ; BSR set to: 0
  3735                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RC1STAbits.OERR)
  3736  00147C  A29D               	btfss	157,1,c	;volatile
  3737  00147E  EF43  F00A         	goto	u1411
  3738  001482  EF45  F00A         	goto	u1410
  3739  001486                     u1411:
  3740  001486  EF47  F00A         	goto	l2431
  3741  00148A                     u1410:
  3742  00148A                     
  3743                           ; BSR set to: 0
  3744                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          C1STAbits.CREN = 0;
  3745  00148A  989D               	bcf	157,4,c	;volatile
  3746                           
  3747                           ;mcc_generated_files/eusart1.c: 126:         RC1STAbits.CREN = 1;
  3748  00148C  889D               	bsf	157,4,c	;volatile
  3749  00148E                     l2431:
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;mcc_generated_files/eusart1.c: 129:     return RC1REG;
  3753  00148E  5099               	movf	153,w,c	;volatile
  3754  001490                     
  3755                           ; BSR set to: 0
  3756  001490  0012               	return		;funcret
  3757  001492                     __end_of_EUSART1_Read:
  3758                           	callstack 0
  3759                           
  3760 ;; *************** function _BOOT_EraseUserFlash *****************
  3761 ;; Defined at:
  3762 ;;		line 283 in file "bootloader.c"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;		None
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;  address         4    8[BANK0 ] unsigned long 
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  1    wreg      void 
  3769 ;; Registers used:
  3770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3777 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3779 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3780 ;;Total ram usage:        4 bytes
  3781 ;; Hardware stack levels used:    1
  3782 ;; Hardware stack levels required when called:    9
  3783 ;; This function calls:
  3784 ;;		_DATAEE_WriteByte
  3785 ;;		_EUSART1_Write
  3786 ;;		_FLASH_EraseBlock
  3787 ;;		_printf
  3788 ;; This function is called by:
  3789 ;;		_BOOT_Load
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           	psect	text18
  3794  000E96                     __ptext18:
  3795                           	callstack 0
  3796  000E96                     _BOOT_EraseUserFlash:
  3797                           	callstack 20
  3798  000E96                     
  3799                           ;bootloader.c: 286:     if(Header.endOfPacket != 0x04)
  3800  000E96  0E04               	movlw	4
  3801  000E98  0100               	movlb	0	; () banked
  3802  000E9A  19AB               	xorwf	(_Header+75)& (0+255),w,b
  3803  000E9C  B4D8               	btfsc	status,2,c
  3804  000E9E  EF53  F007         	goto	u1521
  3805  000EA2  EF55  F007         	goto	u1520
  3806  000EA6                     u1521:
  3807  000EA6  EF5D  F007         	goto	l2575
  3808  000EAA                     u1520:
  3809  000EAA                     
  3810                           ; BSR set to: 0
  3811                           ;bootloader.c: 287:     {;bootloader.c: 289:         printf("failed to erase flash \r\n"
      +                          );
  3812  000EAA  0EEB               	movlw	low STR_18
  3813  000EAC  6FDB               	movwf	printf@fmt& (0+255),b
  3814  000EAE  0E3E               	movlw	high STR_18
  3815  000EB0  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  3816  000EB2  EC49  F00A         	call	_printf	;wreg free
  3817  000EB6  EFA6  F007         	goto	l422
  3818  000EBA                     l2575:
  3819                           
  3820                           ; BSR set to: 0
  3821                           ;bootloader.c: 292:     DATAEE_WriteByte(0x10, ~0xAA);
  3822  000EBA  0E00               	movlw	0
  3823  000EBC  6E02               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
  3824  000EBE  0E10               	movlw	16
  3825  000EC0  6E01               	movwf	DATAEE_WriteByte@bAdd^0,c
  3826  000EC2  0E55               	movlw	85
  3827  000EC4  6E03               	movwf	DATAEE_WriteByte@bData^0,c
  3828  000EC6  EC1C  F009         	call	_DATAEE_WriteByte	;wreg free
  3829  000ECA                     
  3830                           ;bootloader.c: 293:     uint32_t address = 0x4000;
  3831  000ECA  0E00               	movlw	0
  3832  000ECC  0100               	movlb	0	; () banked
  3833  000ECE  6FE3               	movwf	BOOT_EraseUserFlash@address& (0+255),b
  3834  000ED0  0E40               	movlw	64
  3835  000ED2  6FE4               	movwf	(BOOT_EraseUserFlash@address+1)& (0+255),b
  3836  000ED4  0E00               	movlw	0
  3837  000ED6  6FE5               	movwf	(BOOT_EraseUserFlash@address+2)& (0+255),b
  3838  000ED8  0E00               	movlw	0
  3839  000EDA  6FE6               	movwf	(BOOT_EraseUserFlash@address+3)& (0+255),b
  3840  000EDC                     
  3841                           ; BSR set to: 0
  3842                           ;bootloader.c: 294:     for(index = 0; index <768; index++) {
  3843  000EDC  0E00               	movlw	0
  3844  000EDE  6FAC               	movwf	_index& (0+255),b
  3845  000EE0  0E00               	movlw	0
  3846  000EE2  6FAD               	movwf	(_index+1)& (0+255),b
  3847  000EE4  0E00               	movlw	0
  3848  000EE6  6FAE               	movwf	(_index+2)& (0+255),b
  3849  000EE8  0E00               	movlw	0
  3850  000EEA  6FAF               	movwf	(_index+3)& (0+255),b
  3851  000EEC                     l2581:
  3852                           
  3853                           ; BSR set to: 0
  3854  000EEC  51AF               	movf	(_index+3)& (0+255),w,b
  3855  000EEE  11AE               	iorwf	(_index+2)& (0+255),w,b
  3856  000EF0  E109               	bnz	u1530
  3857  000EF2  0E03               	movlw	3
  3858  000EF4  5DAD               	subwf	(_index+1)& (0+255),w,b
  3859  000EF6  A0D8               	btfss	status,0,c
  3860  000EF8  EF80  F007         	goto	u1531
  3861  000EFC  EF82  F007         	goto	u1530
  3862  000F00                     u1531:
  3863  000F00  EF84  F007         	goto	l2585
  3864  000F04                     u1530:
  3865  000F04  EF9D  F007         	goto	l2593
  3866  000F08                     l2585:
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;bootloader.c: 295:         FLASH_EraseBlock(address);
  3870  000F08  C0E3  F001         	movff	BOOT_EraseUserFlash@address,FLASH_EraseBlock@baseAddr
  3871  000F0C  C0E4  F002         	movff	BOOT_EraseUserFlash@address+1,FLASH_EraseBlock@baseAddr+1
  3872  000F10  C0E5  F003         	movff	BOOT_EraseUserFlash@address+2,FLASH_EraseBlock@baseAddr+2
  3873  000F14  C0E6  F004         	movff	BOOT_EraseUserFlash@address+3,FLASH_EraseBlock@baseAddr+3
  3874  000F18  ECFC  F009         	call	_FLASH_EraseBlock	;wreg free
  3875  000F1C                     
  3876                           ;bootloader.c: 297:         address += 64;
  3877  000F1C  0E40               	movlw	64
  3878  000F1E  0100               	movlb	0	; () banked
  3879  000F20  27E3               	addwf	BOOT_EraseUserFlash@address& (0+255),f,b
  3880  000F22  0E00               	movlw	0
  3881  000F24  23E4               	addwfc	(BOOT_EraseUserFlash@address+1)& (0+255),f,b
  3882  000F26  23E5               	addwfc	(BOOT_EraseUserFlash@address+2)& (0+255),f,b
  3883  000F28  23E6               	addwfc	(BOOT_EraseUserFlash@address+3)& (0+255),f,b
  3884  000F2A                     
  3885                           ; BSR set to: 0
  3886                           ;bootloader.c: 298:     }
  3887  000F2A  0E01               	movlw	1
  3888  000F2C  27AC               	addwf	_index& (0+255),f,b
  3889  000F2E  0E00               	movlw	0
  3890  000F30  23AD               	addwfc	(_index+1)& (0+255),f,b
  3891  000F32  23AE               	addwfc	(_index+2)& (0+255),f,b
  3892  000F34  23AF               	addwfc	(_index+3)& (0+255),f,b
  3893  000F36  EF76  F007         	goto	l2581
  3894  000F3A                     l2593:
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;bootloader.c: 299:     printf("successfully erased flashed  \r\n");
  3898  000F3A  0E75               	movlw	low STR_19
  3899  000F3C  6FDB               	movwf	printf@fmt& (0+255),b
  3900  000F3E  0E3E               	movlw	high STR_19
  3901  000F40  6FDC               	movwf	(printf@fmt+1)& (0+255),b
  3902  000F42  EC49  F00A         	call	_printf	;wreg free
  3903  000F46                     
  3904                           ;bootloader.c: 300:     EUSART1_Write(0xEE);
  3905  000F46  0EEE               	movlw	238
  3906  000F48  EC85  F00A         	call	_EUSART1_Write
  3907  000F4C                     l422:
  3908  000F4C  0012               	return		;funcret
  3909  000F4E                     __end_of_BOOT_EraseUserFlash:
  3910                           	callstack 0
  3911                           
  3912 ;; *************** function _printf *****************
  3913 ;; Defined at:
  3914 ;;		line 5 in file "D:\pic\sources\c99\common\printf.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  fmt             2    0[BANK0 ] PTR const unsigned char 
  3917 ;;		 -> STR_19(32), STR_18(25), STR_17(29), STR_16(3), 
  3918 ;;		 -> STR_15(26), STR_14(16), STR_13(22), STR_12(15), 
  3919 ;;		 -> STR_11(21), STR_10(16), STR_9(20), STR_8(24), 
  3920 ;;		 -> STR_7(16), STR_6(17), STR_5(17), STR_4(18), 
  3921 ;;		 -> STR_3(25), STR_2(31), STR_1(24), 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;  ap              2    6[BANK0 ] PTR void [1]
  3924 ;;		 -> ?_printf(2), 
  3925 ;;  ret             2    0        int 
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  2    0[BANK0 ] int 
  3928 ;; Registers used:
  3929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3930 ;; Tracked objects:
  3931 ;;		On entry : 0/0
  3932 ;;		On exit  : 0/0
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3935 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3936 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3938 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3939 ;;Total ram usage:        8 bytes
  3940 ;; Hardware stack levels used:    1
  3941 ;; Hardware stack levels required when called:    8
  3942 ;; This function calls:
  3943 ;;		_vfprintf
  3944 ;; This function is called by:
  3945 ;;		_main
  3946 ;;		_BOOT_Read
  3947 ;;		_BOOT_Write
  3948 ;;		_BOOT_ReadVersion
  3949 ;;		_BOOT_EraseUserFlash
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953                           	psect	text19
  3954  001492                     __ptext19:
  3955                           	callstack 0
  3956  001492                     _printf:
  3957                           	callstack 22
  3958  001492  0EDD               	movlw	low (?_printf+2)
  3959  001494  0100               	movlb	0	; () banked
  3960  001496  6FE1               	movwf	printf@ap& (0+255),b
  3961  001498  0E00               	movlw	high (?_printf+2)
  3962  00149A  6FE2               	movwf	(printf@ap+1)& (0+255),b
  3963  00149C                     
  3964                           ; BSR set to: 0
  3965  00149C  0E00               	movlw	0
  3966  00149E  6E58               	movwf	vfprintf@fp^0,c
  3967  0014A0  0E00               	movlw	0
  3968  0014A2  6E59               	movwf	(vfprintf@fp+1)^0,c
  3969  0014A4  C0DB  F05A         	movff	printf@fmt,vfprintf@fmt
  3970  0014A8  C0DC  F05B         	movff	printf@fmt+1,vfprintf@fmt+1
  3971  0014AC  0EE1               	movlw	low printf@ap
  3972  0014AE  6E5C               	movwf	vfprintf@ap^0,c
  3973  0014B0  0E00               	movlw	high printf@ap
  3974  0014B2  6E5D               	movwf	(vfprintf@ap+1)^0,c
  3975  0014B4  EC69  F008         	call	_vfprintf	;wreg free
  3976  0014B8  0012               	return		;funcret
  3977  0014BA                     __end_of_printf:
  3978                           	callstack 0
  3979                           
  3980 ;; *************** function _vfprintf *****************
  3981 ;; Defined at:
  3982 ;;		line 1390 in file "D:\pic\sources\c99\common\doprnt.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;  fp              2   87[COMRAM] PTR struct _IO_FILE
  3985 ;;		 -> NULL(0), 
  3986 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  3987 ;;		 -> STR_19(32), STR_18(25), STR_17(29), STR_16(3), 
  3988 ;;		 -> STR_15(26), STR_14(16), STR_13(22), STR_12(15), 
  3989 ;;		 -> STR_11(21), STR_10(16), STR_9(20), STR_8(24), 
  3990 ;;		 -> STR_7(16), STR_6(17), STR_5(17), STR_4(18), 
  3991 ;;		 -> STR_3(25), STR_2(31), STR_1(24), 
  3992 ;;  ap              2   91[COMRAM] PTR PTR void 
  3993 ;;		 -> printf@ap(2), 
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;  cfmt            2   93[COMRAM] PTR unsigned char 
  3996 ;;		 -> STR_19(32), STR_18(25), STR_17(29), STR_16(3), 
  3997 ;;		 -> STR_15(26), STR_14(16), STR_13(22), STR_12(15), 
  3998 ;;		 -> STR_11(21), STR_10(16), STR_9(20), STR_8(24), 
  3999 ;;		 -> STR_7(16), STR_6(17), STR_5(17), STR_4(18), 
  4000 ;;		 -> STR_3(25), STR_2(31), STR_1(24), 
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  2   87[COMRAM] int 
  4003 ;; Registers used:
  4004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4010 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4011 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4013 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4014 ;;Total ram usage:        8 bytes
  4015 ;; Hardware stack levels used:    1
  4016 ;; Hardware stack levels required when called:    7
  4017 ;; This function calls:
  4018 ;;		_vfpfcnvrt
  4019 ;; This function is called by:
  4020 ;;		_printf
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           	psect	text20
  4025  0010D2                     __ptext20:
  4026                           	callstack 0
  4027  0010D2                     _vfprintf:
  4028                           	callstack 22
  4029  0010D2                     
  4030                           ;D:\pic\sources\c99\common\doprnt.c: 1390: int vfprintf(FILE *fp, const char *fmt, va_li
      +                          st ap);D:\pic\sources\c99\common\doprnt.c: 1391: {;D:\pic\sources\c99\common\doprnt.c: 1
      +                          393:     char *cfmt;;D:\pic\sources\c99\common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4031  0010D2  C05A  F05E         	movff	vfprintf@fmt,vfprintf@cfmt
  4032  0010D6  C05B  F05F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4033  0010DA                     
  4034                           ;D:\pic\sources\c99\common\doprnt.c: 1396:     nout = 0;
  4035  0010DA  0E00               	movlw	0
  4036  0010DC  0100               	movlb	0	; () banked
  4037  0010DE  6FB1               	movwf	(_nout+1)& (0+255),b
  4038  0010E0  0E00               	movlw	0
  4039  0010E2  6FB0               	movwf	_nout& (0+255),b
  4040                           
  4041                           ;D:\pic\sources\c99\common\doprnt.c: 1397:     while (*cfmt) {
  4042  0010E4  EF87  F008         	goto	l2415
  4043  0010E8                     l2413:
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;D:\pic\sources\c99\common\doprnt.c: 1398:         nout += vfpfcnvrt(fp, &cfmt, ap);
  4047  0010E8  C058  F045         	movff	vfprintf@fp,vfpfcnvrt@fp
  4048  0010EC  C059  F046         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4049  0010F0  0E5E               	movlw	low vfprintf@cfmt
  4050  0010F2  6E47               	movwf	vfpfcnvrt@fmt^0,c
  4051  0010F4  0E00               	movlw	high vfprintf@cfmt
  4052  0010F6  6E48               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4053  0010F8  C05C  F049         	movff	vfprintf@ap,vfpfcnvrt@ap
  4054  0010FC  C05D  F04A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4055  001100  ECF6  F003         	call	_vfpfcnvrt	;wreg free
  4056  001104  5045               	movf	?_vfpfcnvrt^0,w,c
  4057  001106  0100               	movlb	0	; () banked
  4058  001108  27B0               	addwf	_nout& (0+255),f,b
  4059  00110A  5046               	movf	(?_vfpfcnvrt+1)^0,w,c
  4060  00110C  23B1               	addwfc	(_nout+1)& (0+255),f,b
  4061  00110E                     l2415:
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;D:\pic\sources\c99\common\doprnt.c: 1397:     while (*cfmt) {
  4065  00110E  C05E  FFF6         	movff	vfprintf@cfmt,tblptrl
  4066  001112  C05F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4067  001116                     	if	0	;tblptru may be non-zero
  4068  001116                     	endif
  4069  001116                     	if	0	;tblptru may be non-zero
  4070  001116                     	endif
  4071  001116  0008               	tblrd		*
  4072  001118  50F5               	movf	tablat,w,c
  4073  00111A  0900               	iorlw	0
  4074  00111C  A4D8               	btfss	status,2,c
  4075  00111E  EF93  F008         	goto	u1391
  4076  001122  EF95  F008         	goto	u1390
  4077  001126                     u1391:
  4078  001126  EF74  F008         	goto	l2413
  4079  00112A                     u1390:
  4080  00112A                     
  4081                           ; BSR set to: 0
  4082                           ;D:\pic\sources\c99\common\doprnt.c: 1400:     return nout;
  4083  00112A  C0B0  F058         	movff	_nout,?_vfprintf
  4084  00112E  C0B1  F059         	movff	_nout+1,?_vfprintf+1
  4085  001132                     
  4086                           ; BSR set to: 0
  4087  001132  0012               	return		;funcret
  4088  001134                     __end_of_vfprintf:
  4089                           	callstack 0
  4090                           
  4091 ;; *************** function _vfpfcnvrt *****************
  4092 ;; Defined at:
  4093 ;;		line 692 in file "D:\pic\sources\c99\common\doprnt.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;  fp              2   68[COMRAM] PTR struct _IO_FILE
  4096 ;;		 -> NULL(0), 
  4097 ;;  fmt             2   70[COMRAM] PTR PTR unsigned char 
  4098 ;;		 -> vfprintf@cfmt(2), 
  4099 ;;  ap              2   72[COMRAM] PTR PTR void 
  4100 ;;		 -> printf@ap(2), 
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;  llu             8   78[COMRAM] unsigned long long 
  4103 ;;  ll              8    0        long long 
  4104 ;;  f               4    0        long long 
  4105 ;;  vp              3    0        PTR void 
  4106 ;;  ct              3    0        unsigned char [3]
  4107 ;;  cp              3    0        PTR unsigned char 
  4108 ;;  i               2    0        int 
  4109 ;;  done            2    0        int 
  4110 ;;  c               1   86[COMRAM] unsigned char 
  4111 ;; Return value:  Size  Location     Type
  4112 ;;                  2   68[COMRAM] int 
  4113 ;; Registers used:
  4114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4120 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4121 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4122 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4123 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4124 ;;Total ram usage:       19 bytes
  4125 ;; Hardware stack levels used:    1
  4126 ;; Hardware stack levels required when called:    6
  4127 ;; This function calls:
  4128 ;;		_fputc
  4129 ;;		_xtoa
  4130 ;; This function is called by:
  4131 ;;		_vfprintf
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           	psect	text21
  4136  0007EC                     __ptext21:
  4137                           	callstack 0
  4138  0007EC                     _vfpfcnvrt:
  4139                           	callstack 22
  4140  0007EC                     
  4141                           ;D:\pic\sources\c99\common\doprnt.c: 692: static int vfpfcnvrt(FILE *fp, char *fmt[], va
      +                          _list ap);D:\pic\sources\c99\common\doprnt.c: 693: {;D:\pic\sources\c99\common\doprnt.c:
      +                           694:     char c, *cp, ct[3];;D:\pic\sources\c99\common\doprnt.c: 695:     int done, i;;
      +                          D:\pic\sources\c99\common\doprnt.c: 696:     long long ll;;D:\pic\sources\c99\common\dop
      +                          rnt.c: 697:     unsigned long long llu;;D:\pic\sources\c99\common\doprnt.c: 698:     lon
      +                          g double f;;D:\pic\sources\c99\common\doprnt.c: 699:     void *vp;;D:\pic\sources\c99\co
      +                          mmon\doprnt.c: 702:     if ((*fmt)[0] == '%') {
  4142  0007EC  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4143  0007F0  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4144  0007F4  CFDE FFF6          	movff	postinc2,tblptrl
  4145  0007F8  CFDD FFF7          	movff	postdec2,tblptrh
  4146  0007FC                     	if	0	;tblptru may be non-zero
  4147  0007FC                     	endif
  4148  0007FC                     	if	0	;tblptru may be non-zero
  4149  0007FC                     	endif
  4150  0007FC  0008               	tblrd		*
  4151  0007FE  50F5               	movf	tablat,w,c
  4152  000800  0A25               	xorlw	37
  4153  000802  A4D8               	btfss	status,2,c
  4154  000804  EF06  F004         	goto	u1341
  4155  000808  EF08  F004         	goto	u1340
  4156  00080C                     u1341:
  4157  00080C  EFC2  F004         	goto	l2377
  4158  000810                     u1340:
  4159  000810                     
  4160                           ;D:\pic\sources\c99\common\doprnt.c: 703:         ++*fmt;
  4161  000810  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4162  000814  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4163  000818  2ADE               	incf	postinc2,f,c
  4164  00081A  0E00               	movlw	0
  4165  00081C  22DD               	addwfc	postdec2,f,c
  4166  00081E                     
  4167                           ;D:\pic\sources\c99\common\doprnt.c: 705:         flags = width = 0;
  4168  00081E  0E00               	movlw	0
  4169  000820  0100               	movlb	0	; () banked
  4170  000822  6FB3               	movwf	(_width+1)& (0+255),b
  4171  000824  0E00               	movlw	0
  4172  000826  6FB2               	movwf	_width& (0+255),b
  4173  000828  C0B2  F0B6         	movff	_width,_flags
  4174  00082C  C0B3  F0B7         	movff	_width+1,_flags+1
  4175  000830                     
  4176                           ; BSR set to: 0
  4177                           ;D:\pic\sources\c99\common\doprnt.c: 706:         prec = -1;
  4178  000830  69B4               	setf	_prec& (0+255),b
  4179  000832  69B5               	setf	(_prec+1)& (0+255),b
  4180  000834                     
  4181                           ; BSR set to: 0
  4182                           ;D:\pic\sources\c99\common\doprnt.c: 1296:         if ((*fmt[0] == 'x') || (*fmt[0] == '
      +                          X')) {
  4183  000834  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4184  000838  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4185  00083C  CFDE FFF6          	movff	postinc2,tblptrl
  4186  000840  CFDD FFF7          	movff	postdec2,tblptrh
  4187  000844                     	if	0	;tblptru may be non-zero
  4188  000844                     	endif
  4189  000844                     	if	0	;tblptru may be non-zero
  4190  000844                     	endif
  4191  000844  0008               	tblrd		*
  4192  000846  50F5               	movf	tablat,w,c
  4193  000848  0A78               	xorlw	120
  4194  00084A  B4D8               	btfsc	status,2,c
  4195  00084C  EF2A  F004         	goto	u1351
  4196  000850  EF2C  F004         	goto	u1350
  4197  000854                     u1351:
  4198  000854  EF3E  F004         	goto	l2351
  4199  000858                     u1350:
  4200  000858                     
  4201                           ; BSR set to: 0
  4202  000858  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4203  00085C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4204  000860  CFDE FFF6          	movff	postinc2,tblptrl
  4205  000864  CFDD FFF7          	movff	postdec2,tblptrh
  4206  000868                     	if	0	;tblptru may be non-zero
  4207  000868                     	endif
  4208  000868                     	if	0	;tblptru may be non-zero
  4209  000868                     	endif
  4210  000868  0008               	tblrd		*
  4211  00086A  50F5               	movf	tablat,w,c
  4212  00086C  0A58               	xorlw	88
  4213  00086E  A4D8               	btfss	status,2,c
  4214  000870  EF3C  F004         	goto	u1361
  4215  000874  EF3E  F004         	goto	u1360
  4216  000878                     u1361:
  4217  000878  EF8C  F004         	goto	l2361
  4218  00087C                     u1360:
  4219  00087C                     l2351:
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;D:\pic\sources\c99\common\doprnt.c: 1298:             c = (*fmt)[0];
  4223  00087C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4224  000880  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4225  000884  CFDE FFF6          	movff	postinc2,tblptrl
  4226  000888  CFDD FFF7          	movff	postdec2,tblptrh
  4227  00088C                     	if	0	;tblptru may be non-zero
  4228  00088C                     	endif
  4229  00088C                     	if	0	;tblptru may be non-zero
  4230  00088C                     	endif
  4231  00088C  0008               	tblrd		*
  4232  00088E  CFF5 F057          	movff	tablat,vfpfcnvrt@c
  4233  000892                     
  4234                           ; BSR set to: 0
  4235                           ;D:\pic\sources\c99\common\doprnt.c: 1299:             ++*fmt;
  4236  000892  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4237  000896  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4238  00089A  2ADE               	incf	postinc2,f,c
  4239  00089C  0E00               	movlw	0
  4240  00089E  22DD               	addwfc	postdec2,f,c
  4241  0008A0                     
  4242                           ; BSR set to: 0
  4243                           ;D:\pic\sources\c99\common\doprnt.c: 1300:             llu = (unsigned long long)(*(unsi
      +                          gned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  4244  0008A0  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4245  0008A4  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4246  0008A8  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  4247  0008AC  0E02               	movlw	2
  4248  0008AE  26DE               	addwf	postinc2,f,c
  4249  0008B0  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  4250  0008B4  0E00               	movlw	0
  4251  0008B6  22DD               	addwfc	postdec2,f,c
  4252  0008B8  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4253  0008BC  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4254  0008C0  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  4255  0008C4  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  4256  0008C8  C04D  F04F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4257  0008CC  C04E  F050         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4258  0008D0  6A51               	clrf	(vfpfcnvrt@llu+2)^0,c
  4259  0008D2  6A52               	clrf	(vfpfcnvrt@llu+3)^0,c
  4260  0008D4  6A53               	clrf	(vfpfcnvrt@llu+4)^0,c
  4261  0008D6  6A54               	clrf	(vfpfcnvrt@llu+5)^0,c
  4262  0008D8  6A55               	clrf	(vfpfcnvrt@llu+6)^0,c
  4263  0008DA  6A56               	clrf	(vfpfcnvrt@llu+7)^0,c
  4264  0008DC                     
  4265                           ; BSR set to: 0
  4266                           ;D:\pic\sources\c99\common\doprnt.c: 1302:             return xtoa(fp, llu, c);
  4267  0008DC  C045  F01E         	movff	vfpfcnvrt@fp,xtoa@fp
  4268  0008E0  C046  F01F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  4269  0008E4  C04F  F020         	movff	vfpfcnvrt@llu,xtoa@d
  4270  0008E8  C050  F021         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  4271  0008EC  C051  F022         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  4272  0008F0  C052  F023         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  4273  0008F4  C053  F024         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  4274  0008F8  C054  F025         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  4275  0008FC  C055  F026         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  4276  000900  C056  F027         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  4277  000904  C057  F028         	movff	vfpfcnvrt@c,xtoa@x
  4278  000908  EC9B  F001         	call	_xtoa	;wreg free
  4279  00090C  C01E  F045         	movff	?_xtoa,?_vfpfcnvrt
  4280  000910  C01F  F046         	movff	?_xtoa+1,?_vfpfcnvrt+1
  4281  000914  EFDD  F004         	goto	l1201
  4282  000918                     l2361:
  4283                           
  4284                           ; BSR set to: 0
  4285                           ;D:\pic\sources\c99\common\doprnt.c: 1372:         if ((*fmt)[0] == '%') {
  4286  000918  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4287  00091C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4288  000920  CFDE FFF6          	movff	postinc2,tblptrl
  4289  000924  CFDD FFF7          	movff	postdec2,tblptrh
  4290  000928                     	if	0	;tblptru may be non-zero
  4291  000928                     	endif
  4292  000928                     	if	0	;tblptru may be non-zero
  4293  000928                     	endif
  4294  000928  0008               	tblrd		*
  4295  00092A  50F5               	movf	tablat,w,c
  4296  00092C  0A25               	xorlw	37
  4297  00092E  A4D8               	btfss	status,2,c
  4298  000930  EF9C  F004         	goto	u1371
  4299  000934  EF9E  F004         	goto	u1370
  4300  000938                     u1371:
  4301  000938  EFB5  F004         	goto	l2371
  4302  00093C                     u1370:
  4303  00093C                     
  4304                           ; BSR set to: 0
  4305                           ;D:\pic\sources\c99\common\doprnt.c: 1373:             ++*fmt;
  4306  00093C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4307  000940  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4308  000944  2ADE               	incf	postinc2,f,c
  4309  000946  0E00               	movlw	0
  4310  000948  22DD               	addwfc	postdec2,f,c
  4311  00094A                     
  4312                           ; BSR set to: 0
  4313                           ;D:\pic\sources\c99\common\doprnt.c: 1374:             fputc((int)'%', fp);
  4314  00094A  0E00               	movlw	0
  4315  00094C  6E04               	movwf	(fputc@c+1)^0,c
  4316  00094E  0E25               	movlw	37
  4317  000950  6E03               	movwf	fputc@c^0,c
  4318  000952  C045  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4319  000956  C046  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4320  00095A  ECA7  F007         	call	_fputc	;wreg free
  4321  00095E                     l2367:
  4322                           
  4323                           ;D:\pic\sources\c99\common\doprnt.c: 1375:             return 1;
  4324  00095E  0E00               	movlw	0
  4325  000960  6E46               	movwf	(?_vfpfcnvrt+1)^0,c
  4326  000962  0E01               	movlw	1
  4327  000964  6E45               	movwf	?_vfpfcnvrt^0,c
  4328  000966  EFDD  F004         	goto	l1201
  4329  00096A                     l2371:
  4330                           
  4331                           ; BSR set to: 0
  4332                           ;D:\pic\sources\c99\common\doprnt.c: 1379:         ++*fmt;
  4333  00096A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4334  00096E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4335  000972  2ADE               	incf	postinc2,f,c
  4336  000974  0E00               	movlw	0
  4337  000976  22DD               	addwfc	postdec2,f,c
  4338  000978                     
  4339                           ; BSR set to: 0
  4340                           ;D:\pic\sources\c99\common\doprnt.c: 1380:         return 0;
  4341  000978  0E00               	movlw	0
  4342  00097A  6E46               	movwf	(?_vfpfcnvrt+1)^0,c
  4343  00097C  0E00               	movlw	0
  4344  00097E  6E45               	movwf	?_vfpfcnvrt^0,c
  4345  000980  EFDD  F004         	goto	l1201
  4346  000984                     l2377:
  4347                           
  4348                           ;D:\pic\sources\c99\common\doprnt.c: 1384:     fputc((int)(*fmt)[0], fp);
  4349  000984  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4350  000988  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4351  00098C  CFDE FFF6          	movff	postinc2,tblptrl
  4352  000990  CFDD FFF7          	movff	postdec2,tblptrh
  4353  000994                     	if	0	;tblptru may be non-zero
  4354  000994                     	endif
  4355  000994                     	if	0	;tblptru may be non-zero
  4356  000994                     	endif
  4357  000994  0008               	tblrd		*
  4358  000996  50F5               	movf	tablat,w,c
  4359  000998  6E03               	movwf	fputc@c^0,c
  4360  00099A  6A04               	clrf	(fputc@c+1)^0,c
  4361  00099C  C045  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4362  0009A0  C046  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4363  0009A4  ECA7  F007         	call	_fputc	;wreg free
  4364  0009A8                     
  4365                           ;D:\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4366  0009A8  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4367  0009AC  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4368  0009B0  2ADE               	incf	postinc2,f,c
  4369  0009B2  0E00               	movlw	0
  4370  0009B4  22DD               	addwfc	postdec2,f,c
  4371  0009B6  EFAF  F004         	goto	l2367
  4372  0009BA                     l1201:
  4373  0009BA  0012               	return		;funcret
  4374  0009BC                     __end_of_vfpfcnvrt:
  4375                           	callstack 0
  4376                           
  4377 ;; *************** function _xtoa *****************
  4378 ;; Defined at:
  4379 ;;		line 645 in file "D:\pic\sources\c99\common\doprnt.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  4382 ;;		 -> NULL(0), 
  4383 ;;  d               8   31[COMRAM] unsigned long long 
  4384 ;;  x               1   39[COMRAM] unsigned char 
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;  n               8   56[COMRAM] unsigned long long 
  4387 ;;  c               2   66[COMRAM] int 
  4388 ;;  i               2   64[COMRAM] int 
  4389 ;;  w               2   54[COMRAM] int 
  4390 ;;  p               2   52[COMRAM] int 
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  2   29[COMRAM] int 
  4393 ;; Registers used:
  4394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4400 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4401 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4402 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4403 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4404 ;;Total ram usage:       39 bytes
  4405 ;; Hardware stack levels used:    1
  4406 ;; Hardware stack levels required when called:    5
  4407 ;; This function calls:
  4408 ;;		_isalpha
  4409 ;;		_isupper
  4410 ;;		_pad
  4411 ;;		_toupper
  4412 ;; This function is called by:
  4413 ;;		_vfpfcnvrt
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           	psect	text22
  4418  000336                     __ptext22:
  4419                           	callstack 0
  4420  000336                     _xtoa:
  4421                           	callstack 22
  4422  000336                     
  4423                           ;D:\pic\sources\c99\common\doprnt.c: 645: static int xtoa(FILE *fp, unsigned long long d
      +                          , char x);D:\pic\sources\c99\common\doprnt.c: 646: {;D:\pic\sources\c99\common\doprnt.c:
      +                           647:     int c, i, p, w;;D:\pic\sources\c99\common\doprnt.c: 648:     unsigned long lon
      +                          g n;;D:\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  4424  000336  0100               	movlb	0	; () banked
  4425  000338  BFB5               	btfsc	(_prec+1)& (0+255),7,b
  4426  00033A  EFA1  F001         	goto	u1171
  4427  00033E  EFA3  F001         	goto	u1170
  4428  000342                     u1171:
  4429  000342  EFA4  F001         	goto	l2277
  4430  000346                     u1170:
  4431  000346                     
  4432                           ; BSR set to: 0
  4433                           ;D:\pic\sources\c99\common\doprnt.c: 652:         flags &= ~(1 << 1);
  4434  000346  93B6               	bcf	_flags& (0+255),1,b
  4435  000348                     l2277:
  4436                           
  4437                           ; BSR set to: 0
  4438                           ;D:\pic\sources\c99\common\doprnt.c: 654:     p = (0 < prec) ? prec : 1;
  4439  000348  BFB5               	btfsc	(_prec+1)& (0+255),7,b
  4440  00034A  EFB1  F001         	goto	u1180
  4441  00034E  51B5               	movf	(_prec+1)& (0+255),w,b
  4442  000350  E106               	bnz	u1181
  4443  000352  05B4               	decf	_prec& (0+255),w,b
  4444  000354  B0D8               	btfsc	status,0,c
  4445  000356  EFAF  F001         	goto	u1181
  4446  00035A  EFB1  F001         	goto	u1180
  4447  00035E                     u1181:
  4448  00035E  EFB7  F001         	goto	l1169
  4449  000362                     u1180:
  4450  000362                     
  4451                           ; BSR set to: 0
  4452  000362  0E00               	movlw	0
  4453  000364  6E36               	movwf	(xtoa@p+1)^0,c
  4454  000366  0E01               	movlw	1
  4455  000368  6E35               	movwf	xtoa@p^0,c
  4456  00036A  EFBB  F001         	goto	l1171
  4457  00036E                     l1169:
  4458                           
  4459                           ; BSR set to: 0
  4460  00036E  C0B4  F035         	movff	_prec,xtoa@p
  4461  000372  C0B5  F036         	movff	_prec+1,xtoa@p+1
  4462  000376                     l1171:
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;D:\pic\sources\c99\common\doprnt.c: 655:     w = width;
  4466  000376  C0B2  F037         	movff	_width,xtoa@w
  4467  00037A  C0B3  F038         	movff	_width+1,xtoa@w+1
  4468                           
  4469                           ;D:\pic\sources\c99\common\doprnt.c: 656:     if (flags & (1 << 4)) {
  4470  00037E  A9B6               	btfss	_flags& (0+255),4,b
  4471  000380  EFC4  F001         	goto	u1191
  4472  000384  EFC6  F001         	goto	u1190
  4473  000388                     u1191:
  4474  000388  EFCA  F001         	goto	l2283
  4475  00038C                     u1190:
  4476  00038C                     
  4477                           ; BSR set to: 0
  4478                           ;D:\pic\sources\c99\common\doprnt.c: 657:         w -= 2;
  4479  00038C  0EFE               	movlw	254
  4480  00038E  2637               	addwf	xtoa@w^0,f,c
  4481  000390  0EFF               	movlw	255
  4482  000392  2238               	addwfc	(xtoa@w+1)^0,f,c
  4483  000394                     l2283:
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;D:\pic\sources\c99\common\doprnt.c: 661:     n = d;
  4487  000394  C020  F039         	movff	xtoa@d,xtoa@n
  4488  000398  C021  F03A         	movff	xtoa@d+1,xtoa@n+1
  4489  00039C  C022  F03B         	movff	xtoa@d+2,xtoa@n+2
  4490  0003A0  C023  F03C         	movff	xtoa@d+3,xtoa@n+3
  4491  0003A4  C024  F03D         	movff	xtoa@d+4,xtoa@n+4
  4492  0003A8  C025  F03E         	movff	xtoa@d+5,xtoa@n+5
  4493  0003AC  C026  F03F         	movff	xtoa@d+6,xtoa@n+6
  4494  0003B0  C027  F040         	movff	xtoa@d+7,xtoa@n+7
  4495  0003B4                     
  4496                           ; BSR set to: 0
  4497                           ;D:\pic\sources\c99\common\doprnt.c: 662:     i = sizeof(dbuf) - 1;
  4498  0003B4  0E00               	movlw	0
  4499  0003B6  6E42               	movwf	(xtoa@i+1)^0,c
  4500  0003B8  0E1F               	movlw	31
  4501  0003BA  6E41               	movwf	xtoa@i^0,c
  4502  0003BC                     
  4503                           ; BSR set to: 0
  4504                           ;D:\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] = '\0';
  4505  0003BC  0E00               	movlw	0
  4506  0003BE  6FDA               	movwf	(_dbuf+31)& (0+255),b
  4507                           
  4508                           ;D:\pic\sources\c99\common\doprnt.c: 664:     while (!(i < 2) && (n || (0 < p) || ((0 < 
      +                          w) && (flags & (1 << 1))))) {
  4509  0003C0  EF95  F002         	goto	l2319
  4510  0003C4                     l2289:
  4511                           
  4512                           ;D:\pic\sources\c99\common\doprnt.c: 665:         --i;
  4513  0003C4  0641               	decf	xtoa@i^0,f,c
  4514  0003C6  A0D8               	btfss	status,0,c
  4515  0003C8  0642               	decf	(xtoa@i+1)^0,f,c
  4516  0003CA                     
  4517                           ;D:\pic\sources\c99\common\doprnt.c: 666:         c = n & 0x0f;
  4518  0003CA  0E0F               	movlw	15
  4519  0003CC  1439               	andwf	xtoa@n^0,w,c
  4520  0003CE  6E43               	movwf	xtoa@c^0,c
  4521  0003D0  6A44               	clrf	(xtoa@c+1)^0,c
  4522  0003D2                     
  4523                           ;D:\pic\sources\c99\common\doprnt.c: 667:         c = (c < 10) ? (int)'0' + c : (int)'a'
      +                           + (c - 10);
  4524  0003D2  BE44               	btfsc	(xtoa@c+1)^0,7,c
  4525  0003D4  EFF5  F001         	goto	u1201
  4526  0003D8  5044               	movf	(xtoa@c+1)^0,w,c
  4527  0003DA  E109               	bnz	u1200
  4528  0003DC  0E0A               	movlw	10
  4529  0003DE  5C43               	subwf	xtoa@c^0,w,c
  4530  0003E0  A0D8               	btfss	status,0,c
  4531  0003E2  EFF5  F001         	goto	u1201
  4532  0003E6  EFF7  F001         	goto	u1200
  4533  0003EA                     u1201:
  4534  0003EA  EFFF  F001         	goto	l2297
  4535  0003EE                     u1200:
  4536  0003EE  0E57               	movlw	87
  4537  0003F0  2443               	addwf	xtoa@c^0,w,c
  4538  0003F2  6E43               	movwf	xtoa@c^0,c
  4539  0003F4  0E00               	movlw	0
  4540  0003F6  2044               	addwfc	(xtoa@c+1)^0,w,c
  4541  0003F8  6E44               	movwf	(xtoa@c+1)^0,c
  4542  0003FA  EF05  F002         	goto	l1178
  4543  0003FE                     l2297:
  4544  0003FE  0E30               	movlw	48
  4545  000400  2443               	addwf	xtoa@c^0,w,c
  4546  000402  6E43               	movwf	xtoa@c^0,c
  4547  000404  0E00               	movlw	0
  4548  000406  2044               	addwfc	(xtoa@c+1)^0,w,c
  4549  000408  6E44               	movwf	(xtoa@c+1)^0,c
  4550  00040A                     l1178:
  4551  00040A  0EBF               	movlw	191
  4552  00040C  6E29               	movwf	??_xtoa^0,c
  4553  00040E  0EFF               	movlw	255
  4554  000410  6E2A               	movwf	(??_xtoa+1)^0,c
  4555  000412  5028               	movf	xtoa@x^0,w,c
  4556  000414  6E2B               	movwf	(??_xtoa+2)^0,c
  4557  000416  6A2C               	clrf	(??_xtoa+3)^0,c
  4558  000418  5029               	movf	??_xtoa^0,w,c
  4559  00041A  262B               	addwf	(??_xtoa+2)^0,f,c
  4560  00041C  502A               	movf	(??_xtoa+1)^0,w,c
  4561  00041E  222C               	addwfc	(??_xtoa+3)^0,f,c
  4562  000420  502C               	movf	(??_xtoa+3)^0,w,c
  4563  000422  E10A               	bnz	u1210
  4564  000424  0E1A               	movlw	26
  4565  000426  5C2B               	subwf	(??_xtoa+2)^0,w,c
  4566  000428  A0D8               	btfss	status,0,c
  4567  00042A  EF19  F002         	goto	u1211
  4568  00042E  EF1C  F002         	goto	u1210
  4569  000432                     u1211:
  4570  000432  0E01               	movlw	1
  4571  000434  EF1D  F002         	goto	u1220
  4572  000438                     u1210:
  4573  000438  0E00               	movlw	0
  4574  00043A                     u1220:
  4575  00043A  6E31               	movwf	_xtoa$1238^0,c
  4576  00043C  6A32               	clrf	(_xtoa$1238+1)^0,c
  4577  00043E  5031               	movf	_xtoa$1238^0,w,c
  4578  000440  1032               	iorwf	(_xtoa$1238+1)^0,w,c
  4579  000442  B4D8               	btfsc	status,2,c
  4580  000444  EF26  F002         	goto	u1231
  4581  000448  EF28  F002         	goto	u1230
  4582  00044C                     u1231:
  4583  00044C  EF58  F002         	goto	l2311
  4584  000450                     u1230:
  4585  000450  0E9F               	movlw	159
  4586  000452  6E29               	movwf	??_xtoa^0,c
  4587  000454  0EFF               	movlw	255
  4588  000456  6E2A               	movwf	(??_xtoa+1)^0,c
  4589  000458  0E20               	movlw	32
  4590  00045A  1043               	iorwf	xtoa@c^0,w,c
  4591  00045C  6E2B               	movwf	(??_xtoa+2)^0,c
  4592  00045E  0E00               	movlw	0
  4593  000460  1044               	iorwf	(xtoa@c+1)^0,w,c
  4594  000462  6E2C               	movwf	(??_xtoa+3)^0,c
  4595  000464  5029               	movf	??_xtoa^0,w,c
  4596  000466  262B               	addwf	(??_xtoa+2)^0,f,c
  4597  000468  502A               	movf	(??_xtoa+1)^0,w,c
  4598  00046A  222C               	addwfc	(??_xtoa+3)^0,f,c
  4599  00046C  502C               	movf	(??_xtoa+3)^0,w,c
  4600  00046E  E10A               	bnz	u1240
  4601  000470  0E1A               	movlw	26
  4602  000472  5C2B               	subwf	(??_xtoa+2)^0,w,c
  4603  000474  A0D8               	btfss	status,0,c
  4604  000476  EF3F  F002         	goto	u1241
  4605  00047A  EF42  F002         	goto	u1240
  4606  00047E                     u1241:
  4607  00047E  0E01               	movlw	1
  4608  000480  EF43  F002         	goto	u1250
  4609  000484                     u1240:
  4610  000484  0E00               	movlw	0
  4611  000486                     u1250:
  4612  000486  6E33               	movwf	_xtoa$1239^0,c
  4613  000488  6A34               	clrf	(_xtoa$1239+1)^0,c
  4614  00048A  5033               	movf	_xtoa$1239^0,w,c
  4615  00048C  1034               	iorwf	(_xtoa$1239+1)^0,w,c
  4616  00048E  B4D8               	btfsc	status,2,c
  4617  000490  EF4C  F002         	goto	u1261
  4618  000494  EF4E  F002         	goto	u1260
  4619  000498                     u1261:
  4620  000498  EF58  F002         	goto	l2311
  4621  00049C                     u1260:
  4622  00049C                     
  4623                           ;D:\pic\sources\c99\common\doprnt.c: 669:             c = toupper(c);
  4624  00049C  C043  F007         	movff	xtoa@c,toupper@c
  4625  0004A0  C044  F008         	movff	xtoa@c+1,toupper@c+1
  4626  0004A4  EC9A  F008         	call	_toupper	;wreg free
  4627  0004A8  C007  F043         	movff	?_toupper,xtoa@c
  4628  0004AC  C008  F044         	movff	?_toupper+1,xtoa@c+1
  4629  0004B0                     l2311:
  4630                           
  4631                           ;D:\pic\sources\c99\common\doprnt.c: 671:         dbuf[i] = (char)c;
  4632  0004B0  0EBB               	movlw	low _dbuf
  4633  0004B2  2441               	addwf	xtoa@i^0,w,c
  4634  0004B4  6ED9               	movwf	fsr2l,c
  4635  0004B6  0E00               	movlw	high _dbuf
  4636  0004B8  2042               	addwfc	(xtoa@i+1)^0,w,c
  4637  0004BA  6EDA               	movwf	fsr2h,c
  4638  0004BC  C043  FFDF         	movff	xtoa@c,indf2
  4639  0004C0                     
  4640                           ;D:\pic\sources\c99\common\doprnt.c: 672:         --p;
  4641  0004C0  0635               	decf	xtoa@p^0,f,c
  4642  0004C2  A0D8               	btfss	status,0,c
  4643  0004C4  0636               	decf	(xtoa@p+1)^0,f,c
  4644  0004C6                     
  4645                           ;D:\pic\sources\c99\common\doprnt.c: 673:         --w;
  4646  0004C6  0637               	decf	xtoa@w^0,f,c
  4647  0004C8  A0D8               	btfss	status,0,c
  4648  0004CA  0638               	decf	(xtoa@w+1)^0,f,c
  4649  0004CC                     
  4650                           ;D:\pic\sources\c99\common\doprnt.c: 674:         n = n >> 4;
  4651  0004CC  C039  F029         	movff	xtoa@n,??_xtoa
  4652  0004D0  C03A  F02A         	movff	xtoa@n+1,??_xtoa+1
  4653  0004D4  C03B  F02B         	movff	xtoa@n+2,??_xtoa+2
  4654  0004D8  C03C  F02C         	movff	xtoa@n+3,??_xtoa+3
  4655  0004DC  C03D  F02D         	movff	xtoa@n+4,??_xtoa+4
  4656  0004E0  C03E  F02E         	movff	xtoa@n+5,??_xtoa+5
  4657  0004E4  C03F  F02F         	movff	xtoa@n+6,??_xtoa+6
  4658  0004E8  C040  F030         	movff	xtoa@n+7,??_xtoa+7
  4659  0004EC  0E05               	movlw	5
  4660  0004EE  EF82  F002         	goto	u1270
  4661  0004F2                     u1275:
  4662  0004F2  90D8               	bcf	status,0,c
  4663  0004F4  3230               	rrcf	(??_xtoa+7)^0,f,c
  4664  0004F6  322F               	rrcf	(??_xtoa+6)^0,f,c
  4665  0004F8  322E               	rrcf	(??_xtoa+5)^0,f,c
  4666  0004FA  322D               	rrcf	(??_xtoa+4)^0,f,c
  4667  0004FC  322C               	rrcf	(??_xtoa+3)^0,f,c
  4668  0004FE  322B               	rrcf	(??_xtoa+2)^0,f,c
  4669  000500  322A               	rrcf	(??_xtoa+1)^0,f,c
  4670  000502  3229               	rrcf	??_xtoa^0,f,c
  4671  000504                     u1270:
  4672  000504  2EE8               	decfsz	wreg,f,c
  4673  000506  EF79  F002         	goto	u1275
  4674  00050A  C029  F039         	movff	??_xtoa,xtoa@n
  4675  00050E  C02A  F03A         	movff	??_xtoa+1,xtoa@n+1
  4676  000512  C02B  F03B         	movff	??_xtoa+2,xtoa@n+2
  4677  000516  C02C  F03C         	movff	??_xtoa+3,xtoa@n+3
  4678  00051A  C02D  F03D         	movff	??_xtoa+4,xtoa@n+4
  4679  00051E  C02E  F03E         	movff	??_xtoa+5,xtoa@n+5
  4680  000522  C02F  F03F         	movff	??_xtoa+6,xtoa@n+6
  4681  000526  C030  F040         	movff	??_xtoa+7,xtoa@n+7
  4682  00052A                     l2319:
  4683                           
  4684                           ;D:\pic\sources\c99\common\doprnt.c: 664:     while (!(i < 2) && (n || (0 < p) || ((0 < 
      +                          w) && (flags & (1 << 1))))) {
  4685  00052A  BE42               	btfsc	(xtoa@i+1)^0,7,c
  4686  00052C  EFA1  F002         	goto	u1281
  4687  000530  5042               	movf	(xtoa@i+1)^0,w,c
  4688  000532  E109               	bnz	u1280
  4689  000534  0E02               	movlw	2
  4690  000536  5C41               	subwf	xtoa@i^0,w,c
  4691  000538  A0D8               	btfss	status,0,c
  4692  00053A  EFA1  F002         	goto	u1281
  4693  00053E  EFA3  F002         	goto	u1280
  4694  000542                     u1281:
  4695  000542  EFD4  F002         	goto	l1192
  4696  000546                     u1280:
  4697  000546  5039               	movf	xtoa@n^0,w,c
  4698  000548  103A               	iorwf	(xtoa@n+1)^0,w,c
  4699  00054A  103B               	iorwf	(xtoa@n+2)^0,w,c
  4700  00054C  103C               	iorwf	(xtoa@n+3)^0,w,c
  4701  00054E  103D               	iorwf	(xtoa@n+4)^0,w,c
  4702  000550  103E               	iorwf	(xtoa@n+5)^0,w,c
  4703  000552  103F               	iorwf	(xtoa@n+6)^0,w,c
  4704  000554  1040               	iorwf	(xtoa@n+7)^0,w,c
  4705  000556  A4D8               	btfss	status,2,c
  4706  000558  EFB0  F002         	goto	u1291
  4707  00055C  EFB2  F002         	goto	u1290
  4708  000560                     u1291:
  4709  000560  EFE2  F001         	goto	l2289
  4710  000564                     u1290:
  4711  000564  BE36               	btfsc	(xtoa@p+1)^0,7,c
  4712  000566  EFBF  F002         	goto	u1300
  4713  00056A  5036               	movf	(xtoa@p+1)^0,w,c
  4714  00056C  E106               	bnz	u1301
  4715  00056E  0435               	decf	xtoa@p^0,w,c
  4716  000570  B0D8               	btfsc	status,0,c
  4717  000572  EFBD  F002         	goto	u1301
  4718  000576  EFBF  F002         	goto	u1300
  4719  00057A                     u1301:
  4720  00057A  EFE2  F001         	goto	l2289
  4721  00057E                     u1300:
  4722  00057E  BE38               	btfsc	(xtoa@w+1)^0,7,c
  4723  000580  EFCA  F002         	goto	u1311
  4724  000584  5038               	movf	(xtoa@w+1)^0,w,c
  4725  000586  E108               	bnz	u1310
  4726  000588  0437               	decf	xtoa@w^0,w,c
  4727  00058A  A0D8               	btfss	status,0,c
  4728  00058C  EFCA  F002         	goto	u1311
  4729  000590  EFCC  F002         	goto	u1310
  4730  000594                     u1311:
  4731  000594  EFD4  F002         	goto	l1192
  4732  000598                     u1310:
  4733  000598  0100               	movlb	0	; () banked
  4734  00059A  B3B6               	btfsc	_flags& (0+255),1,b
  4735  00059C  EFD2  F002         	goto	u1321
  4736  0005A0  EFD4  F002         	goto	u1320
  4737  0005A4                     u1321:
  4738  0005A4  EFE2  F001         	goto	l2289
  4739  0005A8                     u1320:
  4740  0005A8                     l1192:
  4741                           
  4742                           ;D:\pic\sources\c99\common\doprnt.c: 678:     if (flags & (1 << 4)) {
  4743  0005A8  0100               	movlb	0	; () banked
  4744  0005AA  A9B6               	btfss	_flags& (0+255),4,b
  4745  0005AC  EFDA  F002         	goto	u1331
  4746  0005B0  EFDC  F002         	goto	u1330
  4747  0005B4                     u1331:
  4748  0005B4  EFF2  F002         	goto	l2335
  4749  0005B8                     u1330:
  4750  0005B8                     
  4751                           ; BSR set to: 0
  4752                           ;D:\pic\sources\c99\common\doprnt.c: 679:         --i;
  4753  0005B8  0641               	decf	xtoa@i^0,f,c
  4754  0005BA  A0D8               	btfss	status,0,c
  4755  0005BC  0642               	decf	(xtoa@i+1)^0,f,c
  4756  0005BE                     
  4757                           ; BSR set to: 0
  4758                           ;D:\pic\sources\c99\common\doprnt.c: 680:         dbuf[i] = x;
  4759  0005BE  0EBB               	movlw	low _dbuf
  4760  0005C0  2441               	addwf	xtoa@i^0,w,c
  4761  0005C2  6ED9               	movwf	fsr2l,c
  4762  0005C4  0E00               	movlw	high _dbuf
  4763  0005C6  2042               	addwfc	(xtoa@i+1)^0,w,c
  4764  0005C8  6EDA               	movwf	fsr2h,c
  4765  0005CA  C028  FFDF         	movff	xtoa@x,indf2
  4766  0005CE                     
  4767                           ; BSR set to: 0
  4768                           ;D:\pic\sources\c99\common\doprnt.c: 681:         --i;
  4769  0005CE  0641               	decf	xtoa@i^0,f,c
  4770  0005D0  A0D8               	btfss	status,0,c
  4771  0005D2  0642               	decf	(xtoa@i+1)^0,f,c
  4772                           
  4773                           ;D:\pic\sources\c99\common\doprnt.c: 682:         dbuf[i] = '0';
  4774  0005D4  0EBB               	movlw	low _dbuf
  4775  0005D6  2441               	addwf	xtoa@i^0,w,c
  4776  0005D8  6ED9               	movwf	fsr2l,c
  4777  0005DA  0E00               	movlw	high _dbuf
  4778  0005DC  2042               	addwfc	(xtoa@i+1)^0,w,c
  4779  0005DE  6EDA               	movwf	fsr2h,c
  4780  0005E0  0E30               	movlw	48
  4781  0005E2  6EDF               	movwf	indf2,c
  4782  0005E4                     l2335:
  4783                           
  4784                           ; BSR set to: 0
  4785                           ;D:\pic\sources\c99\common\doprnt.c: 686:     return pad(fp, &dbuf[i], w);
  4786  0005E4  C01E  F013         	movff	xtoa@fp,pad@fp
  4787  0005E8  C01F  F014         	movff	xtoa@fp+1,pad@fp+1
  4788  0005EC  0EBB               	movlw	low _dbuf
  4789  0005EE  2441               	addwf	xtoa@i^0,w,c
  4790  0005F0  6E15               	movwf	pad@buf^0,c
  4791  0005F2  0E00               	movlw	high _dbuf
  4792  0005F4  2042               	addwfc	(xtoa@i+1)^0,w,c
  4793  0005F6  6E16               	movwf	(pad@buf+1)^0,c
  4794  0005F8  C037  F017         	movff	xtoa@w,pad@p
  4795  0005FC  C038  F018         	movff	xtoa@w+1,pad@p+1
  4796  000600  ECE8  F006         	call	_pad	;wreg free
  4797  000604  C013  F01E         	movff	?_pad,?_xtoa
  4798  000608  C014  F01F         	movff	?_pad+1,?_xtoa+1
  4799  00060C  0012               	return		;funcret
  4800  00060E                     __end_of_xtoa:
  4801                           	callstack 0
  4802                           
  4803 ;; *************** function _toupper *****************
  4804 ;; Defined at:
  4805 ;;		line 4 in file "D:\pic\sources\c99\common\toupper.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;  c               2    6[COMRAM] int 
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;		None
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  2    6[COMRAM] int 
  4812 ;; Registers used:
  4813 ;;		wreg, status,2, status,0
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4819 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4820 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4821 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4822 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4823 ;;Total ram usage:        8 bytes
  4824 ;; Hardware stack levels used:    1
  4825 ;; Hardware stack levels required when called:    1
  4826 ;; This function calls:
  4827 ;;		_islower
  4828 ;; This function is called by:
  4829 ;;		_xtoa
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           
  4833                           	psect	text23
  4834  001134                     __ptext23:
  4835                           	callstack 0
  4836  001134                     _toupper:
  4837                           	callstack 25
  4838  001134  0E9F               	movlw	159
  4839  001136  6E09               	movwf	??_toupper^0,c
  4840  001138  0EFF               	movlw	255
  4841  00113A  6E0A               	movwf	(??_toupper+1)^0,c
  4842  00113C  C007  F00B         	movff	toupper@c,??_toupper+2
  4843  001140  C008  F00C         	movff	toupper@c+1,??_toupper+3
  4844  001144  5009               	movf	??_toupper^0,w,c
  4845  001146  260B               	addwf	(??_toupper+2)^0,f,c
  4846  001148  500A               	movf	(??_toupper+1)^0,w,c
  4847  00114A  220C               	addwfc	(??_toupper+3)^0,f,c
  4848  00114C  500C               	movf	(??_toupper+3)^0,w,c
  4849  00114E  E10A               	bnz	u1140
  4850  001150  0E1A               	movlw	26
  4851  001152  5C0B               	subwf	(??_toupper+2)^0,w,c
  4852  001154  A0D8               	btfss	status,0,c
  4853  001156  EFAF  F008         	goto	u1141
  4854  00115A  EFB2  F008         	goto	u1140
  4855  00115E                     u1141:
  4856  00115E  0E01               	movlw	1
  4857  001160  EFB3  F008         	goto	u1150
  4858  001164                     u1140:
  4859  001164  0E00               	movlw	0
  4860  001166                     u1150:
  4861  001166  6E0D               	movwf	_toupper$1315^0,c
  4862  001168  6A0E               	clrf	(_toupper$1315+1)^0,c
  4863  00116A  500D               	movf	_toupper$1315^0,w,c
  4864  00116C  100E               	iorwf	(_toupper$1315+1)^0,w,c
  4865  00116E  B4D8               	btfsc	status,2,c
  4866  001170  EFBC  F008         	goto	u1161
  4867  001174  EFBE  F008         	goto	u1160
  4868  001178                     u1161:
  4869  001178  EFC4  F008         	goto	l1251
  4870  00117C                     u1160:
  4871  00117C  0E5F               	movlw	95
  4872  00117E  1407               	andwf	toupper@c^0,w,c
  4873  001180  6E07               	movwf	?_toupper^0,c
  4874  001182  6A08               	clrf	(?_toupper+1)^0,c
  4875  001184  EFC8  F008         	goto	l1256
  4876  001188                     l1251:
  4877  001188  C007  F007         	movff	toupper@c,?_toupper
  4878  00118C  C008  F008         	movff	toupper@c+1,?_toupper+1
  4879  001190                     l1256:
  4880  001190  0012               	return		;funcret
  4881  001192                     __end_of_toupper:
  4882                           	callstack 0
  4883                           
  4884 ;; *************** function _islower *****************
  4885 ;; Defined at:
  4886 ;;		line 5 in file "D:\pic\sources\c99\common\islower.c"
  4887 ;; Parameters:    Size  Location     Type
  4888 ;;  c               2    0[COMRAM] int 
  4889 ;; Auto vars:     Size  Location     Type
  4890 ;;		None
  4891 ;; Return value:  Size  Location     Type
  4892 ;;                  2    0[COMRAM] int 
  4893 ;; Registers used:
  4894 ;;		wreg, status,2, status,0
  4895 ;; Tracked objects:
  4896 ;;		On entry : 0/0
  4897 ;;		On exit  : 0/0
  4898 ;;		Unchanged: 0/0
  4899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4900 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4902 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4903 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4904 ;;Total ram usage:        6 bytes
  4905 ;; Hardware stack levels used:    1
  4906 ;; This function calls:
  4907 ;;		Nothing
  4908 ;; This function is called by:
  4909 ;;		_toupper
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913                           	psect	text24
  4914  001388                     __ptext24:
  4915                           	callstack 0
  4916  001388                     _islower:
  4917                           	callstack 25
  4918  001388  0E9F               	movlw	159
  4919  00138A  6E03               	movwf	??_islower^0,c
  4920  00138C  0EFF               	movlw	255
  4921  00138E  6E04               	movwf	(??_islower+1)^0,c
  4922  001390  C001  F005         	movff	islower@c,??_islower+2
  4923  001394  C002  F006         	movff	islower@c+1,??_islower+3
  4924  001398  5003               	movf	??_islower^0,w,c
  4925  00139A  2605               	addwf	(??_islower+2)^0,f,c
  4926  00139C  5004               	movf	(??_islower+1)^0,w,c
  4927  00139E  2206               	addwfc	(??_islower+3)^0,f,c
  4928  0013A0  5006               	movf	(??_islower+3)^0,w,c
  4929  0013A2  E10A               	bnz	u1040
  4930  0013A4  0E1A               	movlw	26
  4931  0013A6  5C05               	subwf	(??_islower+2)^0,w,c
  4932  0013A8  A0D8               	btfss	status,0,c
  4933  0013AA  EFD9  F009         	goto	u1041
  4934  0013AE  EFDC  F009         	goto	u1040
  4935  0013B2                     u1041:
  4936  0013B2  0E01               	movlw	1
  4937  0013B4  EFDD  F009         	goto	u1050
  4938  0013B8                     u1040:
  4939  0013B8  0E00               	movlw	0
  4940  0013BA                     u1050:
  4941  0013BA  6E01               	movwf	?_islower^0,c
  4942  0013BC  6A02               	clrf	(?_islower+1)^0,c
  4943  0013BE  0012               	return		;funcret
  4944  0013C0                     __end_of_islower:
  4945                           	callstack 0
  4946                           
  4947 ;; *************** function _pad *****************
  4948 ;; Defined at:
  4949 ;;		line 72 in file "D:\pic\sources\c99\common\doprnt.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  4952 ;;		 -> NULL(0), 
  4953 ;;  buf             2   20[COMRAM] PTR unsigned char 
  4954 ;;		 -> dbuf(32), 
  4955 ;;  p               2   22[COMRAM] int 
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;  w               2   27[COMRAM] int 
  4958 ;;  i               2   25[COMRAM] int 
  4959 ;; Return value:  Size  Location     Type
  4960 ;;                  2   18[COMRAM] int 
  4961 ;; Registers used:
  4962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4963 ;; Tracked objects:
  4964 ;;		On entry : 0/0
  4965 ;;		On exit  : 0/0
  4966 ;;		Unchanged: 0/0
  4967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4968 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4969 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4970 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4971 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4972 ;;Total ram usage:       11 bytes
  4973 ;; Hardware stack levels used:    1
  4974 ;; Hardware stack levels required when called:    4
  4975 ;; This function calls:
  4976 ;;		_fputc
  4977 ;;		_fputs
  4978 ;;		_strlen
  4979 ;; This function is called by:
  4980 ;;		_xtoa
  4981 ;; This function uses a non-reentrant model
  4982 ;;
  4983                           
  4984                           	psect	text25
  4985  000DD0                     __ptext25:
  4986                           	callstack 0
  4987  000DD0                     _pad:
  4988                           	callstack 22
  4989  000DD0                     
  4990                           ;D:\pic\sources\c99\common\doprnt.c: 72: static int pad(FILE *fp, char *buf, int p);D:\p
      +                          ic\sources\c99\common\doprnt.c: 73: {;D:\pic\sources\c99\common\doprnt.c: 74:     int i,
      +                           w;;D:\pic\sources\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4991  000DD0  0100               	movlb	0	; () banked
  4992  000DD2  A1B6               	btfss	_flags& (0+255),0,b
  4993  000DD4  EFEE  F006         	goto	u1061
  4994  000DD8  EFF0  F006         	goto	u1060
  4995  000DDC                     u1061:
  4996  000DDC  EFFA  F006         	goto	l2237
  4997  000DE0                     u1060:
  4998  000DE0                     
  4999                           ; BSR set to: 0
  5000                           ;D:\pic\sources\c99\common\doprnt.c: 78:         fputs((const char *)buf, fp);
  5001  000DE0  C015  F00C         	movff	pad@buf,fputs@s
  5002  000DE4  C016  F00D         	movff	pad@buf+1,fputs@s+1
  5003  000DE8  C013  F00E         	movff	pad@fp,fputs@fp
  5004  000DEC  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  5005  000DF0  EC64  F009         	call	_fputs	;wreg free
  5006  000DF4                     l2237:
  5007                           
  5008                           ;D:\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 0 : p;
  5009  000DF4  BE18               	btfsc	(pad@p+1)^0,7,c
  5010  000DF6  EFFF  F006         	goto	u1071
  5011  000DFA  EF01  F007         	goto	u1070
  5012  000DFE                     u1071:
  5013  000DFE  EF07  F007         	goto	l2241
  5014  000E02                     u1070:
  5015  000E02  C017  F01C         	movff	pad@p,pad@w
  5016  000E06  C018  F01D         	movff	pad@p+1,pad@w+1
  5017  000E0A  EF0B  F007         	goto	l1159
  5018  000E0E                     l2241:
  5019  000E0E  0E00               	movlw	0
  5020  000E10  6E1D               	movwf	(pad@w+1)^0,c
  5021  000E12  0E00               	movlw	0
  5022  000E14  6E1C               	movwf	pad@w^0,c
  5023  000E16                     l1159:
  5024                           
  5025                           ;D:\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5026  000E16  0E00               	movlw	0
  5027  000E18  6E1B               	movwf	(pad@i+1)^0,c
  5028  000E1A  0E00               	movlw	0
  5029  000E1C  6E1A               	movwf	pad@i^0,c
  5030                           
  5031                           ;D:\pic\sources\c99\common\doprnt.c: 84:     while (i < w) {
  5032  000E1E  EF1D  F007         	goto	l2247
  5033  000E22                     l2243:
  5034                           
  5035                           ;D:\pic\sources\c99\common\doprnt.c: 85:         fputc(' ', fp);
  5036  000E22  0E00               	movlw	0
  5037  000E24  6E04               	movwf	(fputc@c+1)^0,c
  5038  000E26  0E20               	movlw	32
  5039  000E28  6E03               	movwf	fputc@c^0,c
  5040  000E2A  C013  F005         	movff	pad@fp,fputc@fp
  5041  000E2E  C014  F006         	movff	pad@fp+1,fputc@fp+1
  5042  000E32  ECA7  F007         	call	_fputc	;wreg free
  5043  000E36                     
  5044                           ;D:\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5045  000E36  4A1A               	infsnz	pad@i^0,f,c
  5046  000E38  2A1B               	incf	(pad@i+1)^0,f,c
  5047  000E3A                     l2247:
  5048                           
  5049                           ;D:\pic\sources\c99\common\doprnt.c: 84:     while (i < w) {
  5050  000E3A  501C               	movf	pad@w^0,w,c
  5051  000E3C  5C1A               	subwf	pad@i^0,w,c
  5052  000E3E  501B               	movf	(pad@i+1)^0,w,c
  5053  000E40  0A80               	xorlw	128
  5054  000E42  6E19               	movwf	??_pad^0,c
  5055  000E44  501D               	movf	(pad@w+1)^0,w,c
  5056  000E46  0A80               	xorlw	128
  5057  000E48  5819               	subwfb	??_pad^0,w,c
  5058  000E4A  A0D8               	btfss	status,0,c
  5059  000E4C  EF2A  F007         	goto	u1081
  5060  000E50  EF2C  F007         	goto	u1080
  5061  000E54                     u1081:
  5062  000E54  EF11  F007         	goto	l2243
  5063  000E58                     u1080:
  5064  000E58                     
  5065                           ;D:\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & (1 << 0))) {
  5066  000E58  0100               	movlb	0	; () banked
  5067  000E5A  B1B6               	btfsc	_flags& (0+255),0,b
  5068  000E5C  EF32  F007         	goto	u1091
  5069  000E60  EF34  F007         	goto	u1090
  5070  000E64                     u1091:
  5071  000E64  EF3E  F007         	goto	l2251
  5072  000E68                     u1090:
  5073  000E68                     
  5074                           ; BSR set to: 0
  5075                           ;D:\pic\sources\c99\common\doprnt.c: 91:         fputs((const char *)buf, fp);
  5076  000E68  C015  F00C         	movff	pad@buf,fputs@s
  5077  000E6C  C016  F00D         	movff	pad@buf+1,fputs@s+1
  5078  000E70  C013  F00E         	movff	pad@fp,fputs@fp
  5079  000E74  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  5080  000E78  EC64  F009         	call	_fputs	;wreg free
  5081  000E7C                     l2251:
  5082                           
  5083                           ;D:\pic\sources\c99\common\doprnt.c: 94:     return (int)(strlen(buf) + (size_t)w);
  5084  000E7C  C015  F001         	movff	pad@buf,strlen@s
  5085  000E80  C016  F002         	movff	pad@buf+1,strlen@s+1
  5086  000E84  EC18  F00A         	call	_strlen	;wreg free
  5087  000E88  501C               	movf	pad@w^0,w,c
  5088  000E8A  2401               	addwf	?_strlen^0,w,c
  5089  000E8C  6E13               	movwf	?_pad^0,c
  5090  000E8E  501D               	movf	(pad@w+1)^0,w,c
  5091  000E90  2002               	addwfc	(?_strlen+1)^0,w,c
  5092  000E92  6E14               	movwf	(?_pad+1)^0,c
  5093  000E94  0012               	return		;funcret
  5094  000E96                     __end_of_pad:
  5095                           	callstack 0
  5096                           
  5097 ;; *************** function _strlen *****************
  5098 ;; Defined at:
  5099 ;;		line 5 in file "D:\pic\sources\c99\common\strlen.c"
  5100 ;; Parameters:    Size  Location     Type
  5101 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5102 ;;		 -> dbuf(32), 
  5103 ;; Auto vars:     Size  Location     Type
  5104 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5105 ;;		 -> dbuf(32), 
  5106 ;; Return value:  Size  Location     Type
  5107 ;;                  2    0[COMRAM] unsigned int 
  5108 ;; Registers used:
  5109 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5110 ;; Tracked objects:
  5111 ;;		On entry : 0/0
  5112 ;;		On exit  : 0/0
  5113 ;;		Unchanged: 0/0
  5114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5115 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5116 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5118 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5119 ;;Total ram usage:        4 bytes
  5120 ;; Hardware stack levels used:    1
  5121 ;; This function calls:
  5122 ;;		Nothing
  5123 ;; This function is called by:
  5124 ;;		_pad
  5125 ;; This function uses a non-reentrant model
  5126 ;;
  5127                           
  5128                           	psect	text26
  5129  001430                     __ptext26:
  5130                           	callstack 0
  5131  001430                     _strlen:
  5132                           	callstack 25
  5133  001430  C001  F003         	movff	strlen@s,strlen@a
  5134  001434  C002  F004         	movff	strlen@s+1,strlen@a+1
  5135  001438  EF20  F00A         	goto	l2223
  5136  00143C                     l2221:
  5137  00143C  4A01               	infsnz	strlen@s^0,f,c
  5138  00143E  2A02               	incf	(strlen@s+1)^0,f,c
  5139  001440                     l2223:
  5140  001440  C001  FFD9         	movff	strlen@s,fsr2l
  5141  001444  C002  FFDA         	movff	strlen@s+1,fsr2h
  5142  001448  50DF               	movf	indf2,w,c
  5143  00144A  A4D8               	btfss	status,2,c
  5144  00144C  EF2A  F00A         	goto	u1031
  5145  001450  EF2C  F00A         	goto	u1030
  5146  001454                     u1031:
  5147  001454  EF1E  F00A         	goto	l2221
  5148  001458                     u1030:
  5149  001458  5003               	movf	strlen@a^0,w,c
  5150  00145A  5C01               	subwf	strlen@s^0,w,c
  5151  00145C  6E01               	movwf	?_strlen^0,c
  5152  00145E  5004               	movf	(strlen@a+1)^0,w,c
  5153  001460  5802               	subwfb	(strlen@s+1)^0,w,c
  5154  001462  6E02               	movwf	(?_strlen+1)^0,c
  5155  001464  0012               	return		;funcret
  5156  001466                     __end_of_strlen:
  5157                           	callstack 0
  5158                           
  5159 ;; *************** function _fputs *****************
  5160 ;; Defined at:
  5161 ;;		line 8 in file "D:\pic\sources\c99\common\nf_fputs.c"
  5162 ;; Parameters:    Size  Location     Type
  5163 ;;  s               2   11[COMRAM] PTR const unsigned char 
  5164 ;;		 -> dbuf(32), 
  5165 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  5166 ;;		 -> NULL(0), 
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;  i               2   16[COMRAM] int 
  5169 ;;  c               1   15[COMRAM] unsigned char 
  5170 ;; Return value:  Size  Location     Type
  5171 ;;                  2   11[COMRAM] int 
  5172 ;; Registers used:
  5173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5179 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5180 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5182 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5183 ;;Total ram usage:        7 bytes
  5184 ;; Hardware stack levels used:    1
  5185 ;; Hardware stack levels required when called:    3
  5186 ;; This function calls:
  5187 ;;		_fputc
  5188 ;; This function is called by:
  5189 ;;		_pad
  5190 ;; This function uses a non-reentrant model
  5191 ;;
  5192                           
  5193                           	psect	text27
  5194  0012C8                     __ptext27:
  5195                           	callstack 0
  5196  0012C8                     _fputs:
  5197                           	callstack 22
  5198  0012C8  0E00               	movlw	0
  5199  0012CA  6E12               	movwf	(fputs@i+1)^0,c
  5200  0012CC  0E00               	movlw	0
  5201  0012CE  6E11               	movwf	fputs@i^0,c
  5202  0012D0  EF75  F009         	goto	l2217
  5203  0012D4                     l2213:
  5204  0012D4  C010  F003         	movff	fputs@c,fputc@c
  5205  0012D8  6A04               	clrf	(fputc@c+1)^0,c
  5206  0012DA  C00E  F005         	movff	fputs@fp,fputc@fp
  5207  0012DE  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  5208  0012E2  ECA7  F007         	call	_fputc	;wreg free
  5209  0012E6  4A11               	infsnz	fputs@i^0,f,c
  5210  0012E8  2A12               	incf	(fputs@i+1)^0,f,c
  5211  0012EA                     l2217:
  5212  0012EA  5011               	movf	fputs@i^0,w,c
  5213  0012EC  240C               	addwf	fputs@s^0,w,c
  5214  0012EE  6ED9               	movwf	fsr2l,c
  5215  0012F0  5012               	movf	(fputs@i+1)^0,w,c
  5216  0012F2  200D               	addwfc	(fputs@s+1)^0,w,c
  5217  0012F4  6EDA               	movwf	fsr2h,c
  5218  0012F6  50DF               	movf	indf2,w,c
  5219  0012F8  6E10               	movwf	fputs@c^0,c
  5220  0012FA  5010               	movf	fputs@c^0,w,c
  5221  0012FC  A4D8               	btfss	status,2,c
  5222  0012FE  EF83  F009         	goto	u1021
  5223  001302  EF85  F009         	goto	u1020
  5224  001306                     u1021:
  5225  001306  EF6A  F009         	goto	l2213
  5226  00130A                     u1020:
  5227  00130A  0012               	return		;funcret
  5228  00130C                     __end_of_fputs:
  5229                           	callstack 0
  5230                           
  5231 ;; *************** function _fputc *****************
  5232 ;; Defined at:
  5233 ;;		line 8 in file "D:\pic\sources\c99\common\nf_fputc.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;  c               2    2[COMRAM] int 
  5236 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  5237 ;;		 -> NULL(0), 
  5238 ;; Auto vars:     Size  Location     Type
  5239 ;;		None
  5240 ;; Return value:  Size  Location     Type
  5241 ;;                  2    2[COMRAM] int 
  5242 ;; Registers used:
  5243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5244 ;; Tracked objects:
  5245 ;;		On entry : 0/0
  5246 ;;		On exit  : 0/0
  5247 ;;		Unchanged: 0/0
  5248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5249 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5251 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5252 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5253 ;;Total ram usage:        9 bytes
  5254 ;; Hardware stack levels used:    1
  5255 ;; Hardware stack levels required when called:    2
  5256 ;; This function calls:
  5257 ;;		_putch
  5258 ;; This function is called by:
  5259 ;;		_pad
  5260 ;;		_vfpfcnvrt
  5261 ;;		_fputs
  5262 ;; This function uses a non-reentrant model
  5263 ;;
  5264                           
  5265                           	psect	text28
  5266  000F4E                     __ptext28:
  5267                           	callstack 0
  5268  000F4E                     _fputc:
  5269                           	callstack 22
  5270  000F4E  5005               	movf	fputc@fp^0,w,c
  5271  000F50  1006               	iorwf	(fputc@fp+1)^0,w,c
  5272  000F52  B4D8               	btfsc	status,2,c
  5273  000F54  EFAE  F007         	goto	u981
  5274  000F58  EFB0  F007         	goto	u980
  5275  000F5C                     u981:
  5276  000F5C  EFB9  F007         	goto	l2201
  5277  000F60                     u980:
  5278  000F60  5005               	movf	fputc@fp^0,w,c
  5279  000F62  1006               	iorwf	(fputc@fp+1)^0,w,c
  5280  000F64  A4D8               	btfss	status,2,c
  5281  000F66  EFB7  F007         	goto	u991
  5282  000F6A  EFB9  F007         	goto	u990
  5283  000F6E                     u991:
  5284  000F6E  EFBE  F007         	goto	l2203
  5285  000F72                     u990:
  5286  000F72                     l2201:
  5287  000F72  5003               	movf	fputc@c^0,w,c
  5288  000F74  ECA9  F00A         	call	_putch
  5289  000F78  EFF1  F007         	goto	l1232
  5290  000F7C                     l2203:
  5291  000F7C  EE20 F004          	lfsr	2,4
  5292  000F80  5005               	movf	fputc@fp^0,w,c
  5293  000F82  26D9               	addwf	fsr2l,f,c
  5294  000F84  5006               	movf	(fputc@fp+1)^0,w,c
  5295  000F86  22DA               	addwfc	fsr2h,f,c
  5296  000F88  50DE               	movf	postinc2,w,c
  5297  000F8A  10DE               	iorwf	postinc2,w,c
  5298  000F8C  B4D8               	btfsc	status,2,c
  5299  000F8E  EFCB  F007         	goto	u1001
  5300  000F92  EFCD  F007         	goto	u1000
  5301  000F96                     u1001:
  5302  000F96  EFE8  F007         	goto	l2207
  5303  000F9A                     u1000:
  5304  000F9A  EE20 F004          	lfsr	2,4
  5305  000F9E  5005               	movf	fputc@fp^0,w,c
  5306  000FA0  26D9               	addwf	fsr2l,f,c
  5307  000FA2  5006               	movf	(fputc@fp+1)^0,w,c
  5308  000FA4  22DA               	addwfc	fsr2h,f,c
  5309  000FA6  EE10 F002          	lfsr	1,2
  5310  000FAA  5005               	movf	fputc@fp^0,w,c
  5311  000FAC  26E1               	addwf	fsr1l,f,c
  5312  000FAE  5006               	movf	(fputc@fp+1)^0,w,c
  5313  000FB0  22E2               	addwfc	fsr1h,f,c
  5314  000FB2  50DE               	movf	postinc2,w,c
  5315  000FB4  5CE6               	subwf	postinc1,w,c
  5316  000FB6  50E6               	movf	postinc1,w,c
  5317  000FB8  0A80               	xorlw	128
  5318  000FBA  6E0B               	movwf	(??_fputc+4)^0,c
  5319  000FBC  50DE               	movf	postinc2,w,c
  5320  000FBE  0A80               	xorlw	128
  5321  000FC0  580B               	subwfb	(??_fputc+4)^0,w,c
  5322  000FC2  B0D8               	btfsc	status,0,c
  5323  000FC4  EFE6  F007         	goto	u1011
  5324  000FC8  EFE8  F007         	goto	u1010
  5325  000FCC                     u1011:
  5326  000FCC  EFF1  F007         	goto	l1232
  5327  000FD0                     u1010:
  5328  000FD0                     l2207:
  5329  000FD0  EE20 F002          	lfsr	2,2
  5330  000FD4  5005               	movf	fputc@fp^0,w,c
  5331  000FD6  26D9               	addwf	fsr2l,f,c
  5332  000FD8  5006               	movf	(fputc@fp+1)^0,w,c
  5333  000FDA  22DA               	addwfc	fsr2h,f,c
  5334  000FDC  2ADE               	incf	postinc2,f,c
  5335  000FDE  0E00               	movlw	0
  5336  000FE0  22DD               	addwfc	postdec2,f,c
  5337  000FE2                     l1232:
  5338  000FE2  0012               	return		;funcret
  5339  000FE4                     __end_of_fputc:
  5340                           	callstack 0
  5341                           
  5342 ;; *************** function _putch *****************
  5343 ;; Defined at:
  5344 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  5345 ;; Parameters:    Size  Location     Type
  5346 ;;  txData          1    wreg     unsigned char 
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;  txData          1    1[COMRAM] unsigned char 
  5349 ;; Return value:  Size  Location     Type
  5350 ;;                  1    wreg      void 
  5351 ;; Registers used:
  5352 ;;		wreg, status,2, cstack
  5353 ;; Tracked objects:
  5354 ;;		On entry : 0/0
  5355 ;;		On exit  : 0/0
  5356 ;;		Unchanged: 0/0
  5357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5359 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5361 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5362 ;;Total ram usage:        1 bytes
  5363 ;; Hardware stack levels used:    1
  5364 ;; Hardware stack levels required when called:    1
  5365 ;; This function calls:
  5366 ;;		_EUSART1_Write
  5367 ;; This function is called by:
  5368 ;;		_fputc
  5369 ;; This function uses a non-reentrant model
  5370 ;;
  5371                           
  5372                           	psect	text29
  5373  001552                     __ptext29:
  5374                           	callstack 0
  5375  001552                     _putch:
  5376                           	callstack 22
  5377                           
  5378                           ;incstack = 0
  5379                           ;putch@txData stored from wreg
  5380  001552  6E02               	movwf	putch@txData^0,c
  5381  001554                     
  5382                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  5383  001554  5002               	movf	putch@txData^0,w,c
  5384  001556  EC85  F00A         	call	_EUSART1_Write
  5385  00155A  0012               	return		;funcret
  5386  00155C                     __end_of_putch:
  5387                           	callstack 0
  5388                           
  5389 ;; *************** function _EUSART1_Write *****************
  5390 ;; Defined at:
  5391 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  5392 ;; Parameters:    Size  Location     Type
  5393 ;;  txData          1    wreg     unsigned char 
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;  txData          1    0[COMRAM] unsigned char 
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  1    wreg      void 
  5398 ;; Registers used:
  5399 ;;		wreg
  5400 ;; Tracked objects:
  5401 ;;		On entry : 0/0
  5402 ;;		On exit  : 0/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5406 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5408 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5409 ;;Total ram usage:        1 bytes
  5410 ;; Hardware stack levels used:    1
  5411 ;; This function calls:
  5412 ;;		Nothing
  5413 ;; This function is called by:
  5414 ;;		_putch
  5415 ;;		_BOOT_Load
  5416 ;;		_BOOT_Read
  5417 ;;		_BOOT_Write
  5418 ;;		_BOOT_ReadVersion
  5419 ;;		_BOOT_EraseUserFlash
  5420 ;; This function uses a non-reentrant model
  5421 ;;
  5422                           
  5423                           	psect	text30
  5424  00150A                     __ptext30:
  5425                           	callstack 0
  5426  00150A                     _EUSART1_Write:
  5427                           	callstack 22
  5428                           
  5429                           ;incstack = 0
  5430                           ;EUSART1_Write@txData stored from wreg
  5431  00150A  6E01               	movwf	EUSART1_Write@txData^0,c
  5432  00150C                     l162:
  5433                           
  5434                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR3bits.TX1IF)
  5435  00150C  010E               	movlb	14	; () banked
  5436  00150E  A9CD               	btfss	205,4,b	;volatile
  5437  001510  EF8C  F00A         	goto	u971
  5438  001514  EF8E  F00A         	goto	u970
  5439  001518                     u971:
  5440  001518  EF86  F00A         	goto	l162
  5441  00151C                     u970:
  5442  00151C                     
  5443                           ; BSR set to: 14
  5444                           ;mcc_generated_files/eusart1.c: 138:     TX1REG = txData;
  5445  00151C  C001  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  5446  001520                     
  5447                           ; BSR set to: 14
  5448  001520  0012               	return		;funcret
  5449  001522                     __end_of_EUSART1_Write:
  5450                           	callstack 0
  5451                           
  5452 ;; *************** function _isupper *****************
  5453 ;; Defined at:
  5454 ;;		line 5 in file "D:\pic\sources\c99\common\isupper.c"
  5455 ;; Parameters:    Size  Location     Type
  5456 ;;  c               2    0[COMRAM] int 
  5457 ;; Auto vars:     Size  Location     Type
  5458 ;;		None
  5459 ;; Return value:  Size  Location     Type
  5460 ;;                  2    0[COMRAM] int 
  5461 ;; Registers used:
  5462 ;;		wreg, status,2, status,0
  5463 ;; Tracked objects:
  5464 ;;		On entry : 0/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5468 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5470 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5471 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5472 ;;Total ram usage:        6 bytes
  5473 ;; Hardware stack levels used:    1
  5474 ;; This function calls:
  5475 ;;		Nothing
  5476 ;; This function is called by:
  5477 ;;		_xtoa
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           
  5481                           	psect	text31
  5482  0013C0                     __ptext31:
  5483                           	callstack 0
  5484  0013C0                     _isupper:
  5485                           	callstack 26
  5486  0013C0  0EBF               	movlw	191
  5487  0013C2  6E03               	movwf	??_isupper^0,c
  5488  0013C4  0EFF               	movlw	255
  5489  0013C6  6E04               	movwf	(??_isupper+1)^0,c
  5490  0013C8  C001  F005         	movff	isupper@c,??_isupper+2
  5491  0013CC  C002  F006         	movff	isupper@c+1,??_isupper+3
  5492  0013D0  5003               	movf	??_isupper^0,w,c
  5493  0013D2  2605               	addwf	(??_isupper+2)^0,f,c
  5494  0013D4  5004               	movf	(??_isupper+1)^0,w,c
  5495  0013D6  2206               	addwfc	(??_isupper+3)^0,f,c
  5496  0013D8  5006               	movf	(??_isupper+3)^0,w,c
  5497  0013DA  E10A               	bnz	u1100
  5498  0013DC  0E1A               	movlw	26
  5499  0013DE  5C05               	subwf	(??_isupper+2)^0,w,c
  5500  0013E0  A0D8               	btfss	status,0,c
  5501  0013E2  EFF5  F009         	goto	u1101
  5502  0013E6  EFF8  F009         	goto	u1100
  5503  0013EA                     u1101:
  5504  0013EA  0E01               	movlw	1
  5505  0013EC  EFF9  F009         	goto	u1110
  5506  0013F0                     u1100:
  5507  0013F0  0E00               	movlw	0
  5508  0013F2                     u1110:
  5509  0013F2  6E01               	movwf	?_isupper^0,c
  5510  0013F4  6A02               	clrf	(?_isupper+1)^0,c
  5511  0013F6  0012               	return		;funcret
  5512  0013F8                     __end_of_isupper:
  5513                           	callstack 0
  5514                           
  5515 ;; *************** function _isalpha *****************
  5516 ;; Defined at:
  5517 ;;		line 5 in file "D:\pic\sources\c99\common\isalpha.c"
  5518 ;; Parameters:    Size  Location     Type
  5519 ;;  c               2    0[COMRAM] int 
  5520 ;; Auto vars:     Size  Location     Type
  5521 ;;		None
  5522 ;; Return value:  Size  Location     Type
  5523 ;;                  2    0[COMRAM] int 
  5524 ;; Registers used:
  5525 ;;		wreg, status,2, status,0
  5526 ;; Tracked objects:
  5527 ;;		On entry : 0/0
  5528 ;;		On exit  : 0/0
  5529 ;;		Unchanged: 0/0
  5530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5531 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5533 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5534 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5535 ;;Total ram usage:        6 bytes
  5536 ;; Hardware stack levels used:    1
  5537 ;; This function calls:
  5538 ;;		Nothing
  5539 ;; This function is called by:
  5540 ;;		_xtoa
  5541 ;; This function uses a non-reentrant model
  5542 ;;
  5543                           
  5544                           	psect	text32
  5545  00134C                     __ptext32:
  5546                           	callstack 0
  5547  00134C                     _isalpha:
  5548                           	callstack 26
  5549  00134C  0E9F               	movlw	159
  5550  00134E  6E03               	movwf	??_isalpha^0,c
  5551  001350  0EFF               	movlw	255
  5552  001352  6E04               	movwf	(??_isalpha+1)^0,c
  5553  001354  0E20               	movlw	32
  5554  001356  1001               	iorwf	isalpha@c^0,w,c
  5555  001358  6E05               	movwf	(??_isalpha+2)^0,c
  5556  00135A  0E00               	movlw	0
  5557  00135C  1002               	iorwf	(isalpha@c+1)^0,w,c
  5558  00135E  6E06               	movwf	(??_isalpha+3)^0,c
  5559  001360  5003               	movf	??_isalpha^0,w,c
  5560  001362  2605               	addwf	(??_isalpha+2)^0,f,c
  5561  001364  5004               	movf	(??_isalpha+1)^0,w,c
  5562  001366  2206               	addwfc	(??_isalpha+3)^0,f,c
  5563  001368  5006               	movf	(??_isalpha+3)^0,w,c
  5564  00136A  E10A               	bnz	u1120
  5565  00136C  0E1A               	movlw	26
  5566  00136E  5C05               	subwf	(??_isalpha+2)^0,w,c
  5567  001370  A0D8               	btfss	status,0,c
  5568  001372  EFBD  F009         	goto	u1121
  5569  001376  EFC0  F009         	goto	u1120
  5570  00137A                     u1121:
  5571  00137A  0E01               	movlw	1
  5572  00137C  EFC1  F009         	goto	u1130
  5573  001380                     u1120:
  5574  001380  0E00               	movlw	0
  5575  001382                     u1130:
  5576  001382  6E01               	movwf	?_isalpha^0,c
  5577  001384  6A02               	clrf	(?_isalpha+1)^0,c
  5578  001386  0012               	return		;funcret
  5579  001388                     __end_of_isalpha:
  5580                           	callstack 0
  5581                           
  5582 ;; *************** function _FLASH_EraseBlock *****************
  5583 ;; Defined at:
  5584 ;;		line 143 in file "mcc_generated_files/memory.c"
  5585 ;; Parameters:    Size  Location     Type
  5586 ;;  baseAddr        4    0[COMRAM] unsigned long 
  5587 ;; Auto vars:     Size  Location     Type
  5588 ;;  GIEBitValue     1    4[COMRAM] unsigned char 
  5589 ;; Return value:  Size  Location     Type
  5590 ;;                  1    wreg      void 
  5591 ;; Registers used:
  5592 ;;		wreg, status,2
  5593 ;; Tracked objects:
  5594 ;;		On entry : 0/0
  5595 ;;		On exit  : 0/0
  5596 ;;		Unchanged: 0/0
  5597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5598 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5599 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5601 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5602 ;;Total ram usage:        5 bytes
  5603 ;; Hardware stack levels used:    1
  5604 ;; This function calls:
  5605 ;;		Nothing
  5606 ;; This function is called by:
  5607 ;;		_FLASH_WriteBlock
  5608 ;;		_BOOT_EraseUserFlash
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           	psect	text33
  5613  0013F8                     __ptext33:
  5614                           	callstack 0
  5615  0013F8                     _FLASH_EraseBlock:
  5616                           	callstack 27
  5617  0013F8                     
  5618                           ;mcc_generated_files/memory.c: 143: void FLASH_EraseBlock(uint32_t baseAddr);mcc_generat
      +                          ed_files/memory.c: 144: {;mcc_generated_files/memory.c: 145:  uint8_t GIEBitValue = INTC
      +                          ONbits.GIE;
  5619  0013F8  0E00               	movlw	0
  5620  0013FA  BEF2               	btfsc	242,7,c	;volatile
  5621  0013FC  0E01               	movlw	1
  5622  0013FE  6E05               	movwf	FLASH_EraseBlock@GIEBitValue^0,c
  5623  001400                     
  5624                           ;mcc_generated_files/memory.c: 147:     TBLPTRU = (uint8_t)((baseAddr & 0x00FF0000) >> 1
      +                          6);
  5625  001400  C003  FFF8         	movff	FLASH_EraseBlock@baseAddr+2,tblptru	;volatile
  5626  001404                     
  5627                           ;mcc_generated_files/memory.c: 148:     TBLPTRH = (uint8_t)((baseAddr & 0x0000FF00)>> 8)
      +                          ;
  5628  001404  C002  FFF7         	movff	FLASH_EraseBlock@baseAddr+1,tblptrh	;volatile
  5629  001408                     
  5630                           ;mcc_generated_files/memory.c: 149:     TBLPTRL = (uint8_t)(baseAddr & 0x000000FF);
  5631  001408  C001  FFF6         	movff	FLASH_EraseBlock@baseAddr,tblptrl	;volatile
  5632  00140C                     
  5633                           ;mcc_generated_files/memory.c: 151:     NVMCON1bits.NVMREG = 2;
  5634  00140C  5081               	movf	129,w,c	;volsfr
  5635  00140E  0B3F               	andlw	-193
  5636  001410  0980               	iorlw	128
  5637  001412  6E81               	movwf	129,c	;volsfr
  5638  001414                     
  5639                           ;mcc_generated_files/memory.c: 152:     NVMCON1bits.WREN = 1;
  5640  001414  8481               	bsf	129,2,c	;volsfr
  5641  001416                     
  5642                           ;mcc_generated_files/memory.c: 153:     NVMCON1bits.FREE = 1;
  5643  001416  8881               	bsf	129,4,c	;volsfr
  5644  001418                     
  5645                           ;mcc_generated_files/memory.c: 154:  INTCONbits.GIE = 0;
  5646  001418  9EF2               	bcf	242,7,c	;volatile
  5647  00141A                     
  5648                           ;mcc_generated_files/memory.c: 155:  NVMCON2 = 0x55;
  5649  00141A  0E55               	movlw	85
  5650  00141C  6E82               	movwf	130,c	;volsfr
  5651  00141E                     
  5652                           ;mcc_generated_files/memory.c: 156:     NVMCON2 = 0xAA;
  5653  00141E  0EAA               	movlw	170
  5654  001420  6E82               	movwf	130,c	;volsfr
  5655  001422                     
  5656                           ;mcc_generated_files/memory.c: 157:     NVMCON1bits.WR = 1;
  5657  001422  8281               	bsf	129,1,c	;volsfr
  5658  001424                     
  5659                           ;mcc_generated_files/memory.c: 158:  INTCONbits.GIE = GIEBitValue;
  5660  001424  B005               	btfsc	FLASH_EraseBlock@GIEBitValue^0,0,c
  5661  001426  D002               	bra	u1385
  5662  001428  9EF2               	bcf	242,7,c	;volatile
  5663  00142A  D001               	bra	u1386
  5664  00142C                     u1385:
  5665  00142C  8EF2               	bsf	242,7,c	;volatile
  5666  00142E                     u1386:
  5667  00142E  0012               	return		;funcret
  5668  001430                     __end_of_FLASH_EraseBlock:
  5669                           	callstack 0
  5670                           
  5671 ;; *************** function _DATAEE_WriteByte *****************
  5672 ;; Defined at:
  5673 ;;		line 165 in file "mcc_generated_files/memory.c"
  5674 ;; Parameters:    Size  Location     Type
  5675 ;;  bAdd            2    0[COMRAM] unsigned short 
  5676 ;;  bData           1    2[COMRAM] unsigned char 
  5677 ;; Auto vars:     Size  Location     Type
  5678 ;;  GIEBitValue     1    3[COMRAM] unsigned char 
  5679 ;; Return value:  Size  Location     Type
  5680 ;;                  1    wreg      void 
  5681 ;; Registers used:
  5682 ;;		wreg, status,2, status,0
  5683 ;; Tracked objects:
  5684 ;;		On entry : 0/0
  5685 ;;		On exit  : 0/0
  5686 ;;		Unchanged: 0/0
  5687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5688 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5689 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5691 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5692 ;;Total ram usage:        4 bytes
  5693 ;; Hardware stack levels used:    1
  5694 ;; This function calls:
  5695 ;;		Nothing
  5696 ;; This function is called by:
  5697 ;;		_BOOT_Load
  5698 ;;		_BOOT_Write
  5699 ;;		_BOOT_EraseUserFlash
  5700 ;; This function uses a non-reentrant model
  5701 ;;
  5702                           
  5703                           	psect	text34
  5704  001238                     __ptext34:
  5705                           	callstack 0
  5706  001238                     _DATAEE_WriteByte:
  5707                           	callstack 29
  5708  001238  50F2               	movf	242,w,c	;volatile
  5709  00123A                     
  5710                           ;mcc_generated_files/memory.c: 167:     NVMADRH = ((bAdd >> 8) & 0x03);
  5711  00123A  5002               	movf	(DATAEE_WriteByte@bAdd+1)^0,w,c
  5712  00123C  0B03               	andlw	3
  5713  00123E  6E7F               	movwf	127,c	;volatile
  5714  001240                     
  5715                           ;mcc_generated_files/memory.c: 168:     NVMADRL = (bAdd & 0xFF);
  5716  001240  C001  FF7E         	movff	DATAEE_WriteByte@bAdd,3966	;volatile
  5717  001244                     
  5718                           ;mcc_generated_files/memory.c: 169:     NVMDAT = bData;
  5719  001244  C003  FF80         	movff	DATAEE_WriteByte@bData,3968	;volatile
  5720  001248                     
  5721                           ;mcc_generated_files/memory.c: 170:     NVMCON1bits.NVMREG = 0;
  5722  001248  0E3F               	movlw	-193
  5723  00124A  1681               	andwf	129,f,c	;volsfr
  5724  00124C                     
  5725                           ;mcc_generated_files/memory.c: 171:     NVMCON1bits.WREN = 1;
  5726  00124C  8481               	bsf	129,2,c	;volsfr
  5727  00124E                     
  5728                           ;mcc_generated_files/memory.c: 172:     GIEBitValue = INTCONbits.GIE;
  5729  00124E  0E00               	movlw	0
  5730  001250  BEF2               	btfsc	242,7,c	;volatile
  5731  001252  0E01               	movlw	1
  5732  001254  6E04               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
  5733  001256                     
  5734                           ;mcc_generated_files/memory.c: 173:  INTCONbits.GIE = 0;
  5735  001256  9EF2               	bcf	242,7,c	;volatile
  5736  001258                     
  5737                           ;mcc_generated_files/memory.c: 174:     NVMCON2 = 0x55;
  5738  001258  0E55               	movlw	85
  5739  00125A  6E82               	movwf	130,c	;volsfr
  5740  00125C                     
  5741                           ;mcc_generated_files/memory.c: 175:     NVMCON2 = 0xAA;
  5742  00125C  0EAA               	movlw	170
  5743  00125E  6E82               	movwf	130,c	;volsfr
  5744  001260                     
  5745                           ;mcc_generated_files/memory.c: 176:     NVMCON1bits.WR = 1;
  5746  001260  8281               	bsf	129,1,c	;volsfr
  5747  001262                     l242:
  5748                           
  5749                           ;mcc_generated_files/memory.c: 178:     while (NVMCON1bits.WR)
  5750  001262  B281               	btfsc	129,1,c	;volsfr
  5751  001264  EF36  F009         	goto	u1461
  5752  001268  EF38  F009         	goto	u1460
  5753  00126C                     u1461:
  5754  00126C  EF31  F009         	goto	l242
  5755  001270                     u1460:
  5756  001270                     
  5757                           ;mcc_generated_files/memory.c: 181:     NVMCON1bits.WREN = 0;
  5758  001270  9481               	bcf	129,2,c	;volsfr
  5759                           
  5760                           ;mcc_generated_files/memory.c: 182:     NVMCON1bits.NVMREG0 = 0;
  5761  001272  9C81               	bcf	129,6,c	;volsfr
  5762                           
  5763                           ;mcc_generated_files/memory.c: 183:     NVMCON1bits.NVMREG1 = 1;
  5764  001274  8E81               	bsf	129,7,c	;volsfr
  5765                           
  5766                           ;mcc_generated_files/memory.c: 184:     INTCONbits.GIE = GIEBitValue;
  5767  001276  B004               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
  5768  001278  D002               	bra	u1475
  5769  00127A  9EF2               	bcf	242,7,c	;volatile
  5770  00127C  D001               	bra	u1476
  5771  00127E                     u1475:
  5772  00127E  8EF2               	bsf	242,7,c	;volatile
  5773  001280                     u1476:
  5774  001280  0012               	return		;funcret
  5775  001282                     __end_of_DATAEE_WriteByte:
  5776                           	callstack 0
  5777                           
  5778                           	psect	text35
  5779  000000                     __ptext35:
  5780                           	callstack 0
  5781  000000                     
  5782                           	psect	rparam
  5783  0000                     
  5784                           	psect	idloc
  5785                           
  5786                           ;Config register IDLOC0 @ 0x200000
  5787                           ;	unspecified, using default values
  5788  200000                     	org	2097152
  5789  200000  0FFF               	dw	4095
  5790                           
  5791                           ;Config register IDLOC1 @ 0x200002
  5792                           ;	unspecified, using default values
  5793  200002                     	org	2097154
  5794  200002  0FFF               	dw	4095
  5795                           
  5796                           ;Config register IDLOC2 @ 0x200004
  5797                           ;	unspecified, using default values
  5798  200004                     	org	2097156
  5799  200004  0FFF               	dw	4095
  5800                           
  5801                           ;Config register IDLOC3 @ 0x200006
  5802                           ;	unspecified, using default values
  5803  200006                     	org	2097158
  5804  200006  0FFF               	dw	4095
  5805                           
  5806                           ;Config register IDLOC4 @ 0x200008
  5807                           ;	unspecified, using default values
  5808  200008                     	org	2097160
  5809  200008  0FFF               	dw	4095
  5810                           
  5811                           ;Config register IDLOC5 @ 0x20000A
  5812                           ;	unspecified, using default values
  5813  20000A                     	org	2097162
  5814  20000A  0FFF               	dw	4095
  5815                           
  5816                           ;Config register IDLOC6 @ 0x20000C
  5817                           ;	unspecified, using default values
  5818  20000C                     	org	2097164
  5819  20000C  0FFF               	dw	4095
  5820                           
  5821                           ;Config register IDLOC7 @ 0x20000E
  5822                           ;	unspecified, using default values
  5823  20000E                     	org	2097166
  5824  20000E  0FFF               	dw	4095
  5825                           
  5826                           	psect	config
  5827                           
  5828                           ;Config register CONFIG1L @ 0x300000
  5829                           ;	External Oscillator mode Selection bits
  5830                           ;	FEXTOSC = OFF, Oscillator not enabled
  5831                           ;	Power-up default value for COSC bits
  5832                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  5833  300000                     	org	3145728
  5834  300000  EC                 	db	236
  5835                           
  5836                           ;Config register CONFIG1H @ 0x300001
  5837                           ;	Clock Out Enable bit
  5838                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  5839                           ;	Clock Switch Enable bit
  5840                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  5841                           ;	Fail-Safe Clock Monitor Enable bit
  5842                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  5843  300001                     	org	3145729
  5844  300001  FF                 	db	255
  5845                           
  5846                           ;Config register CONFIG2L @ 0x300002
  5847                           ;	Master Clear Enable bit
  5848                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  5849                           ;	Power-up Timer Enable bit
  5850                           ;	PWRTE = OFF, Power up timer disabled
  5851                           ;	Low-power BOR enable bit
  5852                           ;	LPBOREN = OFF, ULPBOR disabled
  5853                           ;	Brown-out Reset Enable bits
  5854                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  5855  300002                     	org	3145730
  5856  300002  FF                 	db	255
  5857                           
  5858                           ;Config register CONFIG2H @ 0x300003
  5859                           ;	Brown Out Reset Voltage selection bits
  5860                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  5861                           ;	ZCD Disable bit
  5862                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  5863                           ;	PPSLOCK bit One-Way Set Enable bit
  5864                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  5865                           ;	Stack Full/Underflow Reset Enable bit
  5866                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5867                           ;	Debugger Enable bit
  5868                           ;	DEBUG = OFF, Background debugger disabled
  5869                           ;	Extended Instruction Set Enable bit
  5870                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  5871  300003                     	org	3145731
  5872  300003  FF                 	db	255
  5873                           
  5874                           ;Config register CONFIG3L @ 0x300004
  5875                           ;	WDT Period Select bits
  5876                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  5877                           ;	WDT operating mode
  5878                           ;	WDTE = OFF, WDT Disabled
  5879  300004                     	org	3145732
  5880  300004  9F                 	db	159
  5881                           
  5882                           ;Config register CONFIG3H @ 0x300005
  5883                           ;	WDT Window Select bits
  5884                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  5885                           ;	WDT input clock selector
  5886                           ;	WDTCCS = SC, Software Control
  5887  300005                     	org	3145733
  5888  300005  FF                 	db	255
  5889                           
  5890                           ;Config register CONFIG4L @ 0x300006
  5891                           ;	Write Protection Block 0
  5892                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5893                           ;	Write Protection Block 1
  5894                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5895                           ;	Write Protection Block 2
  5896                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5897                           ;	Write Protection Block 3
  5898                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5899  300006                     	org	3145734
  5900  300006  FF                 	db	255
  5901                           
  5902                           ;Config register CONFIG4H @ 0x300007
  5903                           ;	Configuration Register Write Protection bit
  5904                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  5905                           ;	Boot Block Write Protection bit
  5906                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5907                           ;	Data EEPROM Write Protection bit
  5908                           ;	WRTD = OFF, Data EEPROM not write-protected
  5909                           ;	Scanner Enable bit
  5910                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  5911                           ;	Low Voltage Programming Enable bit
  5912                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  5913  300007                     	org	3145735
  5914  300007  FF                 	db	255
  5915                           
  5916                           ;Config register CONFIG5L @ 0x300008
  5917                           ;	UserNVM Program Memory Code Protection bit
  5918                           ;	CP = OFF, UserNVM code protection disabled
  5919                           ;	DataNVM Memory Code Protection bit
  5920                           ;	CPD = OFF, DataNVM code protection disabled
  5921  300008                     	org	3145736
  5922  300008  FF                 	db	255
  5923                           
  5924                           ;Config register CONFIG5H @ 0x300009
  5925                           ;	unspecified, using default values
  5926  300009                     	org	3145737
  5927  300009  FF                 	db	255
  5928                           
  5929                           ;Config register CONFIG6L @ 0x30000A
  5930                           ;	Table Read Protection Block 0
  5931                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5932                           ;	Table Read Protection Block 1
  5933                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5934                           ;	Table Read Protection Block 2
  5935                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5936                           ;	Table Read Protection Block 3
  5937                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5938  30000A                     	org	3145738
  5939  30000A  FF                 	db	255
  5940                           
  5941                           ;Config register CONFIG6H @ 0x30000B
  5942                           ;	Boot Block Table Read Protection bit
  5943                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5944  30000B                     	org	3145739
  5945  30000B  FF                 	db	255
  5946                           tosu	equ	0xFFF
  5947                           tosh	equ	0xFFE
  5948                           tosl	equ	0xFFD
  5949                           stkptr	equ	0xFFC
  5950                           pclatu	equ	0xFFB
  5951                           pclath	equ	0xFFA
  5952                           pcl	equ	0xFF9
  5953                           tblptru	equ	0xFF8
  5954                           tblptrh	equ	0xFF7
  5955                           tblptrl	equ	0xFF6
  5956                           tablat	equ	0xFF5
  5957                           prodh	equ	0xFF4
  5958                           prodl	equ	0xFF3
  5959                           indf0	equ	0xFEF
  5960                           postinc0	equ	0xFEE
  5961                           postdec0	equ	0xFED
  5962                           preinc0	equ	0xFEC
  5963                           plusw0	equ	0xFEB
  5964                           fsr0h	equ	0xFEA
  5965                           fsr0l	equ	0xFE9
  5966                           wreg	equ	0xFE8
  5967                           indf1	equ	0xFE7
  5968                           postinc1	equ	0xFE6
  5969                           postdec1	equ	0xFE5
  5970                           preinc1	equ	0xFE4
  5971                           plusw1	equ	0xFE3
  5972                           fsr1h	equ	0xFE2
  5973                           fsr1l	equ	0xFE1
  5974                           bsr	equ	0xFE0
  5975                           indf2	equ	0xFDF
  5976                           postinc2	equ	0xFDE
  5977                           postdec2	equ	0xFDD
  5978                           preinc2	equ	0xFDC
  5979                           plusw2	equ	0xFDB
  5980                           fsr2h	equ	0xFDA
  5981                           fsr2l	equ	0xFD9
  5982                           status	equ	0xFD8

Data Sizes:
    Strings     394
    Constant    0
    Data        76
    BSS         185
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     34     159
    BANK1           256      0     142
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1163_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_19(CODE[32]), STR_18(CODE[25]), STR_17(CODE[29]), STR_16(CODE[3]), 
		 -> STR_15(CODE[26]), STR_14(CODE[16]), STR_13(CODE[22]), STR_12(CODE[15]), 
		 -> STR_11(CODE[21]), STR_10(CODE[16]), STR_9(CODE[20]), STR_8(CODE[24]), 
		 -> STR_7(CODE[16]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[18]), 
		 -> STR_3(CODE[25]), STR_2(CODE[31]), STR_1(CODE[24]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 32
		 -> STR_19(CODE[32]), STR_18(CODE[25]), STR_17(CODE[29]), STR_16(CODE[3]), 
		 -> STR_15(CODE[26]), STR_14(CODE[16]), STR_13(CODE[22]), STR_12(CODE[15]), 
		 -> STR_11(CODE[21]), STR_10(CODE[16]), STR_9(CODE[20]), STR_8(CODE[24]), 
		 -> STR_7(CODE[16]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[18]), 
		 -> STR_3(CODE[25]), STR_2(CODE[31]), STR_1(CODE[24]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_19(CODE[32]), STR_18(CODE[25]), STR_17(CODE[29]), STR_16(CODE[3]), 
		 -> STR_15(CODE[26]), STR_14(CODE[16]), STR_13(CODE[22]), STR_12(CODE[15]), 
		 -> STR_11(CODE[21]), STR_10(CODE[16]), STR_9(CODE[20]), STR_8(CODE[24]), 
		 -> STR_7(CODE[16]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[18]), 
		 -> STR_3(CODE[25]), STR_2(CODE[31]), STR_1(CODE[24]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    FLASH_crc16@data_p	PTR unsigned char  size(2) Largest target is 76
		 -> Header(BANK0[76]), 

    S526Block$dataPtr	PTR unsigned char  size(2) Largest target is 75
		 -> currentBlock(BANK1[74]), 

    currentBlock.dataPtr	PTR unsigned char  size(2) Largest target is 75
		 -> currentBlock.data(BANK1[64]), currentBlock(BANK1[74]), 

    S513MessageHeader$get	PTR FTN()void  size(2) Largest target is 1
		 -> BOOT_GetHeader(), 

    Header.get	PTR FTN()void  size(2) Largest target is 1
		 -> BOOT_GetHeader(), 

    FLASH_WriteBlock@flashWrBufPtr	PTR unsigned char  size(2) Largest target is 76
		 -> currentBlock(BANK1[74]), Header(BANK0[76]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write

Critical Paths under _main in BANK0

    _main->_BOOT_Load
    _BOOT_Load->_BOOT_Write
    _BOOT_Write->_printf
    _BOOT_ReadVersion->_printf
    _BOOT_Read->_printf
    _BOOT_EraseUserFlash->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   41847
                                             32 BANK0      2     2      0
                          _BOOT_Load
                    _DATAEE_ReadByte
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      2     0      2     120
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _BOOT_Load                                            2     2      0   33945
                                             30 BANK0      2     2      0
                _BOOT_EraseUserFlash
                     _BOOT_GetHeader *
                          _BOOT_Read
                   _BOOT_ReadVersion
                         _BOOT_Write
                   _DATAEE_WriteByte
                       _EUSART1_Read
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _BOOT_Write                                          24    24      0    9844
                                              8 BANK0     22    22      0
                   _DATAEE_WriteByte
                      _EUSART1_Write
                   _FLASH_WriteBlock
                        _FLASH_crc16
                             _printf
 ---------------------------------------------------------------------------------
 (3) _FLASH_crc16                                         12     9      3     507
                                              0 COMRAM    12     9      3
 ---------------------------------------------------------------------------------
 (3) _FLASH_WriteBlock                                    12     6      6    1139
                                              5 COMRAM    12     6      6
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (2) _BOOT_ReadVersion                                     0     0      0    7510
                      _EUSART1_Write
                             _printf
 ---------------------------------------------------------------------------------
 (2) _BOOT_Read                                           14    14      0    7634
                                              8 BANK0     14    14      0
                      _EUSART1_Write
                             _printf
 ---------------------------------------------------------------------------------
 (2) _BOOT_GetHeader                                       8     8      0      68
                                              0 COMRAM     8     8      0
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BOOT_EraseUserFlash                                  4     4      0    8321
                                              8 BANK0      4     4      0
                   _DATAEE_WriteByte
                      _EUSART1_Write
                   _FLASH_EraseBlock
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    7488
                                              0 BANK0      8     4      4
                        _FLASH_crc16 (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5990
                                             87 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6    5635
                                             68 COMRAM    19    13      6
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    4219
                                             29 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2665
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1213
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     812
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      44
                                              1 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _FLASH_EraseBlock                                     5     1      4     241
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3     546
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BOOT_Load
     _BOOT_EraseUserFlash
       _DATAEE_WriteByte
       _EUSART1_Write
       _FLASH_EraseBlock
       _printf
         _FLASH_crc16 (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _fputc
               _putch
                 _EUSART1_Write
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
               _toupper
                 _islower
     _BOOT_GetHeader *
       _EUSART1_Read
     _BOOT_Read *
       _EUSART1_Write
       _printf
         _FLASH_crc16 (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _fputc
               _putch
                 _EUSART1_Write
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
               _toupper
                 _islower
     _BOOT_ReadVersion *
       _EUSART1_Write
       _printf
         _FLASH_crc16 (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _fputc
               _putch
                 _EUSART1_Write
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
               _toupper
                 _islower
     _BOOT_Write *
       _DATAEE_WriteByte
       _EUSART1_Write
       _FLASH_WriteBlock
         _FLASH_EraseBlock
       _FLASH_crc16
       _printf
         _FLASH_crc16 (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _fputc
               _putch
                 _EUSART1_Write
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
               _toupper
                 _islower
     _DATAEE_WriteByte *
     _EUSART1_Read *
     _EUSART1_Write *
   _DATAEE_ReadByte
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _printf
     _FLASH_crc16 (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _fputc
           _putch
             _EUSART1_Write
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
           _toupper
             _islower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      8E       8       55.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     22      9F       5       99.4%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     18C       6        0.0%
DATA                 0      0     18C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 31 15:52:38 2021

                                   BOOT_Write@i 00F7                                              l33 1532  
                                            l36 1508                                              l39 14D4  
                                            l92 11EA                                             l232 0DCE  
                                           l242 1262                                             l162 150C  
                                           l138 134A                                             l171 155A  
                                           l155 1466                                             l235 0D96  
                                           l244 1270                                             l245 1280  
                                           l165 1520                                             l422 0F4C  
                                           l239 142E                                             l159 1490  
                                           l183 1546                                             l248 14F0  
                                           l441 1062                                             l418 10D0  
                                           l442 106A                                             l346 0CFE  
                                           l186 153C                                             l189 1550  
                                           l358 0B3E                                             l367 07EA  
                                           l392 0334                                             l288 0C1A  
                                           l289 0C1A                                ??_BOOT_GetHeader 0001  
                                           u970 151C                                             u971 1518  
                                           u980 0F60                                             u981 0F5C  
                                           u990 0F72                                             u991 0F6E  
                                           _pad 0DD0                         __size_of_PMD_Initialize 001C  
                                           tosl 000FFD                                             wreg 000FE8  
                                          l1201 09BA                                            l1211 1386  
                                          l1207 112A                                            l1232 0FE2  
                                          l1240 130A                                            l1208 1132  
                                          l1128 14B8                                            l1217 13F6  
                                          l2201 0F72                                            l1162 0E58  
                                          l2203 0F7C                                            l2211 12C8  
                                          l1251 1188                                            l1171 0376  
                                          l1164 0E94                                            l2205 0F9A  
                                          l2213 12D4                                            l2221 143C  
                                          l2301 043E                                            l1246 1464  
                                          l1262 13BE                                            l2207 0FD0  
                                          l2215 12E6                                            l2223 1440  
                                          l1159 0E16                                            l2303 0450  
                                          l2311 04B0                                            l1256 1190  
                                          l1192 05A8                                            l2401 141A  
                                          l2217 12EA                                            l2225 1458  
                                          l2241 0E0E                                            l2233 0DD0  
                                          l2321 0546                                            l2313 04C0  
                                          l1169 036E                                            l1194 060C  
                                          l1178 040A                                            l2403 141E  
                                          l2219 1430                                            l2251 0E7C  
                                          l2243 0E22                                            l2235 0DE0  
                                          l2331 05BE                                            l2323 0564  
                                          l2315 04C6                                            l2307 048A  
                                          l2411 10DA                                            l2501 1258  
                                          l2405 1422                                            l2245 0E36  
                                          l2237 0DF4                                            l2229 1388  
                                          l2333 05CE                                            l2325 057E  
                                          l2317 04CC                                            l2309 049C  
                                          l2341 0810                                            l2413 10E8  
                                          l2421 1548                                            l2503 125C  
                                          l2407 1424                                            l2255 13C0  
                                          l2191 150C                                            l2247 0E3A  
                                          l2239 0E02                                            l2263 1134  
                                          l2335 05E4                                            l2327 0598  
                                          l2319 052A                                            l2351 087C  
                                          l2343 081E                                            l2415 110E  
                                          l2431 148E                                            l2423 1466  
                                          l2505 1260                                            l2193 151C  
                                          l2249 0E68                                            l2329 05B8  
                                          l2281 038C                                            l2273 0336  
                                          l2353 0892                                            l2361 0918  
                                          l2345 0830                                            l2409 10D2  
                                          l2425 1476                                            l3081 0688  
                                          l2441 0D44                                            l2521 1008  
                                          l2513 0FE4                                            l2601 0058  
                                          l2417 153E                                            l2259 134C  
                                          l2195 1554                                            l2267 116A  
                                          l2291 03CA                                            l2283 0394  
                                          l2275 0346                                            l2363 093C  
                                          l2371 096A                                            l2355 08A0  
                                          l2347 0834                                            l2339 07EC  
                                          l2507 1492                                            l2427 147C  
                                          l3083 0792                                            l2451 0D66  
                                          l2435 0D00                                            l2515 0FEC  
                                          l2523 1050                                            l2611 00F4  
                                          l3075 0CAE                                            l2419 1534  
                                          l2531 11AE                                            l2197 0F4E  
                                          l2269 117C                                            l2293 03D2  
                                          l2285 03B4                                            l2277 0348  
                                          l2373 0978                                            l2365 094A  
                                          l2357 08DC                                            l2349 0858  
                                          l2509 149C                                            l2429 148A  
                                          l2701 0612                                            l2461 0D7E  
                                          l2453 0D6A                                            l2445 0D4A  
                                          l2437 0D18                                            l2517 0FFE  
                                          l2621 0122                                            l2613 00FA  
                                          l3077 00A2                                            l2605 008C  
                                          l2541 11D8                                            l2533 11D0  
                                          l2525 14BA                                            l2391 1408  
                                          l2199 0F60                                            l2295 03EE  
                                          l2287 03BC                                            l2279 0362  
                                          l2367 095E                                            l2703 0632  
                                          l2711 06A6                                            l2471 0DB2  
                                          l2463 0D90                                            l2447 0D5E  
                                          l2439 0D20                                            l2519 1002  
                                          l3079 031E                                            l2607 00B8  
                                          l2551 132C                                            l2543 11DA  
                                          l2535 11D2                                            l2527 1192  
                                          l2393 140C                                            l2385 13F8  
                                          l2297 03FE                                            l2289 03C4  
                                          l2377 0984                                            l2801 0AF2  
                                          l2721 0718                                            l2713 06D2  
                                          l2705 0652                                            l2481 0DCC  
                                          l2473 0DB4                                            l2465 0D98  
                                          l2449 0D62                                            l2641 01B4  
                                          l2633 014E                                            l2625 0134  
                                          l2617 010C                                            l2609 00D6  
                                          l2553 1338                                            l2545 14F2  
                                          l2537 11D4                                            l2529 11A2  
                                          l2491 1244                                            l2395 1414  
                                          l2387 1400                                            l2379 09A8  
                                          l2571 0EAA                                            l2803 0B26  
                                          l2715 06FE                                            l2563 1090  
                                          l2475 0DBE                                            l2467 0D9A  
                                          l2459 0D6E                                            l2651 01DC  
                                          l2643 01C2                                            l2635 015E  
                                          l2627 0134                                            l2619 011C  
                                          l2555 1344                                            l2547 130C  
                                          l2539 11D6                                            l2811 152E  
                                          l2493 1248                                            l2485 1238  
                                          l2397 1416                                            l2389 1404  
                                          l2581 0EEC                                            l2741 0766  
                                          l2733 073E                                            l2725 0722  
                                          l2709 0672                                            l2565 10AE  
                                          l2557 106C                                            l2477 0DC0  
                                          l2469 0DAA                                            l2637 0188  
                                          l2653 01E6                                            l2629 0144  
                                          l2821 14E6                                            l2813 14D6  
                                          l2549 1320                                            l2901 0B94  
                                          l2495 124C                                            l2487 123A  
                                          l2399 1418                                            l2575 0EBA  
                                          l2807 0B36                                            l2751 07B0  
                                          l2743 0774                                            l2735 0750  
                                          l2727 0722                                            l2719 0708  
                                          l2567 10BC                                            l2559 1080  
                                          l2479 0DC2                                            l2671 026C  
                                          l2655 01F8                                            l2663 0210  
                                          l2639 018E                                            l2823 14E8  
                                          l2815 14DC                                            l2911 0BDA  
                                          l2903 0BB0                                            l2497 124E  
                                          l2489 1240                                            l2593 0F3A  
                                          l2585 0F08                                            l2577 0ECA  
                                          l2569 0E96                                            l2753 07B4  
                                          l2729 0734                                            l2681 02D0  
                                          l2673 0276                                            l2665 0220  
                                          l2657 01FE                                            l2649 01D0  
                                          l2841 0C60                                            l2833 0C22  
                                          l2825 14EA                                            l2817 14E0  
                                          l2809 1522                                            l2913 0BEE  
                                          l2905 0BBE                                            l2499 1256  
                                          l2595 0F46                                            l2587 0F1C  
                                          l2579 0EDC                                            l2771 09D6  
                                          l2755 07D8                                            l2739 075A  
                                          l2683 02F4                                            l2675 0288  
                                          l2667 024C                                            l2843 0C68  
                                          l2835 0C22                                            l2827 14EC  
                                          l2819 14E4                                            l2915 0BFC  
                                          l2907 0BC4                                            l2589 0F2A  
                                          l2781 0A2A                                            l2757 07E4  
                                          l2749 077E                                            l2685 02FE  
                                          l2677 0294                                            l2669 025A  
                                          l2597 0020                                            l2853 0C8E  
                                          l2845 0C70                                            l2837 0C36  
                                          l2829 14EE                                            l2909 0BD6  
                                          ?_pad 0013                                            l2791 0A8E  
                                          l2783 0A46                                            l2767 09BC  
                                          l2679 02CA                                            l2599 0024  
                                          l2847 0C78                                            l2839 0C58  
                                          l2793 0A9C                                            l2785 0A56  
                                          l2777 09DE                                            l2769 09CE  
                                          l2689 0308                                            l2849 0C88  
                                          l2857 0C98                                            l2795 0AC4  
                                          l2787 0A68                                            l2779 0A26  
                                          l2699 060E                                            l2859 0CFC  
                                          l2891 0B5E                                            l2797 0AD4  
                                          l2789 0A7C                                            l2893 0B64  
                                          l2895 0B72                                            l2887 0B40  
                                          l2897 0B7E                                            l2889 0B44  
                                          l2899 0B84                                            STR_1 3F35  
                                          STR_2 3E95                                            STR_3 3F04  
                                          STR_4 3F8C                                            STR_5 3F9E  
                                          STR_6 3FAF                                            STR_7 3FE0  
                                          STR_8 3F1D                                            STR_9 3F78  
                                          u1000 0F9A                                            u1001 0F96  
                                          u1010 0FD0                                            u1011 0FCC  
                                          u1100 13F0                                            u1020 130A  
                                          u1101 13EA                                            u1021 1306  
                                          u1110 13F2                                            u1030 1458  
                                          u1031 1454                                            u1120 1380  
                                          u1040 13B8                                            u1200 03EE  
                                          u1121 137A                                            u1041 13B2  
                                          u1201 03EA                                            u1130 1382  
                                          u1050 13BA                                            u1210 0438  
                                          u1211 0432                                            u1060 0DE0  
                                          u1140 1164                                            u1300 057E  
                                          u1220 043A                                            u1061 0DDC  
                                          u1141 115E                                            u1301 057A  
                                          u1070 0E02                                            u1150 1166  
                                          u1310 0598                                            u1230 0450  
                                          u1071 0DFE                                            u1311 0594  
                                          u1231 044C                                            u1080 0E58  
                                          u1160 117C                                            u1320 05A8  
                                          u1240 0484                                            u1400 1476  
                                          u1081 0E54                                            u1161 1178  
                                          u1321 05A4                                            u1241 047E  
                                          u1401 1472                                            u1090 0E68  
                                          u1330 05B8                                            u1250 0486  
                                          u1170 0346                                            u1410 148A  
                                          u1091 0E64                                            u1331 05B4  
                                          u1171 0342                                            u1411 1486  
                                          u1260 049C                                            u1180 0362  
                                          u1340 0810                                            u1420 0D44  
                                          u1500 1062                                            u1261 0498  
                                          u1181 035E                                            u1341 080C  
                                          u1421 0D40                                            u1501 105E  
                                          _LATA 000F83                                            u1270 0504  
                                          u1190 038C                                            u1350 0858  
                                          u1510 1080                                            u1430 0D90  
                                          _LATB 000F84                                            u1191 0388  
                                          u1351 0854                                            u1511 107C  
                                          u1431 0D8C                                            _LATC 000F85  
                                          u1280 0546                                            u1360 087C  
                                          u1520 0EAA                                            u1440 0DAA  
                                          u1600 01F8                                            u1281 0542  
                                          u1361 0878                                            u1521 0EA6  
                                          u1441 0DA6                                            u1601 01F4  
                                          u1290 0564                                            u1370 093C  
                                          u1530 0F04                                            u1610 024C  
                                          u1291 0560                                            u1275 04F2  
                                          u1371 0938                                            u1531 0F00  
                                          u1611 0248                                            u1460 1270  
                                          u1700 0A46                                            u1620 02F4  
                                          u1540 00D6                                            u1461 126C  
                                          u1701 0A42                                            u1621 02F0  
                                          u1541 00D2                                            u1390 112A  
                                          u1710 0A68                                            u1630 06D2  
                                          u1550 00F4                                            u1391 1126  
                                          u1711 0A64                                            u1631 06CE  
                                          u1455 0DCA                                            u1551 00F0  
                                          u1720 0AC4                                            u1640 06FE  
                                          u1456 0DCC                                            u1560 011C  
                                          u1800 0BB0                                            u1385 142C  
                                          u1721 0AC0                                            u1641 06FA  
                                          u1561 0118                                            u1801 0BAC  
                                          u1386 142E                                            u1730 0AEE  
                                          u1650 0718                                            u1570 0144  
                                          u1810 0BD6                                            u1475 127E  
                                          u1731 0AEA                                            u1651 0714  
                                          u1571 0140                                            u1811 0BD2  
                                          u1476 1280                                            u1660 0734  
                                          u1580 015E                                            u1820 0BEE  
                                          u1661 0730                                            u1485 1010  
                                          u1581 015A                                            u1821 0BEA  
                                          u1670 0750                                            u1590 0188  
                                          u1750 0C36                                            u1671 074C  
                                          u1495 1024                                            u1591 0184  
                                          u1751 0C32                                            u1744 0B16  
                                          u1680 07D8                                            u1745 0B10  
                                          u1681 07D4                                            u1690 0A0E  
                                          u1780 0B72                                            u1781 0B6E  
                                          u1917 0B50                                            u1790 0B94  
                                          u1695 0A04                                            u1927 0C08  
                                          u1791 0B90                                            u1768 0C40  
                                          u1769 0C54                                            _PMD0 000EE1  
                                          _PMD1 000EE2                                            _PMD2 000EE3  
                                          _PMD3 000EE4                                            _PMD4 000EE5  
                                          _PMD5 000EE6                              __size_of_BOOT_Load 00DE  
                            __size_of_BOOT_Read 01DE                                            _WPUA 000F10  
                                          _WPUB 000F18                                            _WPUC 000F20  
                                          _WPUE 000F2D                                   _EUSART1_Write 150A  
                                          _dbuf 00BB                                            _main 0B40  
                                 ?_EUSART1_Read 0001                                            _prec 00B4  
                                          _nout 00B0                                            pad@i 001A  
                                          pad@p 0017                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 001C  
                                          fsr2l 000FD9                                            _xtoa 0336  
                             ?_FLASH_WriteBlock 0006                                            start 001C  
                            ??_FLASH_WriteBlock 000C                                    ___param_bank 000000  
                                         ??_pad 0019                       __size_of_DATAEE_WriteByte 004A  
                __size_of_OSCILLATOR_Initialize 0018                   __end_of_OSCILLATOR_Initialize 150A  
                  __size_of_BOOT_EraseUserFlash 00B8                                           ?_main 0001  
                                         STR_10 3FC0                                           STR_11 3F63  
                                         STR_12 3FF0                                           STR_13 3F4D  
                                         STR_14 3FD0                                           STR_15 3ED1  
                                         STR_16 3E92                                           STR_17 3EB4  
                                         STR_18 3EEB                                           STR_19 3E75  
                                         ?_xtoa 001E                                           _OSCEN 000EDC  
                                  vfpfcnvrt@fmt 0047                                    vfpfcnvrt@llu 004F  
                                         _TRISA 000F88                                           _TRISB 000F89  
                                         _TRISC 000F8A                             __size_of_BOOT_Write 0316  
                               _DATAEE_ReadByte 14D6                                           _flags 00B6  
                                         _index 00AC                                           _fputc 0F4E  
                               __end_of_isalpha 1388                                           _fputs 12C8  
                                         pad@fp 0013                                           _width 00B2  
                                         _putch 1552                                 __end_of_islower 13C0  
                                ?_EUSART1_Write 0001                                 __end_of_isupper 13F8  
                                         pclath 000FFA                                           tablat 000FF5  
                                ??_EUSART1_Read 0001                                           nvmcon 000F81  
                                         status 000FD8                                           xtoa@c 0043  
                                         xtoa@d 0020                                           xtoa@i 0041  
                                         xtoa@n 0039                                           xtoa@p 0035  
                                         xtoa@w 0037                                           xtoa@x 0028  
                               __end_of_toupper 1192              _EUSART1_DefaultFramingErrorHandler 000000  
                                  _toupper$1315 000D                                 __initialization 1282  
                    __end_of_EUSART1_Initialize 134C                                    __end_of_main 0C22  
                                  __end_of_xtoa 060E                               __end_of_BOOT_Load 0D00  
                             __end_of_BOOT_Read 07EC                            __size_of_FLASH_crc16 0088  
                                        ??_main 00FB                                          ??_xtoa 0029  
                                 __activetblptr 000002                       FLASH_WriteBlock@writeAddr 0006  
                                        ?_fputc 0003                                          ?_fputs 000C  
                                        _ANSELA 000F11                                          ?_putch 0001  
                                        _ANSELB 000F19                                          _ANSELC 000F21  
                                        _RC1REG 000F99                                          _RC1STA 000F9D  
                                        _ODCONA 000F0F                                          _ODCONB 000F17  
                                        _ODCONC 000F1F                                          _RC6PPS 000EFD  
                                        _INLVLA 000F0D                                          _INLVLB 000F15  
                                        _INLVLC 000F1D                                          _INLVLE 000F2A  
                                        _TABLAT 000FF5                       __size_of_FLASH_EraseBlock 0038  
                                        _OSCFRQ 000EDE                                          _NVMDAT 000F80  
                                        _RX1PPS 000EB5                                          _TX1REG 000F9A  
                                        _TX1STA 000F9E                                          _Header 0060  
                                  vfprintf@cfmt 005E                        ?_EUSART1_SetErrorHandler 0001  
                                        clear_0 12AC                                          clear_1 12B8  
                                        _printf 1492                                          pad@buf 0015  
              ??_EUSART1_SetOverrunErrorHandler 0003                 ?_EUSART1_SetOverrunErrorHandler 0001  
                       __end_of_DATAEE_ReadByte 14F2                                          _strlen 1430  
                                        fputc@c 0003                                  _PMD_Initialize 14BA  
                                        fputs@c 0010                                          fputs@i 0011  
                                        fputs@s 000C                                       ??_isalpha 0003  
                                     ??_islower 0003                                    __mediumconst 3E74  
                                        tblptrh 000FF7                                       ??_isupper 0003  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf 1134                                 ??_EUSART1_Write 0001  
                                        xtoa@fp 001E                               ?_BOOT_ReadVersion 0001  
                                     ??_toupper 0009                               _SYSTEM_Initialize 1522  
                            ??_BOOT_ReadVersion 0060                                      __accesstop 0060  
                       __end_of__initialization 12BE                              ?_SYSTEM_Initialize 0001  
                                  ??_BOOT_Write 00E3                                   ___rparam_used 000001  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 11EC  
                           ??_SYSTEM_Initialize 0003                                _DATAEE_WriteByte 1238  
                                 __end_of_fputc 0FE4                                   __end_of_fputs 130C  
                                 __end_of_putch 155C                          __end_of_PMD_Initialize 14D6  
                          __end_of_EUSART1_Read 1492                                  _tempDataBuffer 0100  
                            __end_of_BOOT_Write 0336                     FLASH_WriteBlock@GIEBitValue 0010  
                                       ??_fputc 0007                       __end_of_SYSTEM_Initialize 1534  
                                       ??_fputs 0010                                         ??_putch 0002  
                                FLASH_crc16@crc 000A                                      __pbssBANK0 00AC  
                                    __pbssBANK1 0100                             _BOOT_EraseUserFlash 0E96  
               __end_of_EUSART1_SetErrorHandler 1552                            ?_BOOT_EraseUserFlash 0001  
                                       ?_printf 00DB                                 ?_PMD_Initialize 0001  
                     __size_of_FLASH_WriteBlock 00D0                                         ?_strlen 0001  
        __end_of_EUSART1_SetFramingErrorHandler 1548         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 153E                                ?_DATAEE_ReadByte 0001  
                                       _SP1BRGH 000F9C                                         _SP1BRGL 000F9B  
                                       _OSCCON1 000ED8                                         _OSCCON3 000EDA  
                            __size_of_vfpfcnvrt 01D0                                         _TBLPTRH 000FF7  
                                       _TBLPTRL 000FF6                                         _TBLPTRU 000FF8  
                          BOOT_Write@max_length 00EF                                         _NVMADRH 000F7F  
                                       _NVMADRL 000F7E                                         _OSCTUNE 000EDD  
                                       _NVMCON2 000F82                                         _SLRCONA 000F0E  
                                       _SLRCONB 000F16                                         _SLRCONC 000F1E  
                              _FLASH_EraseBlock 13F8                            DATAEE_WriteByte@bAdd 0001  
                                       __Hparam 0000                                         __Lparam 0000  
                                     ?_vfprintf 0058                                         __pcinit 1282  
                         ??_BOOT_EraseUserFlash 0060                                         __ramtop 0F00  
                                       __ptext0 0B40                                         __ptext1 1522  
                                       __ptext2 14BA                                         __ptext3 1192  
                                       __ptext4 14F2                                         __ptext5 130C  
                                       __ptext6 1534                                         __ptext7 153E  
                                       __ptext8 1548                                         __ptext9 14D6  
                               __size_of_printf 0028                            BOOT_Read@max_address 00E9  
                    BOOT_EraseUserFlash@address 00E3                                 __size_of_strlen 0036  
                         _OSCILLATOR_Initialize 14F2                                    __size_of_pad 00C6  
                                       _isalpha 134C                                       _BOOT_Load 0C22  
                                     _BOOT_Read 060E                              _EUSART1_Initialize 130C  
                                       _islower 1388                        ??_PIN_MANAGER_Initialize 0001  
                                       _isupper 13C0                      __size_of_SYSTEM_Initialize 0012  
                                       _toupper 1134                            end_of_initialization 12BE  
                          BOOT_Read@min_address 00EC                             ?_EUSART1_Initialize 0001  
                       __size_of_BOOT_GetHeader 0184                               fp__BOOT_GetHeader 0000  
                                       fputc@fp 0005                                   __Lmediumconst 3E74  
                   _EUSART1_OverrunErrorHandler 018C                                         fputs@fp 000E  
                                    _tempBuffer 00B8                               __end_of_vfpfcnvrt 09BC  
                                 ??_FLASH_crc16 0004                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 002C                                      ??_vfprintf 005E  
                          ??_EUSART1_Initialize 0003                                         strlen@a 0003  
                                       strlen@s 0001                                       _PORTAbits 000F8D  
                                    BOOT_Read@i 00E7                                      ?_BOOT_Load 0001  
                                    ?_BOOT_Read 0001                               FLASH_crc16@data_p 0001  
                             FLASH_crc16@length 0003                   FLASH_WriteBlock@flashWrBufPtr 000A  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 0001  
                      __end_of_DATAEE_WriteByte 1282                        FLASH_EraseBlock@baseAddr 0001  
                                  _EUSART1_Read 1466                               FLASH_WriteBlock@i 0011  
                     __size_of_BOOT_ReadVersion 0066                                     vfpfcnvrt@ap 0049  
                                   vfpfcnvrt@fp 0045                                _FLASH_WriteBlock 0D00  
                        ?_OSCILLATOR_Initialize 0001                             __end_of_FLASH_crc16 106C  
                                __end_of_printf 14BA                                  __end_of_strlen 1466  
                           start_initialization 1282                 __size_of_PIN_MANAGER_Initialize 005A  
                                   __end_of_pad 0E96                                     putch@txData 0002  
                         __end_of_EUSART1_Write 1522                             DATAEE_ReadByte@bAdd 0001  
                                   vfprintf@fmt 005A                                ??_PMD_Initialize 0001  
                                   __pdataBANK0 0060                     FLASH_EraseBlock@GIEBitValue 0005  
                      __end_of_FLASH_EraseBlock 1430                                        ??_printf 0060  
                                      ??_strlen 0003                                     ??_BOOT_Load 00F9  
                                   ??_BOOT_Read 00E3                                   __pcstackBANK0 00DB  
                                _BOOT_GetHeader 09BC                                    _currentBlock 0140  
              ??_EUSART1_SetFramingErrorHandler 0003                 ?_EUSART1_SetFramingErrorHandler 0001  
                                     __pnvBANK0 00FD                                       __pnvBANK1 018A  
                               BOOT_GetHeader@i 0007                          _PIN_MANAGER_Initialize 1192  
                                 __pmediumconst 3E74                                     _FLASH_crc16 0FE4  
                             __size_of_vfprintf 0062                                        _BAUD1CON 000F9F  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        ?_isalpha 0001  
                          _EUSART1_ErrorHandler 018A                                        ?_islower 0001  
                                      ?_isupper 0001                         _EUSART1_SetErrorHandler 1548  
                        __end_of_BOOT_GetHeader 0B40                                  __size_of_fputc 0096  
                                __size_of_fputs 0044                        __size_of_DATAEE_ReadByte 001C  
                                      ?_toupper 0007                                       _exit_boot 00B9  
                                __size_of_putch 000A                  FLASH_WriteBlock@blockStartAddr 000C  
                           BOOT_Read@max_length 00EF                           BOOT_Write@max_address 00E7  
       EUSART1_SetErrorHandler@interruptHandler 0001                                        _PIR3bits 000ECD  
                                      _PIR7bits 000ED1                     __end_of_BOOT_EraseUserFlash 0F4E  
                              _BOOT_ReadVersion 106C                           BOOT_Write@min_address 00EB  
                                     _vfpfcnvrt 07EC                                       _xtoa$1238 0031  
                                     _xtoa$1239 0033                           DATAEE_WriteByte@bData 0003  
                               ?_BOOT_GetHeader 0001                                      vfpfcnvrt@c 0057  
                                     copy_data0 129A                               ?_DATAEE_WriteByte 0001  
                      __end_of_FLASH_WriteBlock 0DD0                              ??_DATAEE_WriteByte 0004  
                                      __Hrparam 0000                                      vfprintf@ap 005C  
                                      __Lrparam 0000                                      vfprintf@fp 0058  
                       ??_OSCILLATOR_Initialize 0001                     __size_of_EUSART1_Initialize 0040  
                                    ?_vfpfcnvrt 0045                       ??_EUSART1_SetErrorHandler 0003  
                   _EUSART1_DefaultErrorHandler 000000                                    FLASH_crc16@x 000C  
                              __size_of_isalpha 003C                                __size_of_islower 0038  
                                      __ptext10 0C22                                        __ptext11 0020  
                                      __ptext20 10D2                                        __ptext12 0FE4  
                                      __ptext21 07EC                                        __ptext13 0D00  
                                      __ptext30 150A                                        __ptext22 0336  
                                      __ptext14 106C                                        __ptext31 13C0  
                                      __ptext23 1134                                        __ptext15 060E  
                                      __ptext32 134C                                        __ptext24 1388  
                                      __ptext16 09BC                                        __ptext33 13F8  
                                      __ptext25 0DD0                                        __ptext17 1466  
                                      __ptext34 1238                                        __ptext26 1430  
                                      __ptext18 0E96                                        __ptext35 0000  
                                      __ptext27 12C8                                        __ptext19 1492  
                                      __ptext28 0F4E                                        __ptext29 1552  
                              __size_of_isupper 0038                     DATAEE_WriteByte@GIEBitValue 0004  
                              __size_of_toupper 005E                                   __size_of_main 00E2  
                                 __size_of_xtoa 02D8                                      _BOOT_Write 0020  
                             ??_DATAEE_ReadByte 0003                                      _RC1STAbits 000F9D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0001                                        _vfprintf 10D2  
                                     printf@fmt 00DB                     _EUSART1_FramingErrorHandler 00FD  
                             ?_FLASH_EraseBlock 0001                              ??_FLASH_EraseBlock 0005  
                                    _INTCONbits 000FF2                                     _NVMCON1bits 000F81  
                                      isalpha@c 0001                                        islower@c 0001  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 153E  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 1534  
                                      isupper@c 0001                                    ?_FLASH_crc16 0001  
                                      printf@ap 00E1  EUSART1_SetFramingErrorHandler@interruptHandler 0001  
                                   ??_vfpfcnvrt 004B                          __size_of_EUSART1_Write 0018  
                            _eusart1RxLastError 00BA                                        toupper@c 0007  
                                    _TX1STAbits 000F9E                        __end_of_BOOT_ReadVersion 10D2  
                __end_of_PIN_MANAGER_Initialize 11EC                                     ?_BOOT_Write 0001  
